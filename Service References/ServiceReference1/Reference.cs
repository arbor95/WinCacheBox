//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinCachebox.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointsSummaryResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class FavoritePointsSummaryResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheFavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UsersFavoritePointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> CacheFavoritePoints {
            get {
                return this.CacheFavoritePointsField;
            }
            set {
                if ((this.CacheFavoritePointsField.Equals(value) != true)) {
                    this.CacheFavoritePointsField = value;
                    this.RaisePropertyChanged("CacheFavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> UsersFavoritePoints {
            get {
                return this.UsersFavoritePointsField;
            }
            set {
                if ((this.UsersFavoritePointsField.Equals(value) != true)) {
                    this.UsersFavoritePointsField = value;
                    this.RaisePropertyChanged("UsersFavoritePoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class StatusResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse[] WarningsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ExceptionDetails {
            get {
                return this.ExceptionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionDetailsField, value) != true)) {
                    this.ExceptionDetailsField = value;
                    this.RaisePropertyChanged("ExceptionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public WinCachebox.ServiceReference1.StatusResponse[] Warnings {
            get {
                return this.WarningsField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningsField, value) != true)) {
                    this.WarningsField = value;
                    this.RaisePropertyChanged("Warnings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserFavoritePointsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserFavoritePointsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FavoritePointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((this.FavoritePointsField.Equals(value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersWhoFavoritedCacheResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersWhoFavoritedCacheResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member[] UsersWhoFavoritedCacheField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member[] UsersWhoFavoritedCache {
            get {
                return this.UsersWhoFavoritedCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersWhoFavoritedCacheField, value) != true)) {
                    this.UsersWhoFavoritedCacheField = value;
                    this.RaisePropertyChanged("UsersWhoFavoritedCache");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Member : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BannerUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GalleryImageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LatLngPoint HomeCoordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MembershipType MemberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PublicGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvatarUrl {
            get {
                return this.AvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarUrlField, value) != true)) {
                    this.AvatarUrlField = value;
                    this.RaisePropertyChanged("AvatarUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BannerUrl {
            get {
                return this.BannerUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.BannerUrlField, value) != true)) {
                    this.BannerUrlField = value;
                    this.RaisePropertyChanged("BannerUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FindCount {
            get {
                return this.FindCountField;
            }
            set {
                if ((this.FindCountField.Equals(value) != true)) {
                    this.FindCountField = value;
                    this.RaisePropertyChanged("FindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GalleryImageCount {
            get {
                return this.GalleryImageCountField;
            }
            set {
                if ((this.GalleryImageCountField.Equals(value) != true)) {
                    this.GalleryImageCountField = value;
                    this.RaisePropertyChanged("GalleryImageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HideCount {
            get {
                return this.HideCountField;
            }
            set {
                if ((this.HideCountField.Equals(value) != true)) {
                    this.HideCountField = value;
                    this.RaisePropertyChanged("HideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.LatLngPoint HomeCoordinates {
            get {
                return this.HomeCoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeCoordinatesField, value) != true)) {
                    this.HomeCoordinatesField = value;
                    this.RaisePropertyChanged("HomeCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.MembershipType MemberType {
            get {
                return this.MemberTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberTypeField, value) != true)) {
                    this.MemberTypeField = value;
                    this.RaisePropertyChanged("MemberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PublicGuid {
            get {
                return this.PublicGuidField;
            }
            set {
                if ((this.PublicGuidField.Equals(value) != true)) {
                    this.PublicGuidField = value;
                    this.RaisePropertyChanged("PublicGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatLngPoint", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Utilities")]
    [System.SerializableAttribute()]
    public partial class LatLngPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class MembershipType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MemberTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberTypeId {
            get {
                return this.MemberTypeIdField;
            }
            set {
                if ((this.MemberTypeIdField.Equals(value) != true)) {
                    this.MemberTypeIdField = value;
                    this.RaisePropertyChanged("MemberTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberTypeName {
            get {
                return this.MemberTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberTypeNameField, value) != true)) {
                    this.MemberTypeNameField = value;
                    this.RaisePropertyChanged("MemberTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCacheIdsFavoritedByUserResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetCacheIdsFavoritedByUserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCachesFavoritedByUserResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetCachesFavoritedByUserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.FavoritePointCacheInfo[] GeocachesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.FavoritePointCacheInfo[] Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointCacheInfo", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FavoritePointCacheInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheType CacheTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheTitle {
            get {
                return this.CacheTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTitleField, value) != true)) {
                    this.CacheTitleField = value;
                    this.RaisePropertyChanged("CacheTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.GeocacheType CacheType {
            get {
                return this.CacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTypeField, value) != true)) {
                    this.CacheTypeField = value;
                    this.RaisePropertyChanged("CacheType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeocacheTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsGrandfatheredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeocacheTypeId {
            get {
                return this.GeocacheTypeIdField;
            }
            set {
                if ((this.GeocacheTypeIdField.Equals(value) != true)) {
                    this.GeocacheTypeIdField = value;
                    this.RaisePropertyChanged("GeocacheTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheTypeName {
            get {
                return this.GeocacheTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeNameField, value) != true)) {
                    this.GeocacheTypeNameField = value;
                    this.RaisePropertyChanged("GeocacheTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContainer {
            get {
                return this.IsContainerField;
            }
            set {
                if ((this.IsContainerField.Equals(value) != true)) {
                    this.IsContainerField = value;
                    this.RaisePropertyChanged("IsContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsGrandfathered {
            get {
                return this.IsGrandfatheredField;
            }
            set {
                if ((this.IsGrandfatheredField.Equals(value) != true)) {
                    this.IsGrandfatheredField = value;
                    this.RaisePropertyChanged("IsGrandfathered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentTypeId {
            get {
                return this.ParentTypeIdField;
            }
            set {
                if ((this.ParentTypeIdField.Equals(value) != true)) {
                    this.ParentTypeIdField = value;
                    this.RaisePropertyChanged("ParentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserCount {
            get {
                return this.UserCountField;
            }
            set {
                if ((this.UserCountField.Equals(value) != true)) {
                    this.UserCountField = value;
                    this.RaisePropertyChanged("UserCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBookmarkListsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBookmarkListsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.BookmarkListEntry[] BookmarkListsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.BookmarkListEntry[] BookmarkLists {
            get {
                return this.BookmarkListsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkListsField, value) != true)) {
                    this.BookmarkListsField = value;
                    this.RaisePropertyChanged("BookmarkLists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkListEntry", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class BookmarkListEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ListGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsSharedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsSpecialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ListTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ListID {
            get {
                return this.ListIDField;
            }
            set {
                if ((this.ListIDField.Equals(value) != true)) {
                    this.ListIDField = value;
                    this.RaisePropertyChanged("ListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Guid ListGUID {
            get {
                return this.ListGUIDField;
            }
            set {
                if ((this.ListGUIDField.Equals(value) != true)) {
                    this.ListGUIDField = value;
                    this.RaisePropertyChanged("ListGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ListName {
            get {
                return this.ListNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ListNameField, value) != true)) {
                    this.ListNameField = value;
                    this.RaisePropertyChanged("ListName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ListDescription {
            get {
                return this.ListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ListDescriptionField, value) != true)) {
                    this.ListDescriptionField = value;
                    this.RaisePropertyChanged("ListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int NumberOfItems {
            get {
                return this.NumberOfItemsField;
            }
            set {
                if ((this.NumberOfItemsField.Equals(value) != true)) {
                    this.NumberOfItemsField = value;
                    this.RaisePropertyChanged("NumberOfItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool ListIsShared {
            get {
                return this.ListIsSharedField;
            }
            set {
                if ((this.ListIsSharedField.Equals(value) != true)) {
                    this.ListIsSharedField = value;
                    this.RaisePropertyChanged("ListIsShared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool ListIsPublic {
            get {
                return this.ListIsPublicField;
            }
            set {
                if ((this.ListIsPublicField.Equals(value) != true)) {
                    this.ListIsPublicField = value;
                    this.RaisePropertyChanged("ListIsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool ListIsArchived {
            get {
                return this.ListIsArchivedField;
            }
            set {
                if ((this.ListIsArchivedField.Equals(value) != true)) {
                    this.ListIsArchivedField = value;
                    this.RaisePropertyChanged("ListIsArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool ListIsSpecial {
            get {
                return this.ListIsSpecialField;
            }
            set {
                if ((this.ListIsSpecialField.Equals(value) != true)) {
                    this.ListIsSpecialField = value;
                    this.RaisePropertyChanged("ListIsSpecial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int ListTypeID {
            get {
                return this.ListTypeIDField;
            }
            set {
                if ((this.ListTypeIDField.Equals(value) != true)) {
                    this.ListTypeIDField = value;
                    this.RaisePropertyChanged("ListTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodeRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GeocodeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocodeStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocodeString {
            get {
                return this.GeocodeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocodeStringField, value) != true)) {
                    this.GeocodeStringField = value;
                    this.RaisePropertyChanged("GeocodeString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocodeResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocodeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsPhoneTileSearchRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class WindowsPhoneTileSearchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TileUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMetricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.PointRadiusFilter PointRadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.NotFoundByUsersFilter NotFoundByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TerrainFilter TerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheNameFilter GeocacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.DifficultyFilter DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CacheCodeFilter CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheTypeFilter GeocacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheContainerSizeFilter GeocacheContainerSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheExclusionsFilter GeocacheExclusionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.FavoritePointsFilter FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.HiddenByUsersFilter HiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.NotHiddenByUsersFilter NotHiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ViewportFilter ViewportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.BookmarksExcludeFilter BookmarksExcludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CachePublishedDateFilter CachePublishedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TileUrl {
            get {
                return this.TileUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.TileUrlField, value) != true)) {
                    this.TileUrlField = value;
                    this.RaisePropertyChanged("TileUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsMetric {
            get {
                return this.IsMetricField;
            }
            set {
                if ((this.IsMetricField.Equals(value) != true)) {
                    this.IsMetricField = value;
                    this.RaisePropertyChanged("IsMetric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public WinCachebox.ServiceReference1.PointRadiusFilter PointRadius {
            get {
                return this.PointRadiusField;
            }
            set {
                if ((object.ReferenceEquals(this.PointRadiusField, value) != true)) {
                    this.PointRadiusField = value;
                    this.RaisePropertyChanged("PointRadius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public WinCachebox.ServiceReference1.NotFoundByUsersFilter NotFoundByUsers {
            get {
                return this.NotFoundByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotFoundByUsersField, value) != true)) {
                    this.NotFoundByUsersField = value;
                    this.RaisePropertyChanged("NotFoundByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public WinCachebox.ServiceReference1.TerrainFilter Terrain {
            get {
                return this.TerrainField;
            }
            set {
                if ((object.ReferenceEquals(this.TerrainField, value) != true)) {
                    this.TerrainField = value;
                    this.RaisePropertyChanged("Terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public WinCachebox.ServiceReference1.GeocacheNameFilter GeocacheName {
            get {
                return this.GeocacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNameField, value) != true)) {
                    this.GeocacheNameField = value;
                    this.RaisePropertyChanged("GeocacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public WinCachebox.ServiceReference1.DifficultyFilter Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyField, value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public WinCachebox.ServiceReference1.CacheCodeFilter CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public WinCachebox.ServiceReference1.GeocacheTypeFilter GeocacheType {
            get {
                return this.GeocacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeField, value) != true)) {
                    this.GeocacheTypeField = value;
                    this.RaisePropertyChanged("GeocacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public WinCachebox.ServiceReference1.GeocacheContainerSizeFilter GeocacheContainerSize {
            get {
                return this.GeocacheContainerSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheContainerSizeField, value) != true)) {
                    this.GeocacheContainerSizeField = value;
                    this.RaisePropertyChanged("GeocacheContainerSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public WinCachebox.ServiceReference1.GeocacheExclusionsFilter GeocacheExclusions {
            get {
                return this.GeocacheExclusionsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheExclusionsField, value) != true)) {
                    this.GeocacheExclusionsField = value;
                    this.RaisePropertyChanged("GeocacheExclusions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public WinCachebox.ServiceReference1.FavoritePointsFilter FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoritePointsField, value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public WinCachebox.ServiceReference1.HiddenByUsersFilter HiddenByUsers {
            get {
                return this.HiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.HiddenByUsersField, value) != true)) {
                    this.HiddenByUsersField = value;
                    this.RaisePropertyChanged("HiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public WinCachebox.ServiceReference1.NotHiddenByUsersFilter NotHiddenByUsers {
            get {
                return this.NotHiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotHiddenByUsersField, value) != true)) {
                    this.NotHiddenByUsersField = value;
                    this.RaisePropertyChanged("NotHiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public WinCachebox.ServiceReference1.ViewportFilter Viewport {
            get {
                return this.ViewportField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewportField, value) != true)) {
                    this.ViewportField = value;
                    this.RaisePropertyChanged("Viewport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public WinCachebox.ServiceReference1.BookmarksExcludeFilter BookmarksExclude {
            get {
                return this.BookmarksExcludeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarksExcludeField, value) != true)) {
                    this.BookmarksExcludeField = value;
                    this.RaisePropertyChanged("BookmarksExclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public WinCachebox.ServiceReference1.CachePublishedDateFilter CachePublishedDate {
            get {
                return this.CachePublishedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CachePublishedDateField, value) != true)) {
                    this.CachePublishedDateField = value;
                    this.RaisePropertyChanged("CachePublishedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PointRadiusFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class PointRadiusFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DistanceInMetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LatLngPoint PointField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DistanceInMeters {
            get {
                return this.DistanceInMetersField;
            }
            set {
                if ((this.DistanceInMetersField.Equals(value) != true)) {
                    this.DistanceInMetersField = value;
                    this.RaisePropertyChanged("DistanceInMeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.LatLngPoint Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotFoundByUsersFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class NotFoundByUsersFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UserNamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] UserNames {
            get {
                return this.UserNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNamesField, value) != true)) {
                    this.UserNamesField = value;
                    this.RaisePropertyChanged("UserNames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerrainFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TerrainFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MinTerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MaxTerrainField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MinTerrain {
            get {
                return this.MinTerrainField;
            }
            set {
                if ((this.MinTerrainField.Equals(value) != true)) {
                    this.MinTerrainField = value;
                    this.RaisePropertyChanged("MinTerrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<double> MaxTerrain {
            get {
                return this.MaxTerrainField;
            }
            set {
                if ((this.MaxTerrainField.Equals(value) != true)) {
                    this.MaxTerrainField = value;
                    this.RaisePropertyChanged("MaxTerrain");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheNameFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheNameFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheName {
            get {
                return this.GeocacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNameField, value) != true)) {
                    this.GeocacheNameField = value;
                    this.RaisePropertyChanged("GeocacheName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DifficultyFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DifficultyFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MinDifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MaxDifficultyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MinDifficulty {
            get {
                return this.MinDifficultyField;
            }
            set {
                if ((this.MinDifficultyField.Equals(value) != true)) {
                    this.MinDifficultyField = value;
                    this.RaisePropertyChanged("MinDifficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<double> MaxDifficulty {
            get {
                return this.MaxDifficultyField;
            }
            set {
                if ((this.MaxDifficultyField.Equals(value) != true)) {
                    this.MaxDifficultyField = value;
                    this.RaisePropertyChanged("MaxDifficulty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheCodeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CacheCodeFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheTypeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheTypeFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheTypeIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] GeocacheTypeIds {
            get {
                return this.GeocacheTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeIdsField, value) != true)) {
                    this.GeocacheTypeIdsField = value;
                    this.RaisePropertyChanged("GeocacheTypeIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheContainerSizeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheContainerSizeFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheContainerSizeIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] GeocacheContainerSizeIds {
            get {
                return this.GeocacheContainerSizeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheContainerSizeIdsField, value) != true)) {
                    this.GeocacheContainerSizeIdsField = value;
                    this.RaisePropertyChanged("GeocacheContainerSizeIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheExclusionsFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheExclusionsFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasCorrectedCoordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasPersonalCacheNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PublishedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasCorrectedCoordinates {
            get {
                return this.HasCorrectedCoordinatesField;
            }
            set {
                if ((this.HasCorrectedCoordinatesField.Equals(value) != true)) {
                    this.HasCorrectedCoordinatesField = value;
                    this.RaisePropertyChanged("HasCorrectedCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasPersonalCacheNote {
            get {
                return this.HasPersonalCacheNoteField;
            }
            set {
                if ((this.HasPersonalCacheNoteField.Equals(value) != true)) {
                    this.HasPersonalCacheNoteField = value;
                    this.RaisePropertyChanged("HasPersonalCacheNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Premium {
            get {
                return this.PremiumField;
            }
            set {
                if ((this.PremiumField.Equals(value) != true)) {
                    this.PremiumField = value;
                    this.RaisePropertyChanged("Premium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Published {
            get {
                return this.PublishedField;
            }
            set {
                if ((this.PublishedField.Equals(value) != true)) {
                    this.PublishedField = value;
                    this.RaisePropertyChanged("Published");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointsFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FavoritePointsFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinFavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxFavoritePointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinFavoritePoints {
            get {
                return this.MinFavoritePointsField;
            }
            set {
                if ((this.MinFavoritePointsField.Equals(value) != true)) {
                    this.MinFavoritePointsField = value;
                    this.RaisePropertyChanged("MinFavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> MaxFavoritePoints {
            get {
                return this.MaxFavoritePointsField;
            }
            set {
                if ((this.MaxFavoritePointsField.Equals(value) != true)) {
                    this.MaxFavoritePointsField = value;
                    this.RaisePropertyChanged("MaxFavoritePoints");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HiddenByUsersFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class HiddenByUsersFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UserNamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] UserNames {
            get {
                return this.UserNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNamesField, value) != true)) {
                    this.UserNamesField = value;
                    this.RaisePropertyChanged("UserNames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotHiddenByUsersFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class NotHiddenByUsersFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UserNamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] UserNames {
            get {
                return this.UserNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNamesField, value) != true)) {
                    this.UserNamesField = value;
                    this.RaisePropertyChanged("UserNames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewportFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ViewportFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LatLngPoint BottomRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LatLngPoint TopLeftField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.LatLngPoint BottomRight {
            get {
                return this.BottomRightField;
            }
            set {
                if ((object.ReferenceEquals(this.BottomRightField, value) != true)) {
                    this.BottomRightField = value;
                    this.RaisePropertyChanged("BottomRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.LatLngPoint TopLeft {
            get {
                return this.TopLeftField;
            }
            set {
                if ((object.ReferenceEquals(this.TopLeftField, value) != true)) {
                    this.TopLeftField = value;
                    this.RaisePropertyChanged("TopLeft");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarksExcludeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class BookmarksExcludeFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] BookmarkListIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeIgnoreListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] BookmarkListIDs {
            get {
                return this.BookmarkListIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkListIDsField, value) != true)) {
                    this.BookmarkListIDsField = value;
                    this.RaisePropertyChanged("BookmarkListIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludeIgnoreList {
            get {
                return this.ExcludeIgnoreListField;
            }
            set {
                if ((this.ExcludeIgnoreListField.Equals(value) != true)) {
                    this.ExcludeIgnoreListField = value;
                    this.RaisePropertyChanged("ExcludeIgnoreList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CachePublishedDateFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CachePublishedDateFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.DateRange RangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.DateRange Range {
            get {
                return this.RangeField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeField, value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseGeocacheFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.NotFoundByUsersFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.NotHiddenByUsersFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TerrainFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GeocacheNameFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.DifficultyFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CacheCodeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GeocacheTypeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GeocacheContainerSizeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GeocacheExclusionsFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.FavoritePointsFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.HiddenByUsersFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.ViewportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.BookmarksExcludeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CachePublishedDateFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.StateFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CountryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.FoundByUserFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.EventDateRangeUtcFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.RecommendedCacheFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.PointRadiusFilter))]
    public partial class BaseGeocacheFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class StateFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] StateIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] StateIds {
            get {
                return this.StateIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.StateIdsField, value) != true)) {
                    this.StateIdsField = value;
                    this.RaisePropertyChanged("StateIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CountryFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CountryIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CountryIds {
            get {
                return this.CountryIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIdsField, value) != true)) {
                    this.CountryIdsField = value;
                    this.RaisePropertyChanged("CountryIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FoundByUserFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FoundByUserFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDateRangeUtcFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class EventDateRangeUtcFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.DateRange RangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.DateRange Range {
            get {
                return this.RangeField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeField, value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecommendedCacheFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class RecommendedCacheFilter : WinCachebox.ServiceReference1.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LatLngPoint OriginField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.LatLngPoint Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateRange", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class DateRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheDataResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheDataResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Geocache[] GeocachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PQCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CacheLimitCounts CacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalMatchingCachesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.Geocache[] Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long PQCount {
            get {
                return this.PQCountField;
            }
            set {
                if ((this.PQCountField.Equals(value) != true)) {
                    this.PQCountField = value;
                    this.RaisePropertyChanged("PQCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public WinCachebox.ServiceReference1.CacheLimitCounts CacheLimits {
            get {
                return this.CacheLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheLimitsField, value) != true)) {
                    this.CacheLimitsField = value;
                    this.RaisePropertyChanged("CacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int TotalMatchingCaches {
            get {
                return this.TotalMatchingCachesField;
            }
            set {
                if ((this.TotalMatchingCachesField.Equals(value) != true)) {
                    this.TotalMatchingCachesField = value;
                    this.RaisePropertyChanged("TotalMatchingCaches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheLimitCounts", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class CacheLimitCounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CachesLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentCacheCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCacheCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CachesLeft {
            get {
                return this.CachesLeftField;
            }
            set {
                if ((this.CachesLeftField.Equals(value) != true)) {
                    this.CachesLeftField = value;
                    this.RaisePropertyChanged("CachesLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentCacheCount {
            get {
                return this.CurrentCacheCountField;
            }
            set {
                if ((this.CurrentCacheCountField.Equals(value) != true)) {
                    this.CurrentCacheCountField = value;
                    this.RaisePropertyChanged("CurrentCacheCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCacheCount {
            get {
                return this.MaxCacheCountField;
            }
            set {
                if ((this.MaxCacheCountField.Equals(value) != true)) {
                    this.MaxCacheCountField = value;
                    this.RaisePropertyChanged("MaxCacheCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Geocache", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Geocache : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.AdditionalWaypoint[] AdditionalWaypointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Attribute[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheType CacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CanCacheBeFavoritedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ContainerType ContainerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentDetailsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateLastVisitedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DnfDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncodedHintsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FoundDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FoundDateOfFoundByUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheLog[] GeocacheLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasbeenDnfedbyUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasbeenFavoritedbyUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasbeenFoundbyUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IanaTimezoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecommendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LongDescriptionIsHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxDetailCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishDateUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedWebPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShortDescriptionIsHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StagesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Trackable[] TrackablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCPlaceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpgradeMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UserWaypoint[] UserWaypointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.AdditionalWaypoint[] AdditionalWaypoints {
            get {
                return this.AdditionalWaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalWaypointsField, value) != true)) {
                    this.AdditionalWaypointsField = value;
                    this.RaisePropertyChanged("AdditionalWaypoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Attribute[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.GeocacheType CacheType {
            get {
                return this.CacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTypeField, value) != true)) {
                    this.CacheTypeField = value;
                    this.RaisePropertyChanged("CacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CanCacheBeFavorited {
            get {
                return this.CanCacheBeFavoritedField;
            }
            set {
                if ((this.CanCacheBeFavoritedField.Equals(value) != true)) {
                    this.CanCacheBeFavoritedField = value;
                    this.RaisePropertyChanged("CanCacheBeFavorited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ContainerType ContainerType {
            get {
                return this.ContainerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerTypeField, value) != true)) {
                    this.ContainerTypeField = value;
                    this.RaisePropertyChanged("ContainerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentDetailsCount {
            get {
                return this.CurrentDetailsCountField;
            }
            set {
                if ((this.CurrentDetailsCountField.Equals(value) != true)) {
                    this.CurrentDetailsCountField = value;
                    this.RaisePropertyChanged("CurrentDetailsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLastUpdate {
            get {
                return this.DateLastUpdateField;
            }
            set {
                if ((this.DateLastUpdateField.Equals(value) != true)) {
                    this.DateLastUpdateField = value;
                    this.RaisePropertyChanged("DateLastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateLastVisited {
            get {
                return this.DateLastVisitedField;
            }
            set {
                if ((this.DateLastVisitedField.Equals(value) != true)) {
                    this.DateLastVisitedField = value;
                    this.RaisePropertyChanged("DateLastVisited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DnfDate {
            get {
                return this.DnfDateField;
            }
            set {
                if ((this.DnfDateField.Equals(value) != true)) {
                    this.DnfDateField = value;
                    this.RaisePropertyChanged("DnfDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncodedHints {
            get {
                return this.EncodedHintsField;
            }
            set {
                if ((object.ReferenceEquals(this.EncodedHintsField, value) != true)) {
                    this.EncodedHintsField = value;
                    this.RaisePropertyChanged("EncodedHints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((this.FavoritePointsField.Equals(value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FoundDate {
            get {
                return this.FoundDateField;
            }
            set {
                if ((this.FoundDateField.Equals(value) != true)) {
                    this.FoundDateField = value;
                    this.RaisePropertyChanged("FoundDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FoundDateOfFoundByUser {
            get {
                return this.FoundDateOfFoundByUserField;
            }
            set {
                if ((this.FoundDateOfFoundByUserField.Equals(value) != true)) {
                    this.FoundDateOfFoundByUserField = value;
                    this.RaisePropertyChanged("FoundDateOfFoundByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((this.GUIDField.Equals(value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.GeocacheLog[] GeocacheLogs {
            get {
                return this.GeocacheLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheLogsField, value) != true)) {
                    this.GeocacheLogsField = value;
                    this.RaisePropertyChanged("GeocacheLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheNote {
            get {
                return this.GeocacheNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNoteField, value) != true)) {
                    this.GeocacheNoteField = value;
                    this.RaisePropertyChanged("GeocacheNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasbeenDnfedbyUser {
            get {
                return this.HasbeenDnfedbyUserField;
            }
            set {
                if ((this.HasbeenDnfedbyUserField.Equals(value) != true)) {
                    this.HasbeenDnfedbyUserField = value;
                    this.RaisePropertyChanged("HasbeenDnfedbyUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasbeenFavoritedbyUser {
            get {
                return this.HasbeenFavoritedbyUserField;
            }
            set {
                if ((this.HasbeenFavoritedbyUserField.Equals(value) != true)) {
                    this.HasbeenFavoritedbyUserField = value;
                    this.RaisePropertyChanged("HasbeenFavoritedbyUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasbeenFoundbyUser {
            get {
                return this.HasbeenFoundbyUserField;
            }
            set {
                if ((this.HasbeenFoundbyUserField.Equals(value) != true)) {
                    this.HasbeenFoundbyUserField = value;
                    this.RaisePropertyChanged("HasbeenFoundbyUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IanaTimezoneId {
            get {
                return this.IanaTimezoneIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IanaTimezoneIdField, value) != true)) {
                    this.IanaTimezoneIdField = value;
                    this.RaisePropertyChanged("IanaTimezoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageCount {
            get {
                return this.ImageCountField;
            }
            set {
                if ((this.ImageCountField.Equals(value) != true)) {
                    this.ImageCountField = value;
                    this.RaisePropertyChanged("ImageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPremium {
            get {
                return this.IsPremiumField;
            }
            set {
                if ((this.IsPremiumField.Equals(value) != true)) {
                    this.IsPremiumField = value;
                    this.RaisePropertyChanged("IsPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecommended {
            get {
                return this.IsRecommendedField;
            }
            set {
                if ((this.IsRecommendedField.Equals(value) != true)) {
                    this.IsRecommendedField = value;
                    this.RaisePropertyChanged("IsRecommended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LongDescriptionIsHtml {
            get {
                return this.LongDescriptionIsHtmlField;
            }
            set {
                if ((this.LongDescriptionIsHtmlField.Equals(value) != true)) {
                    this.LongDescriptionIsHtmlField = value;
                    this.RaisePropertyChanged("LongDescriptionIsHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxDetailCount {
            get {
                return this.MaxDetailCountField;
            }
            set {
                if ((this.MaxDetailCountField.Equals(value) != true)) {
                    this.MaxDetailCountField = value;
                    this.RaisePropertyChanged("MaxDetailCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacedBy {
            get {
                return this.PlacedByField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacedByField, value) != true)) {
                    this.PlacedByField = value;
                    this.RaisePropertyChanged("PlacedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishDateUtc {
            get {
                return this.PublishDateUtcField;
            }
            set {
                if ((this.PublishDateUtcField.Equals(value) != true)) {
                    this.PublishDateUtcField = value;
                    this.RaisePropertyChanged("PublishDateUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedWebPage {
            get {
                return this.RelatedWebPageField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedWebPageField, value) != true)) {
                    this.RelatedWebPageField = value;
                    this.RaisePropertyChanged("RelatedWebPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShortDescriptionIsHtml {
            get {
                return this.ShortDescriptionIsHtmlField;
            }
            set {
                if ((this.ShortDescriptionIsHtmlField.Equals(value) != true)) {
                    this.ShortDescriptionIsHtmlField = value;
                    this.RaisePropertyChanged("ShortDescriptionIsHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StagesCount {
            get {
                return this.StagesCountField;
            }
            set {
                if ((this.StagesCountField.Equals(value) != true)) {
                    this.StagesCountField = value;
                    this.RaisePropertyChanged("StagesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Terrain {
            get {
                return this.TerrainField;
            }
            set {
                if ((this.TerrainField.Equals(value) != true)) {
                    this.TerrainField = value;
                    this.RaisePropertyChanged("Terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackableCount {
            get {
                return this.TrackableCountField;
            }
            set {
                if ((this.TrackableCountField.Equals(value) != true)) {
                    this.TrackableCountField = value;
                    this.RaisePropertyChanged("TrackableCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Trackable[] Trackables {
            get {
                return this.TrackablesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackablesField, value) != true)) {
                    this.TrackablesField = value;
                    this.RaisePropertyChanged("Trackables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCPlaceDate {
            get {
                return this.UTCPlaceDateField;
            }
            set {
                if ((this.UTCPlaceDateField.Equals(value) != true)) {
                    this.UTCPlaceDateField = value;
                    this.RaisePropertyChanged("UTCPlaceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpgradeMessage {
            get {
                return this.UpgradeMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.UpgradeMessageField, value) != true)) {
                    this.UpgradeMessageField = value;
                    this.RaisePropertyChanged("UpgradeMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.UserWaypoint[] UserWaypoints {
            get {
                return this.UserWaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserWaypointsField, value) != true)) {
                    this.UserWaypointsField = value;
                    this.RaisePropertyChanged("UserWaypoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ContainerType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContainerTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContainerTypeId {
            get {
                return this.ContainerTypeIdField;
            }
            set {
                if ((this.ContainerTypeIdField.Equals(value) != true)) {
                    this.ContainerTypeIdField = value;
                    this.RaisePropertyChanged("ContainerTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerTypeName {
            get {
                return this.ContainerTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerTypeNameField, value) != true)) {
                    this.ContainerTypeNameField = value;
                    this.RaisePropertyChanged("ContainerTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalWaypoint", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class AdditionalWaypoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCEnteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WptTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((this.GUIDField.Equals(value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheCode {
            get {
                return this.GeocacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheCodeField, value) != true)) {
                    this.GeocacheCodeField = value;
                    this.RaisePropertyChanged("GeocacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCEnteredDate {
            get {
                return this.UTCEnteredDateField;
            }
            set {
                if ((this.UTCEnteredDateField.Equals(value) != true)) {
                    this.UTCEnteredDateField = value;
                    this.RaisePropertyChanged("UTCEnteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlName {
            get {
                return this.UrlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlNameField, value) != true)) {
                    this.UrlNameField = value;
                    this.RaisePropertyChanged("UrlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WptTypeID {
            get {
                return this.WptTypeIDField;
            }
            set {
                if ((this.WptTypeIDField.Equals(value) != true)) {
                    this.WptTypeIDField = value;
                    this.RaisePropertyChanged("WptTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attribute", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Attribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttributeTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeTypeID {
            get {
                return this.AttributeTypeIDField;
            }
            set {
                if ((this.AttributeTypeIDField.Equals(value) != true)) {
                    this.AttributeTypeIDField = value;
                    this.RaisePropertyChanged("AttributeTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOn {
            get {
                return this.IsOnField;
            }
            set {
                if ((this.IsOnField.Equals(value) != true)) {
                    this.IsOnField = value;
                    this.RaisePropertyChanged("IsOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheLog", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CannotDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member FinderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IanaTimezoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LogIsEncodedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.WptLogType LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCCreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitDateIsoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheName {
            get {
                return this.CacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheNameField, value) != true)) {
                    this.CacheNameField = value;
                    this.RaisePropertyChanged("CacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CannotDelete {
            get {
                return this.CannotDeleteField;
            }
            set {
                if ((this.CannotDeleteField.Equals(value) != true)) {
                    this.CannotDeleteField = value;
                    this.RaisePropertyChanged("CannotDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member Finder {
            get {
                return this.FinderField;
            }
            set {
                if ((object.ReferenceEquals(this.FinderField, value) != true)) {
                    this.FinderField = value;
                    this.RaisePropertyChanged("Finder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IanaTimezoneId {
            get {
                return this.IanaTimezoneIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IanaTimezoneIdField, value) != true)) {
                    this.IanaTimezoneIdField = value;
                    this.RaisePropertyChanged("IanaTimezoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArchived {
            get {
                return this.IsArchivedField;
            }
            set {
                if ((this.IsArchivedField.Equals(value) != true)) {
                    this.IsArchivedField = value;
                    this.RaisePropertyChanged("IsArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LogIsEncoded {
            get {
                return this.LogIsEncodedField;
            }
            set {
                if ((this.LogIsEncodedField.Equals(value) != true)) {
                    this.LogIsEncodedField = value;
                    this.RaisePropertyChanged("LogIsEncoded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogText {
            get {
                return this.LogTextField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTextField, value) != true)) {
                    this.LogTextField = value;
                    this.RaisePropertyChanged("LogText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.WptLogType LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypeField, value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCCreateDate {
            get {
                return this.UTCCreateDateField;
            }
            set {
                if ((this.UTCCreateDateField.Equals(value) != true)) {
                    this.UTCCreateDateField = value;
                    this.RaisePropertyChanged("UTCCreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLatitude {
            get {
                return this.UpdatedLatitudeField;
            }
            set {
                if ((this.UpdatedLatitudeField.Equals(value) != true)) {
                    this.UpdatedLatitudeField = value;
                    this.RaisePropertyChanged("UpdatedLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLongitude {
            get {
                return this.UpdatedLongitudeField;
            }
            set {
                if ((this.UpdatedLongitudeField.Equals(value) != true)) {
                    this.UpdatedLongitudeField = value;
                    this.RaisePropertyChanged("UpdatedLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((this.VisitDateField.Equals(value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitDateIso {
            get {
                return this.VisitDateIsoField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitDateIsoField, value) != true)) {
                    this.VisitDateIsoField = value;
                    this.RaisePropertyChanged("VisitDateIso");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ImageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ImageGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ImageGuid {
            get {
                return this.ImageGuidField;
            }
            set {
                if ((this.ImageGuidField.Equals(value) != true)) {
                    this.ImageGuidField = value;
                    this.RaisePropertyChanged("ImageGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileUrl {
            get {
                return this.MobileUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileUrlField, value) != true)) {
                    this.MobileUrlField = value;
                    this.RaisePropertyChanged("MobileUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbUrl {
            get {
                return this.ThumbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbUrlField, value) != true)) {
                    this.ThumbUrlField = value;
                    this.RaisePropertyChanged("ThumbUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trackable", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Trackable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllowedToBeCollectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BugTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentGeocacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentGoalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member CurrentOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member OriginalOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TBTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TBTypeNameSingularField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TrackableLog[] TrackableLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WptTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllowedToBeCollected {
            get {
                return this.AllowedToBeCollectedField;
            }
            set {
                if ((this.AllowedToBeCollectedField.Equals(value) != true)) {
                    this.AllowedToBeCollectedField = value;
                    this.RaisePropertyChanged("AllowedToBeCollected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BugTypeID {
            get {
                return this.BugTypeIDField;
            }
            set {
                if ((this.BugTypeIDField.Equals(value) != true)) {
                    this.BugTypeIDField = value;
                    this.RaisePropertyChanged("BugTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentGeocacheCode {
            get {
                return this.CurrentGeocacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentGeocacheCodeField, value) != true)) {
                    this.CurrentGeocacheCodeField = value;
                    this.RaisePropertyChanged("CurrentGeocacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentGoal {
            get {
                return this.CurrentGoalField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentGoalField, value) != true)) {
                    this.CurrentGoalField = value;
                    this.RaisePropertyChanged("CurrentGoal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member CurrentOwner {
            get {
                return this.CurrentOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentOwnerField, value) != true)) {
                    this.CurrentOwnerField = value;
                    this.RaisePropertyChanged("CurrentOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconUrl {
            get {
                return this.IconUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.IconUrlField, value) != true)) {
                    this.IconUrlField = value;
                    this.RaisePropertyChanged("IconUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InCollection {
            get {
                return this.InCollectionField;
            }
            set {
                if ((this.InCollectionField.Equals(value) != true)) {
                    this.InCollectionField = value;
                    this.RaisePropertyChanged("InCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member OriginalOwner {
            get {
                return this.OriginalOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalOwnerField, value) != true)) {
                    this.OriginalOwnerField = value;
                    this.RaisePropertyChanged("OriginalOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBTypeName {
            get {
                return this.TBTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TBTypeNameField, value) != true)) {
                    this.TBTypeNameField = value;
                    this.RaisePropertyChanged("TBTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBTypeNameSingular {
            get {
                return this.TBTypeNameSingularField;
            }
            set {
                if ((object.ReferenceEquals(this.TBTypeNameSingularField, value) != true)) {
                    this.TBTypeNameSingularField = value;
                    this.RaisePropertyChanged("TBTypeNameSingular");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.TrackableLog[] TrackableLogs {
            get {
                return this.TrackableLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogsField, value) != true)) {
                    this.TrackableLogsField = value;
                    this.RaisePropertyChanged("TrackableLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingCode {
            get {
                return this.TrackingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingCodeField, value) != true)) {
                    this.TrackingCodeField = value;
                    this.RaisePropertyChanged("TrackingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserCount {
            get {
                return this.UserCountField;
            }
            set {
                if ((this.UserCountField.Equals(value) != true)) {
                    this.UserCountField = value;
                    this.RaisePropertyChanged("UserCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WptTypeID {
            get {
                return this.WptTypeIDField;
            }
            set {
                if ((this.WptTypeIDField.Equals(value) != true)) {
                    this.WptTypeIDField = value;
                    this.RaisePropertyChanged("WptTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserWaypoint", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UserWaypoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AssociatedAdditionalWaypointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCorrectedCoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUserCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AssociatedAdditionalWaypoint {
            get {
                return this.AssociatedAdditionalWaypointField;
            }
            set {
                if ((this.AssociatedAdditionalWaypointField.Equals(value) != true)) {
                    this.AssociatedAdditionalWaypointField = value;
                    this.RaisePropertyChanged("AssociatedAdditionalWaypoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCorrectedCoordinate {
            get {
                return this.IsCorrectedCoordinateField;
            }
            set {
                if ((this.IsCorrectedCoordinateField.Equals(value) != true)) {
                    this.IsCorrectedCoordinateField = value;
                    this.RaisePropertyChanged("IsCorrectedCoordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserCompleted {
            get {
                return this.IsUserCompletedField;
            }
            set {
                if ((this.IsUserCompletedField.Equals(value) != true)) {
                    this.IsUserCompletedField = value;
                    this.RaisePropertyChanged("IsUserCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCDate {
            get {
                return this.UTCDateField;
            }
            set {
                if ((this.UTCDateField.Equals(value) != true)) {
                    this.UTCDateField = value;
                    this.RaisePropertyChanged("UTCDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WptLogType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class WptLogType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminActionableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OwnerActionableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WptLogTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WptLogTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdminActionable {
            get {
                return this.AdminActionableField;
            }
            set {
                if ((this.AdminActionableField.Equals(value) != true)) {
                    this.AdminActionableField = value;
                    this.RaisePropertyChanged("AdminActionable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OwnerActionable {
            get {
                return this.OwnerActionableField;
            }
            set {
                if ((this.OwnerActionableField.Equals(value) != true)) {
                    this.OwnerActionableField = value;
                    this.RaisePropertyChanged("OwnerActionable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WptLogTypeId {
            get {
                return this.WptLogTypeIdField;
            }
            set {
                if ((this.WptLogTypeIdField.Equals(value) != true)) {
                    this.WptLogTypeIdField = value;
                    this.RaisePropertyChanged("WptLogTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WptLogTypeName {
            get {
                return this.WptLogTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WptLogTypeNameField, value) != true)) {
                    this.WptLogTypeNameField = value;
                    this.RaisePropertyChanged("WptLogTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackableLog", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TrackableLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LogIsEncodedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.WptLogType LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCCreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheID {
            get {
                return this.CacheIDField;
            }
            set {
                if ((this.CacheIDField.Equals(value) != true)) {
                    this.CacheIDField = value;
                    this.RaisePropertyChanged("CacheID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArchived {
            get {
                return this.IsArchivedField;
            }
            set {
                if ((this.IsArchivedField.Equals(value) != true)) {
                    this.IsArchivedField = value;
                    this.RaisePropertyChanged("IsArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LogIsEncoded {
            get {
                return this.LogIsEncodedField;
            }
            set {
                if ((this.LogIsEncodedField.Equals(value) != true)) {
                    this.LogIsEncodedField = value;
                    this.RaisePropertyChanged("LogIsEncoded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogText {
            get {
                return this.LogTextField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTextField, value) != true)) {
                    this.LogTextField = value;
                    this.RaisePropertyChanged("LogText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.WptLogType LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypeField, value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCCreateDate {
            get {
                return this.UTCCreateDateField;
            }
            set {
                if ((this.UTCCreateDateField.Equals(value) != true)) {
                    this.UTCCreateDateField = value;
                    this.RaisePropertyChanged("UTCCreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLatitude {
            get {
                return this.UpdatedLatitudeField;
            }
            set {
                if ((this.UpdatedLatitudeField.Equals(value) != true)) {
                    this.UpdatedLatitudeField = value;
                    this.RaisePropertyChanged("UpdatedLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLongitude {
            get {
                return this.UpdatedLongitudeField;
            }
            set {
                if ((this.UpdatedLongitudeField.Equals(value) != true)) {
                    this.UpdatedLongitudeField = value;
                    this.RaisePropertyChanged("UpdatedLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((this.VisitDateField.Equals(value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterWP7DeviceTileRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class RegisterWP7DeviceTileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceFriendlyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationChannelUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceFriendlyName {
            get {
                return this.DeviceFriendlyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceFriendlyNameField, value) != true)) {
                    this.DeviceFriendlyNameField = value;
                    this.RaisePropertyChanged("DeviceFriendlyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceIdentifier {
            get {
                return this.DeviceIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdentifierField, value) != true)) {
                    this.DeviceIdentifierField = value;
                    this.RaisePropertyChanged("DeviceIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationChannelUrl {
            get {
                return this.NotificationChannelUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationChannelUrlField, value) != true)) {
                    this.NotificationChannelUrlField = value;
                    this.RaisePropertyChanged("NotificationChannelUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersCacheCountsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersCacheCountsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UsernamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Usernames {
            get {
                return this.UsernamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernamesField, value) != true)) {
                    this.UsernamesField = value;
                    this.RaisePropertyChanged("Usernames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserCacheCountsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserCacheCountsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UserCounts[] UserCacheCountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.UserCounts[] UserCacheCounts {
            get {
                return this.UserCacheCountsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCacheCountsField, value) != true)) {
                    this.UserCacheCountsField = value;
                    this.RaisePropertyChanged("UserCacheCounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCounts", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UserCounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheFindsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheHidesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheFinds {
            get {
                return this.CacheFindsField;
            }
            set {
                if ((this.CacheFindsField.Equals(value) != true)) {
                    this.CacheFindsField = value;
                    this.RaisePropertyChanged("CacheFinds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheHides {
            get {
                return this.CacheHidesField;
            }
            set {
                if ((this.CacheHidesField.Equals(value) != true)) {
                    this.CacheHidesField = value;
                    this.RaisePropertyChanged("CacheHides");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackablesByUserRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackablesByUserRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableLogsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CollectionOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int TrackableLogsCount {
            get {
                return this.TrackableLogsCountField;
            }
            set {
                if ((this.TrackableLogsCountField.Equals(value) != true)) {
                    this.TrackableLogsCountField = value;
                    this.RaisePropertyChanged("TrackableLogsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<bool> CollectionOnly {
            get {
                return this.CollectionOnlyField;
            }
            set {
                if ((this.CollectionOnlyField.Equals(value) != true)) {
                    this.CollectionOnlyField = value;
                    this.RaisePropertyChanged("CollectionOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackableResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackableResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Trackable[] TrackablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Trackable[] Trackables {
            get {
                return this.TrackablesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackablesField, value) != true)) {
                    this.TrackablesField = value;
                    this.RaisePropertyChanged("Trackables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackablesByOwnerRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackablesByOwnerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableLogsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CollectionOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int TrackableLogsCount {
            get {
                return this.TrackableLogsCountField;
            }
            set {
                if ((this.TrackableLogsCountField.Equals(value) != true)) {
                    this.TrackableLogsCountField = value;
                    this.RaisePropertyChanged("TrackableLogsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<bool> CollectionOnly {
            get {
                return this.CollectionOnlyField;
            }
            set {
                if ((this.CollectionOnlyField.Equals(value) != true)) {
                    this.CollectionOnlyField = value;
                    this.RaisePropertyChanged("CollectionOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserGalleryRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserGalleryRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserGalleryResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserGalleryResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ImageData[] GalleryImagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.ImageData[] GalleryImages {
            get {
                return this.GalleryImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.GalleryImagesField, value) != true)) {
                    this.GalleryImagesField = value;
                    this.RaisePropertyChanged("GalleryImages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveUserWaypointRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SaveUserWaypointRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCorrectedCoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AssociatedAdditionalWaypointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUserCompletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<long> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsCorrectedCoordinate {
            get {
                return this.IsCorrectedCoordinateField;
            }
            set {
                if ((this.IsCorrectedCoordinateField.Equals(value) != true)) {
                    this.IsCorrectedCoordinateField = value;
                    this.RaisePropertyChanged("IsCorrectedCoordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<System.Guid> AssociatedAdditionalWaypoint {
            get {
                return this.AssociatedAdditionalWaypointField;
            }
            set {
                if ((this.AssociatedAdditionalWaypointField.Equals(value) != true)) {
                    this.AssociatedAdditionalWaypointField = value;
                    this.RaisePropertyChanged("AssociatedAdditionalWaypoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool IsUserCompleted {
            get {
                return this.IsUserCompletedField;
            }
            set {
                if ((this.IsUserCompletedField.Equals(value) != true)) {
                    this.IsUserCompletedField = value;
                    this.RaisePropertyChanged("IsUserCompleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveUserWaypointResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SaveUserWaypointResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UserWaypoint NewWaypointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.UserWaypoint NewWaypoint {
            get {
                return this.NewWaypointField;
            }
            set {
                if ((object.ReferenceEquals(this.NewWaypointField, value) != true)) {
                    this.NewWaypointField = value;
                    this.RaisePropertyChanged("NewWaypoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersGeocacheLogsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersGeocacheLogsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.DateRange RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] LogTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.DateRange Range {
            get {
                return this.RangeField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeField, value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long[] LogTypes {
            get {
                return this.LogTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypesField, value) != true)) {
                    this.LogTypesField = value;
                    this.RaisePropertyChanged("LogTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool ExcludeArchived {
            get {
                return this.ExcludeArchivedField;
            }
            set {
                if ((this.ExcludeArchivedField.Equals(value) != true)) {
                    this.ExcludeArchivedField = value;
                    this.RaisePropertyChanged("ExcludeArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheLogResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheLogResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheLog[] LogsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.GeocacheLog[] Logs {
            get {
                return this.LogsField;
            }
            set {
                if ((object.ReferenceEquals(this.LogsField, value) != true)) {
                    this.LogsField = value;
                    this.RaisePropertyChanged("Logs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMoreGeocachesRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetMoreGeocachesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GeocacheLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TrackableLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSummaryOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLite {
            get {
                return this.IsLiteField;
            }
            set {
                if ((this.IsLiteField.Equals(value) != true)) {
                    this.IsLiteField = value;
                    this.RaisePropertyChanged("IsLite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> GeocacheLogCount {
            get {
                return this.GeocacheLogCountField;
            }
            set {
                if ((this.GeocacheLogCountField.Equals(value) != true)) {
                    this.GeocacheLogCountField = value;
                    this.RaisePropertyChanged("GeocacheLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> TrackableLogCount {
            get {
                return this.TrackableLogCountField;
            }
            set {
                if ((this.TrackableLogCountField.Equals(value) != true)) {
                    this.TrackableLogCountField = value;
                    this.RaisePropertyChanged("TrackableLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsSummaryOnly {
            get {
                return this.IsSummaryOnlyField;
            }
            set {
                if ((this.IsSummaryOnlyField.Equals(value) != true)) {
                    this.IsSummaryOnlyField = value;
                    this.RaisePropertyChanged("IsSummaryOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchForGeocachesRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SearchForGeocachesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GeocacheLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TrackableLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.PointRadiusFilter PointRadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.NotFoundByUsersFilter NotFoundByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TerrainFilter TerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheNameFilter GeocacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.DifficultyFilter DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CacheCodeFilter CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheTypeFilter GeocacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheContainerSizeFilter GeocacheContainerSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheExclusionsFilter GeocacheExclusionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.FavoritePointsFilter FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.HiddenByUsersFilter HiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.NotHiddenByUsersFilter NotHiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ViewportFilter ViewportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.BookmarksExcludeFilter BookmarksExcludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CachePublishedDateFilter CachePublishedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StateFilter StatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CountryFilter CountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.FoundByUserFilter FoundByUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.RecommendedCacheFilter RecommendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.EventDateRangeUtcFilter EventsDateRangeUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.SortOrderAndDirection[] SortBysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSummaryOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LatLngPoint SortPointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLite {
            get {
                return this.IsLiteField;
            }
            set {
                if ((this.IsLiteField.Equals(value) != true)) {
                    this.IsLiteField = value;
                    this.RaisePropertyChanged("IsLite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> GeocacheLogCount {
            get {
                return this.GeocacheLogCountField;
            }
            set {
                if ((this.GeocacheLogCountField.Equals(value) != true)) {
                    this.GeocacheLogCountField = value;
                    this.RaisePropertyChanged("GeocacheLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> TrackableLogCount {
            get {
                return this.TrackableLogCountField;
            }
            set {
                if ((this.TrackableLogCountField.Equals(value) != true)) {
                    this.TrackableLogCountField = value;
                    this.RaisePropertyChanged("TrackableLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public WinCachebox.ServiceReference1.PointRadiusFilter PointRadius {
            get {
                return this.PointRadiusField;
            }
            set {
                if ((object.ReferenceEquals(this.PointRadiusField, value) != true)) {
                    this.PointRadiusField = value;
                    this.RaisePropertyChanged("PointRadius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public WinCachebox.ServiceReference1.NotFoundByUsersFilter NotFoundByUsers {
            get {
                return this.NotFoundByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotFoundByUsersField, value) != true)) {
                    this.NotFoundByUsersField = value;
                    this.RaisePropertyChanged("NotFoundByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public WinCachebox.ServiceReference1.TerrainFilter Terrain {
            get {
                return this.TerrainField;
            }
            set {
                if ((object.ReferenceEquals(this.TerrainField, value) != true)) {
                    this.TerrainField = value;
                    this.RaisePropertyChanged("Terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public WinCachebox.ServiceReference1.GeocacheNameFilter GeocacheName {
            get {
                return this.GeocacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNameField, value) != true)) {
                    this.GeocacheNameField = value;
                    this.RaisePropertyChanged("GeocacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public WinCachebox.ServiceReference1.DifficultyFilter Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyField, value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public WinCachebox.ServiceReference1.CacheCodeFilter CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public WinCachebox.ServiceReference1.GeocacheTypeFilter GeocacheType {
            get {
                return this.GeocacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeField, value) != true)) {
                    this.GeocacheTypeField = value;
                    this.RaisePropertyChanged("GeocacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public WinCachebox.ServiceReference1.GeocacheContainerSizeFilter GeocacheContainerSize {
            get {
                return this.GeocacheContainerSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheContainerSizeField, value) != true)) {
                    this.GeocacheContainerSizeField = value;
                    this.RaisePropertyChanged("GeocacheContainerSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public WinCachebox.ServiceReference1.GeocacheExclusionsFilter GeocacheExclusions {
            get {
                return this.GeocacheExclusionsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheExclusionsField, value) != true)) {
                    this.GeocacheExclusionsField = value;
                    this.RaisePropertyChanged("GeocacheExclusions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public WinCachebox.ServiceReference1.FavoritePointsFilter FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoritePointsField, value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public WinCachebox.ServiceReference1.HiddenByUsersFilter HiddenByUsers {
            get {
                return this.HiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.HiddenByUsersField, value) != true)) {
                    this.HiddenByUsersField = value;
                    this.RaisePropertyChanged("HiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public WinCachebox.ServiceReference1.NotHiddenByUsersFilter NotHiddenByUsers {
            get {
                return this.NotHiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotHiddenByUsersField, value) != true)) {
                    this.NotHiddenByUsersField = value;
                    this.RaisePropertyChanged("NotHiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public WinCachebox.ServiceReference1.ViewportFilter Viewport {
            get {
                return this.ViewportField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewportField, value) != true)) {
                    this.ViewportField = value;
                    this.RaisePropertyChanged("Viewport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public WinCachebox.ServiceReference1.BookmarksExcludeFilter BookmarksExclude {
            get {
                return this.BookmarksExcludeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarksExcludeField, value) != true)) {
                    this.BookmarksExcludeField = value;
                    this.RaisePropertyChanged("BookmarksExclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public WinCachebox.ServiceReference1.CachePublishedDateFilter CachePublishedDate {
            get {
                return this.CachePublishedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CachePublishedDateField, value) != true)) {
                    this.CachePublishedDateField = value;
                    this.RaisePropertyChanged("CachePublishedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public WinCachebox.ServiceReference1.StateFilter States {
            get {
                return this.StatesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatesField, value) != true)) {
                    this.StatesField = value;
                    this.RaisePropertyChanged("States");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public WinCachebox.ServiceReference1.CountryFilter Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public WinCachebox.ServiceReference1.FoundByUserFilter FoundByUser {
            get {
                return this.FoundByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.FoundByUserField, value) != true)) {
                    this.FoundByUserField = value;
                    this.RaisePropertyChanged("FoundByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public WinCachebox.ServiceReference1.RecommendedCacheFilter Recommended {
            get {
                return this.RecommendedField;
            }
            set {
                if ((object.ReferenceEquals(this.RecommendedField, value) != true)) {
                    this.RecommendedField = value;
                    this.RaisePropertyChanged("Recommended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public WinCachebox.ServiceReference1.EventDateRangeUtcFilter EventsDateRangeUtc {
            get {
                return this.EventsDateRangeUtcField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsDateRangeUtcField, value) != true)) {
                    this.EventsDateRangeUtcField = value;
                    this.RaisePropertyChanged("EventsDateRangeUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public WinCachebox.ServiceReference1.SortOrderAndDirection[] SortBys {
            get {
                return this.SortBysField;
            }
            set {
                if ((object.ReferenceEquals(this.SortBysField, value) != true)) {
                    this.SortBysField = value;
                    this.RaisePropertyChanged("SortBys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public bool IsSummaryOnly {
            get {
                return this.IsSummaryOnlyField;
            }
            set {
                if ((this.IsSummaryOnlyField.Equals(value) != true)) {
                    this.IsSummaryOnlyField = value;
                    this.RaisePropertyChanged("IsSummaryOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public WinCachebox.ServiceReference1.LatLngPoint SortPoint {
            get {
                return this.SortPointField;
            }
            set {
                if ((object.ReferenceEquals(this.SortPointField, value) != true)) {
                    this.SortPointField = value;
                    this.RaisePropertyChanged("SortPoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortOrderAndDirection", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SortOrderAndDirection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AscendingOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.SortOrderBy SortFilterIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AscendingOrder {
            get {
                return this.AscendingOrderField;
            }
            set {
                if ((this.AscendingOrderField.Equals(value) != true)) {
                    this.AscendingOrderField = value;
                    this.RaisePropertyChanged("AscendingOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.SortOrderBy SortFilterId {
            get {
                return this.SortFilterIdField;
            }
            set {
                if ((this.SortFilterIdField.Equals(value) != true)) {
                    this.SortFilterIdField = value;
                    this.RaisePropertyChanged("SortFilterId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortOrderBy", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Filters")]
    public enum SortOrderBy : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distance = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FavoritePoint = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Difficulty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terrain = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlaceDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FoundDate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerSize = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateLastVisited = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeocacheName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FoundDateOfFoundByUser = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAnotherUsersProfileRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetAnotherUsersProfileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UserProfileOptions ProfileOptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.UserProfileOptions ProfileOptions {
            get {
                return this.ProfileOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileOptionsField, value) != true)) {
                    this.ProfileOptionsField = value;
                    this.RaisePropertyChanged("ProfileOptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfileOptions", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.YourUserProfileOptions))]
    public partial class UserProfileOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChallengesDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FavoritePointsDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GeocacheDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublicProfileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SouvenirDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackableDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChallengesData {
            get {
                return this.ChallengesDataField;
            }
            set {
                if ((this.ChallengesDataField.Equals(value) != true)) {
                    this.ChallengesDataField = value;
                    this.RaisePropertyChanged("ChallengesData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FavoritePointsData {
            get {
                return this.FavoritePointsDataField;
            }
            set {
                if ((this.FavoritePointsDataField.Equals(value) != true)) {
                    this.FavoritePointsDataField = value;
                    this.RaisePropertyChanged("FavoritePointsData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GeocacheData {
            get {
                return this.GeocacheDataField;
            }
            set {
                if ((this.GeocacheDataField.Equals(value) != true)) {
                    this.GeocacheDataField = value;
                    this.RaisePropertyChanged("GeocacheData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PublicProfileData {
            get {
                return this.PublicProfileDataField;
            }
            set {
                if ((this.PublicProfileDataField.Equals(value) != true)) {
                    this.PublicProfileDataField = value;
                    this.RaisePropertyChanged("PublicProfileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SouvenirData {
            get {
                return this.SouvenirDataField;
            }
            set {
                if ((this.SouvenirDataField.Equals(value) != true)) {
                    this.SouvenirDataField = value;
                    this.RaisePropertyChanged("SouvenirData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackableData {
            get {
                return this.TrackableDataField;
            }
            set {
                if ((this.TrackableDataField.Equals(value) != true)) {
                    this.TrackableDataField = value;
                    this.RaisePropertyChanged("TrackableData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YourUserProfileOptions", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class YourUserProfileOptions : WinCachebox.ServiceReference1.UserProfileOptions {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailData {
            get {
                return this.EmailDataField;
            }
            set {
                if ((this.EmailDataField.Equals(value) != true)) {
                    this.EmailDataField = value;
                    this.RaisePropertyChanged("EmailData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserProfileResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserProfileResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UserProfile ProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.UserProfile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.YourUserProfile))]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ChallengeProfileData ChallengesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.FavoritePointsUserSummary FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheProfileData GeocachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.PublicProfileData PublicProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Souvenir[] SouvenirsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.SiteStats StatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TrackableProfileData TrackablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ChallengeProfileData Challenges {
            get {
                return this.ChallengesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengesField, value) != true)) {
                    this.ChallengesField = value;
                    this.RaisePropertyChanged("Challenges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.FavoritePointsUserSummary FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoritePointsField, value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.GeocacheProfileData Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.PublicProfileData PublicProfile {
            get {
                return this.PublicProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicProfileField, value) != true)) {
                    this.PublicProfileField = value;
                    this.RaisePropertyChanged("PublicProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Souvenir[] Souvenirs {
            get {
                return this.SouvenirsField;
            }
            set {
                if ((object.ReferenceEquals(this.SouvenirsField, value) != true)) {
                    this.SouvenirsField = value;
                    this.RaisePropertyChanged("Souvenirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.SiteStats Stats {
            get {
                return this.StatsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatsField, value) != true)) {
                    this.StatsField = value;
                    this.RaisePropertyChanged("Stats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.TrackableProfileData Trackables {
            get {
                return this.TrackablesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackablesField, value) != true)) {
                    this.TrackablesField = value;
                    this.RaisePropertyChanged("Trackables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChallengeProfileData", Namespace="http://www.geocaching.com/Challenges.Live/data")]
    [System.SerializableAttribute()]
    public partial class ChallengeProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompletedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ChallengeTypeStatistics[] TypeStatisticsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AcceptedCount {
            get {
                return this.AcceptedCountField;
            }
            set {
                if ((this.AcceptedCountField.Equals(value) != true)) {
                    this.AcceptedCountField = value;
                    this.RaisePropertyChanged("AcceptedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompletedCount {
            get {
                return this.CompletedCountField;
            }
            set {
                if ((this.CompletedCountField.Equals(value) != true)) {
                    this.CompletedCountField = value;
                    this.RaisePropertyChanged("CompletedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedCount {
            get {
                return this.CreatedCountField;
            }
            set {
                if ((this.CreatedCountField.Equals(value) != true)) {
                    this.CreatedCountField = value;
                    this.RaisePropertyChanged("CreatedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ChallengeTypeStatistics[] TypeStatistics {
            get {
                return this.TypeStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeStatisticsField, value) != true)) {
                    this.TypeStatisticsField = value;
                    this.RaisePropertyChanged("TypeStatistics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointsUserSummary", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FavoritePointsUserSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentCompleteTowardsNextPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalUntilNextPointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentCompleteTowardsNextPoint {
            get {
                return this.PercentCompleteTowardsNextPointField;
            }
            set {
                if ((this.PercentCompleteTowardsNextPointField.Equals(value) != true)) {
                    this.PercentCompleteTowardsNextPointField = value;
                    this.RaisePropertyChanged("PercentCompleteTowardsNextPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PointsAvailable {
            get {
                return this.PointsAvailableField;
            }
            set {
                if ((this.PointsAvailableField.Equals(value) != true)) {
                    this.PointsAvailableField = value;
                    this.RaisePropertyChanged("PointsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPoints {
            get {
                return this.TotalPointsField;
            }
            set {
                if ((this.TotalPointsField.Equals(value) != true)) {
                    this.TotalPointsField = value;
                    this.RaisePropertyChanged("TotalPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalUntilNextPoint {
            get {
                return this.TotalUntilNextPointField;
            }
            set {
                if ((this.TotalUntilNextPointField.Equals(value) != true)) {
                    this.TotalUntilNextPointField = value;
                    this.RaisePropertyChanged("TotalUntilNextPoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheProfileData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheType[] BenchmarkFindTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeocacheFindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheType[] GeocacheFindTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeocacheHideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheType[] GeocacheHideTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.GeocacheType[] BenchmarkFindTypes {
            get {
                return this.BenchmarkFindTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkFindTypesField, value) != true)) {
                    this.BenchmarkFindTypesField = value;
                    this.RaisePropertyChanged("BenchmarkFindTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeocacheFindCount {
            get {
                return this.GeocacheFindCountField;
            }
            set {
                if ((this.GeocacheFindCountField.Equals(value) != true)) {
                    this.GeocacheFindCountField = value;
                    this.RaisePropertyChanged("GeocacheFindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.GeocacheType[] GeocacheFindTypes {
            get {
                return this.GeocacheFindTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheFindTypesField, value) != true)) {
                    this.GeocacheFindTypesField = value;
                    this.RaisePropertyChanged("GeocacheFindTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeocacheHideCount {
            get {
                return this.GeocacheHideCountField;
            }
            set {
                if ((this.GeocacheHideCountField.Equals(value) != true)) {
                    this.GeocacheHideCountField = value;
                    this.RaisePropertyChanged("GeocacheHideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.GeocacheType[] GeocacheHideTypes {
            get {
                return this.GeocacheHideTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheHideTypesField, value) != true)) {
                    this.GeocacheHideTypesField = value;
                    this.RaisePropertyChanged("GeocacheHideTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicProfileData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class PublicProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastVisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MemberSinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ProfilePhotoData ProfilePhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumTitle {
            get {
                return this.ForumTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumTitleField, value) != true)) {
                    this.ForumTitleField = value;
                    this.RaisePropertyChanged("ForumTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastVisit {
            get {
                return this.LastVisitField;
            }
            set {
                if ((this.LastVisitField.Equals(value) != true)) {
                    this.LastVisitField = value;
                    this.RaisePropertyChanged("LastVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MemberSince {
            get {
                return this.MemberSinceField;
            }
            set {
                if ((this.MemberSinceField.Equals(value) != true)) {
                    this.MemberSinceField = value;
                    this.RaisePropertyChanged("MemberSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationField, value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ProfilePhotoData ProfilePhoto {
            get {
                return this.ProfilePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePhotoField, value) != true)) {
                    this.ProfilePhotoField = value;
                    this.RaisePropertyChanged("ProfilePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileText {
            get {
                return this.ProfileTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileTextField, value) != true)) {
                    this.ProfileTextField = value;
                    this.RaisePropertyChanged("ProfileText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteStats", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class SiteStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountsLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActiveCachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActiveCountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NewLogsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountsLogged {
            get {
                return this.AccountsLoggedField;
            }
            set {
                if ((this.AccountsLoggedField.Equals(value) != true)) {
                    this.AccountsLoggedField = value;
                    this.RaisePropertyChanged("AccountsLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActiveCaches {
            get {
                return this.ActiveCachesField;
            }
            set {
                if ((this.ActiveCachesField.Equals(value) != true)) {
                    this.ActiveCachesField = value;
                    this.RaisePropertyChanged("ActiveCaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActiveCountries {
            get {
                return this.ActiveCountriesField;
            }
            set {
                if ((this.ActiveCountriesField.Equals(value) != true)) {
                    this.ActiveCountriesField = value;
                    this.RaisePropertyChanged("ActiveCountries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NewLogs {
            get {
                return this.NewLogsField;
            }
            set {
                if ((this.NewLogsField.Equals(value) != true)) {
                    this.NewLogsField = value;
                    this.RaisePropertyChanged("NewLogs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackableProfileData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TrackableProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TrackableFindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Trackable[] TrackableFindTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TrackableOwnedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Trackable[] TrackableOwnedTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TrackableFindCount {
            get {
                return this.TrackableFindCountField;
            }
            set {
                if ((this.TrackableFindCountField.Equals(value) != true)) {
                    this.TrackableFindCountField = value;
                    this.RaisePropertyChanged("TrackableFindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Trackable[] TrackableFindTypes {
            get {
                return this.TrackableFindTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableFindTypesField, value) != true)) {
                    this.TrackableFindTypesField = value;
                    this.RaisePropertyChanged("TrackableFindTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TrackableOwnedCount {
            get {
                return this.TrackableOwnedCountField;
            }
            set {
                if ((this.TrackableOwnedCountField.Equals(value) != true)) {
                    this.TrackableOwnedCountField = value;
                    this.RaisePropertyChanged("TrackableOwnedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Trackable[] TrackableOwnedTypes {
            get {
                return this.TrackableOwnedTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableOwnedTypesField, value) != true)) {
                    this.TrackableOwnedTypesField = value;
                    this.RaisePropertyChanged("TrackableOwnedTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YourUserProfile", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class YourUserProfile : WinCachebox.ServiceReference1.UserProfile {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.EmailData EmailDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.EmailData EmailData {
            get {
                return this.EmailDataField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailDataField, value) != true)) {
                    this.EmailDataField = value;
                    this.RaisePropertyChanged("EmailData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Souvenir", Namespace="http://schemas.datacontract.org/2004/07/Souvenirs.Common.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.FindCountSouvenir))]
    public partial class Souvenir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AboutTheArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatorGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDiscoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateRangeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateRangeStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeedbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> FindCountThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FriendLeagueScoreThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.FriendLeagueScoreTimePeriod FriendLeagueScoreTimePeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HowFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IgnoreLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.SharedUtilitiesApprovalStatus IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LuaPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SouvenirGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SouvenirIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.SouvenirType SouvenirTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalAwardedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AboutTheArtist {
            get {
                return this.AboutTheArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutTheArtistField, value) != true)) {
                    this.AboutTheArtistField = value;
                    this.RaisePropertyChanged("AboutTheArtist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistURL {
            get {
                return this.ArtistURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistURLField, value) != true)) {
                    this.ArtistURLField = value;
                    this.RaisePropertyChanged("ArtistURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheID {
            get {
                return this.CacheIDField;
            }
            set {
                if ((this.CacheIDField.Equals(value) != true)) {
                    this.CacheIDField = value;
                    this.RaisePropertyChanged("CacheID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coordinates {
            get {
                return this.CoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinatesField, value) != true)) {
                    this.CoordinatesField = value;
                    this.RaisePropertyChanged("Coordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatorGUID {
            get {
                return this.CreatorGUIDField;
            }
            set {
                if ((this.CreatorGUIDField.Equals(value) != true)) {
                    this.CreatorGUIDField = value;
                    this.RaisePropertyChanged("CreatorGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatorID {
            get {
                return this.CreatorIDField;
            }
            set {
                if ((this.CreatorIDField.Equals(value) != true)) {
                    this.CreatorIDField = value;
                    this.RaisePropertyChanged("CreatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorName {
            get {
                return this.CreatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorNameField, value) != true)) {
                    this.CreatorNameField = value;
                    this.RaisePropertyChanged("CreatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorURL {
            get {
                return this.CreatorURLField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorURLField, value) != true)) {
                    this.CreatorURLField = value;
                    this.RaisePropertyChanged("CreatorURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDiscovered {
            get {
                return this.DateDiscoveredField;
            }
            set {
                if ((this.DateDiscoveredField.Equals(value) != true)) {
                    this.DateDiscoveredField = value;
                    this.RaisePropertyChanged("DateDiscovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRangeEnd {
            get {
                return this.DateRangeEndField;
            }
            set {
                if ((this.DateRangeEndField.Equals(value) != true)) {
                    this.DateRangeEndField = value;
                    this.RaisePropertyChanged("DateRangeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRangeStart {
            get {
                return this.DateRangeStartField;
            }
            set {
                if ((this.DateRangeStartField.Equals(value) != true)) {
                    this.DateRangeStartField = value;
                    this.RaisePropertyChanged("DateRangeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((this.FavoritePointsField.Equals(value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Feedback {
            get {
                return this.FeedbackField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackField, value) != true)) {
                    this.FeedbackField = value;
                    this.RaisePropertyChanged("Feedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> FindCountThreshold {
            get {
                return this.FindCountThresholdField;
            }
            set {
                if ((this.FindCountThresholdField.Equals(value) != true)) {
                    this.FindCountThresholdField = value;
                    this.RaisePropertyChanged("FindCountThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FriendLeagueScoreThreshold {
            get {
                return this.FriendLeagueScoreThresholdField;
            }
            set {
                if ((this.FriendLeagueScoreThresholdField.Equals(value) != true)) {
                    this.FriendLeagueScoreThresholdField = value;
                    this.RaisePropertyChanged("FriendLeagueScoreThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.FriendLeagueScoreTimePeriod FriendLeagueScoreTimePeriod {
            get {
                return this.FriendLeagueScoreTimePeriodField;
            }
            set {
                if ((this.FriendLeagueScoreTimePeriodField.Equals(value) != true)) {
                    this.FriendLeagueScoreTimePeriodField = value;
                    this.RaisePropertyChanged("FriendLeagueScoreTimePeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Hidden {
            get {
                return this.HiddenField;
            }
            set {
                if ((this.HiddenField.Equals(value) != true)) {
                    this.HiddenField = value;
                    this.RaisePropertyChanged("Hidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HowFound {
            get {
                return this.HowFoundField;
            }
            set {
                if ((this.HowFoundField.Equals(value) != true)) {
                    this.HowFoundField = value;
                    this.RaisePropertyChanged("HowFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IgnoreLocation {
            get {
                return this.IgnoreLocationField;
            }
            set {
                if ((this.IgnoreLocationField.Equals(value) != true)) {
                    this.IgnoreLocationField = value;
                    this.RaisePropertyChanged("IgnoreLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.SharedUtilitiesApprovalStatus IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LuaPath {
            get {
                return this.LuaPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LuaPathField, value) != true)) {
                    this.LuaPathField = value;
                    this.RaisePropertyChanged("LuaPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SouvenirGuid {
            get {
                return this.SouvenirGuidField;
            }
            set {
                if ((this.SouvenirGuidField.Equals(value) != true)) {
                    this.SouvenirGuidField = value;
                    this.RaisePropertyChanged("SouvenirGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SouvenirID {
            get {
                return this.SouvenirIDField;
            }
            set {
                if ((this.SouvenirIDField.Equals(value) != true)) {
                    this.SouvenirIDField = value;
                    this.RaisePropertyChanged("SouvenirID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.SouvenirType SouvenirType {
            get {
                return this.SouvenirTypeField;
            }
            set {
                if ((this.SouvenirTypeField.Equals(value) != true)) {
                    this.SouvenirTypeField = value;
                    this.RaisePropertyChanged("SouvenirType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Terrain {
            get {
                return this.TerrainField;
            }
            set {
                if ((this.TerrainField.Equals(value) != true)) {
                    this.TerrainField = value;
                    this.RaisePropertyChanged("Terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbPath {
            get {
                return this.ThumbPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbPathField, value) != true)) {
                    this.ThumbPathField = value;
                    this.RaisePropertyChanged("ThumbPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalAwarded {
            get {
                return this.TotalAwardedField;
            }
            set {
                if ((this.TotalAwardedField.Equals(value) != true)) {
                    this.TotalAwardedField = value;
                    this.RaisePropertyChanged("TotalAwarded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChallengeTypeStatistics", Namespace="http://www.geocaching.com/Challenges.Live/data")]
    [System.SerializableAttribute()]
    public partial class ChallengeTypeStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ChallengeType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastAcceptedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompletedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCompletedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.ChallengeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int AcceptedCount {
            get {
                return this.AcceptedCountField;
            }
            set {
                if ((this.AcceptedCountField.Equals(value) != true)) {
                    this.AcceptedCountField = value;
                    this.RaisePropertyChanged("AcceptedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime LastAcceptedOn {
            get {
                return this.LastAcceptedOnField;
            }
            set {
                if ((this.LastAcceptedOnField.Equals(value) != true)) {
                    this.LastAcceptedOnField = value;
                    this.RaisePropertyChanged("LastAcceptedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> CompletedCount {
            get {
                return this.CompletedCountField;
            }
            set {
                if ((this.CompletedCountField.Equals(value) != true)) {
                    this.CompletedCountField = value;
                    this.RaisePropertyChanged("CompletedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<System.DateTime> LastCompletedOn {
            get {
                return this.LastCompletedOnField;
            }
            set {
                if ((this.LastCompletedOnField.Equals(value) != true)) {
                    this.LastCompletedOnField = value;
                    this.RaisePropertyChanged("LastCompletedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChallengeType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Challenges.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ChallengeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfilePhotoData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ProfilePhotoData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoDescription {
            get {
                return this.PhotoDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoDescriptionField, value) != true)) {
                    this.PhotoDescriptionField = value;
                    this.RaisePropertyChanged("PhotoDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFilename {
            get {
                return this.PhotoFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFilenameField, value) != true)) {
                    this.PhotoFilenameField = value;
                    this.RaisePropertyChanged("PhotoFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoName {
            get {
                return this.PhotoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoNameField, value) != true)) {
                    this.PhotoNameField = value;
                    this.RaisePropertyChanged("PhotoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoUrl {
            get {
                return this.PhotoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoUrlField, value) != true)) {
                    this.PhotoUrlField = value;
                    this.RaisePropertyChanged("PhotoUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FindCountSouvenir", Namespace="http://schemas.datacontract.org/2004/07/Souvenirs.Common.Model")]
    [System.SerializableAttribute()]
    public partial class FindCountSouvenir : WinCachebox.ServiceReference1.Souvenir {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserFindCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserFindCount {
            get {
                return this.UserFindCountField;
            }
            set {
                if ((this.UserFindCountField.Equals(value) != true)) {
                    this.UserFindCountField = value;
                    this.RaisePropertyChanged("UserFindCount");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendLeagueScoreTimePeriod", Namespace="http://schemas.datacontract.org/2004/07/Souvenirs.Common.Model")]
    public enum FriendLeagueScoreTimePeriod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unset = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualWeekly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualAggregate = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedUtilities.ApprovalStatus", Namespace="http://schemas.datacontract.org/2004/07/Souvenirs.Common")]
    public enum SharedUtilitiesApprovalStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Denied = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSubmitted = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SouvenirType", Namespace="http://schemas.datacontract.org/2004/07/Souvenirs.Common.Model")]
    public enum SouvenirType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        unk = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        geo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        multigeo = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        wpttype = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        regarea = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        favorite = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        difficultyterrain = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        promo = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poly = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        milestone = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        individualfriendleague = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        groupfriendleague = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        findcountthreshold = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        geotour = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class EmailData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidated {
            get {
                return this.IsValidatedField;
            }
            set {
                if ((this.IsValidatedField.Equals(value) != true)) {
                    this.IsValidatedField = value;
                    this.RaisePropertyChanged("IsValidated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateFieldNoteAndPublishRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateFieldNoteAndPublishRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WptLogTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCDateLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromoteToLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UploadImageData ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FavoriteThisCacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EncryptLogTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UpdatedLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UpdatedLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> GuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WptLogTypeId {
            get {
                return this.WptLogTypeIdField;
            }
            set {
                if ((this.WptLogTypeIdField.Equals(value) != true)) {
                    this.WptLogTypeIdField = value;
                    this.RaisePropertyChanged("WptLogTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime UTCDateLogged {
            get {
                return this.UTCDateLoggedField;
            }
            set {
                if ((this.UTCDateLoggedField.Equals(value) != true)) {
                    this.UTCDateLoggedField = value;
                    this.RaisePropertyChanged("UTCDateLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool PromoteToLog {
            get {
                return this.PromoteToLogField;
            }
            set {
                if ((this.PromoteToLogField.Equals(value) != true)) {
                    this.PromoteToLogField = value;
                    this.RaisePropertyChanged("PromoteToLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public WinCachebox.ServiceReference1.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool FavoriteThisCache {
            get {
                return this.FavoriteThisCacheField;
            }
            set {
                if ((this.FavoriteThisCacheField.Equals(value) != true)) {
                    this.FavoriteThisCacheField = value;
                    this.RaisePropertyChanged("FavoriteThisCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool EncryptLogText {
            get {
                return this.EncryptLogTextField;
            }
            set {
                if ((this.EncryptLogTextField.Equals(value) != true)) {
                    this.EncryptLogTextField = value;
                    this.RaisePropertyChanged("EncryptLogText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public double UpdatedLatitude {
            get {
                return this.UpdatedLatitudeField;
            }
            set {
                if ((this.UpdatedLatitudeField.Equals(value) != true)) {
                    this.UpdatedLatitudeField = value;
                    this.RaisePropertyChanged("UpdatedLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public double UpdatedLongitude {
            get {
                return this.UpdatedLongitudeField;
            }
            set {
                if ((this.UpdatedLongitudeField.Equals(value) != true)) {
                    this.UpdatedLongitudeField = value;
                    this.RaisePropertyChanged("UpdatedLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<System.Guid> Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UploadImageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileCaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string base64ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileCaption {
            get {
                return this.FileCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileCaptionField, value) != true)) {
                    this.FileCaptionField = value;
                    this.RaisePropertyChanged("FileCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileDescription {
            get {
                return this.FileDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDescriptionField, value) != true)) {
                    this.FileDescriptionField = value;
                    this.RaisePropertyChanged("FileDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string base64ImageData {
            get {
                return this.base64ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.base64ImageDataField, value) != true)) {
                    this.base64ImageDataField = value;
                    this.RaisePropertyChanged("base64ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateFieldNoteAndPublishResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateFieldNoteAndPublishResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheLog LogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Souvenir[] SouvenirsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasValidFacebookAccountLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasValidTwitterAccountLinkedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.GeocacheLog Log {
            get {
                return this.LogField;
            }
            set {
                if ((object.ReferenceEquals(this.LogField, value) != true)) {
                    this.LogField = value;
                    this.RaisePropertyChanged("Log");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.Souvenir[] Souvenirs {
            get {
                return this.SouvenirsField;
            }
            set {
                if ((object.ReferenceEquals(this.SouvenirsField, value) != true)) {
                    this.SouvenirsField = value;
                    this.RaisePropertyChanged("Souvenirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<bool> HasValidFacebookAccountLinked {
            get {
                return this.HasValidFacebookAccountLinkedField;
            }
            set {
                if ((this.HasValidFacebookAccountLinkedField.Equals(value) != true)) {
                    this.HasValidFacebookAccountLinkedField = value;
                    this.RaisePropertyChanged("HasValidFacebookAccountLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<bool> HasValidTwitterAccountLinked {
            get {
                return this.HasValidTwitterAccountLinkedField;
            }
            set {
                if ((this.HasValidTwitterAccountLinkedField.Equals(value) != true)) {
                    this.HasValidTwitterAccountLinkedField = value;
                    this.RaisePropertyChanged("HasValidTwitterAccountLinked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchForSouvenirsByPublicGuidRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SearchForSouvenirsByPublicGuidRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PublicGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ExistingSouvenirIDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PublicGuid {
            get {
                return this.PublicGuidField;
            }
            set {
                if ((this.PublicGuidField.Equals(value) != true)) {
                    this.PublicGuidField = value;
                    this.RaisePropertyChanged("PublicGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int[] ExistingSouvenirIDs {
            get {
                return this.ExistingSouvenirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExistingSouvenirIDsField, value) != true)) {
                    this.ExistingSouvenirIDsField = value;
                    this.RaisePropertyChanged("ExistingSouvenirIDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SouvenirResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SouvenirResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Souvenir[] SouvenirsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.Souvenir[] Souvenirs {
            get {
                return this.SouvenirsField;
            }
            set {
                if ((object.ReferenceEquals(this.SouvenirsField, value) != true)) {
                    this.SouvenirsField = value;
                    this.RaisePropertyChanged("Souvenirs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateCacheNoteRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UpdateCacheNoteRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetYourUserProfileRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetYourUserProfileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.YourUserProfileOptions ProfileOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.DeviceData DeviceInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.YourUserProfileOptions ProfileOptions {
            get {
                return this.ProfileOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileOptionsField, value) != true)) {
                    this.ProfileOptionsField = value;
                    this.RaisePropertyChanged("ProfileOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.DeviceData DeviceInfo {
            get {
                return this.DeviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoField, value) != true)) {
                    this.DeviceInfoField = value;
                    this.RaisePropertyChanged("DeviceInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DeviceData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationCurrentMemoryUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationPeakMemoryUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationSoftwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceOperatingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DeviceTotalMemoryInMBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileHardwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebBrowserVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationCurrentMemoryUsage {
            get {
                return this.ApplicationCurrentMemoryUsageField;
            }
            set {
                if ((this.ApplicationCurrentMemoryUsageField.Equals(value) != true)) {
                    this.ApplicationCurrentMemoryUsageField = value;
                    this.RaisePropertyChanged("ApplicationCurrentMemoryUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationPeakMemoryUsage {
            get {
                return this.ApplicationPeakMemoryUsageField;
            }
            set {
                if ((this.ApplicationPeakMemoryUsageField.Equals(value) != true)) {
                    this.ApplicationPeakMemoryUsageField = value;
                    this.RaisePropertyChanged("ApplicationPeakMemoryUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationSoftwareVersion {
            get {
                return this.ApplicationSoftwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationSoftwareVersionField, value) != true)) {
                    this.ApplicationSoftwareVersionField = value;
                    this.RaisePropertyChanged("ApplicationSoftwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceManufacturer {
            get {
                return this.DeviceManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceManufacturerField, value) != true)) {
                    this.DeviceManufacturerField = value;
                    this.RaisePropertyChanged("DeviceManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceOperatingSystem {
            get {
                return this.DeviceOperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceOperatingSystemField, value) != true)) {
                    this.DeviceOperatingSystemField = value;
                    this.RaisePropertyChanged("DeviceOperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DeviceTotalMemoryInMB {
            get {
                return this.DeviceTotalMemoryInMBField;
            }
            set {
                if ((this.DeviceTotalMemoryInMBField.Equals(value) != true)) {
                    this.DeviceTotalMemoryInMBField = value;
                    this.RaisePropertyChanged("DeviceTotalMemoryInMB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceUniqueId {
            get {
                return this.DeviceUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceUniqueIdField, value) != true)) {
                    this.DeviceUniqueIdField = value;
                    this.RaisePropertyChanged("DeviceUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileHardwareVersion {
            get {
                return this.MobileHardwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileHardwareVersionField, value) != true)) {
                    this.MobileHardwareVersionField = value;
                    this.RaisePropertyChanged("MobileHardwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebBrowserVersion {
            get {
                return this.WebBrowserVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.WebBrowserVersionField, value) != true)) {
                    this.WebBrowserVersionField = value;
                    this.RaisePropertyChanged("WebBrowserVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetYourUserProfileResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetYourUserProfileResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.YourUserProfile ProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.YourUserProfile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageToGeocacheLogRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UploadImageToGeocacheLogRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UploadImageData ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ReferenceCode {
            get {
                return this.ReferenceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceCodeField, value) != true)) {
                    this.ReferenceCodeField = value;
                    this.RaisePropertyChanged("ReferenceCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UploadImageResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateTrackableLogRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateTrackableLogRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelBugCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCDateLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UploadImageData ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelBugCode {
            get {
                return this.TravelBugCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelBugCodeField, value) != true)) {
                    this.TravelBugCodeField = value;
                    this.RaisePropertyChanged("TravelBugCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime UTCDateLogged {
            get {
                return this.UTCDateLoggedField;
            }
            set {
                if ((this.UTCDateLoggedField.Equals(value) != true)) {
                    this.UTCDateLoggedField = value;
                    this.RaisePropertyChanged("UTCDateLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public long LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((this.LogTypeField.Equals(value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public WinCachebox.ServiceReference1.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateTrackableLogResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateTrackableLogResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TrackableLog LogField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.TrackableLog Log {
            get {
                return this.LogField;
            }
            set {
                if ((object.ReferenceEquals(this.LogField, value) != true)) {
                    this.LogField = value;
                    this.RaisePropertyChanged("Log");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageToTrackableLogRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UploadImageToTrackableLogRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UploadImageData ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBookmarkListByGuidRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBookmarkListByGuidRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookmarkListGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookmarkListGuid {
            get {
                return this.BookmarkListGuidField;
            }
            set {
                if ((this.BookmarkListGuidField.Equals(value) != true)) {
                    this.BookmarkListGuidField = value;
                    this.RaisePropertyChanged("BookmarkListGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBookmarkListResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBookmarkListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.BookmarkEntry[] BookmarkListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.BookmarkEntry[] BookmarkList {
            get {
                return this.BookmarkListField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkListField, value) != true)) {
                    this.BookmarkListField = value;
                    this.RaisePropertyChanged("BookmarkList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkEntry", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class BookmarkEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CacheTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheTitle {
            get {
                return this.CacheTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTitleField, value) != true)) {
                    this.CacheTitleField = value;
                    this.RaisePropertyChanged("CacheTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CacheTypeID {
            get {
                return this.CacheTypeIDField;
            }
            set {
                if ((this.CacheTypeIDField.Equals(value) != true)) {
                    this.CacheTypeIDField = value;
                    this.RaisePropertyChanged("CacheTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddGeocachesToBookmarkListRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class AddGeocachesToBookmarkListRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookmarkListGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookmarkListGuid {
            get {
                return this.BookmarkListGuidField;
            }
            set {
                if ((this.BookmarkListGuidField.Equals(value) != true)) {
                    this.BookmarkListGuidField = value;
                    this.RaisePropertyChanged("BookmarkListGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheStatusRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheStatusRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheStatusResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheStatusResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheStatus[] GeocacheStatusesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.GeocacheStatus[] GeocacheStatuses {
            get {
                return this.GeocacheStatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheStatusesField, value) != true)) {
                    this.GeocacheStatusesField = value;
                    this.RaisePropertyChanged("GeocacheStatuses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheStatus", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheName {
            get {
                return this.CacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheNameField, value) != true)) {
                    this.CacheNameField = value;
                    this.RaisePropertyChanged("CacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CacheType {
            get {
                return this.CacheTypeField;
            }
            set {
                if ((this.CacheTypeField.Equals(value) != true)) {
                    this.CacheTypeField = value;
                    this.RaisePropertyChanged("CacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Premium {
            get {
                return this.PremiumField;
            }
            set {
                if ((this.PremiumField.Equals(value) != true)) {
                    this.PremiumField = value;
                    this.RaisePropertyChanged("Premium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackableCount {
            get {
                return this.TrackableCountField;
            }
            set {
                if ((this.TrackableCountField.Equals(value) != true)) {
                    this.TrackableCountField = value;
                    this.RaisePropertyChanged("TrackableCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMembershipTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetMembershipTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MembershipType[] MembershipsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.MembershipType[] Memberships {
            get {
                return this.MembershipsField;
            }
            set {
                if ((object.ReferenceEquals(this.MembershipsField, value) != true)) {
                    this.MembershipsField = value;
                    this.RaisePropertyChanged("Memberships");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAPILimitsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetAPILimitsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.RestrictionMatrix LimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MaxPerPage MaxPerPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.RestrictionMatrix Limits {
            get {
                return this.LimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.LimitsField, value) != true)) {
                    this.LimitsField = value;
                    this.RaisePropertyChanged("Limits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.MaxPerPage MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxPerPageField, value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestrictionMatrix", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class RestrictionMatrix : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CacheLimitPerMinute[] CacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnforceCacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnforceLiteCacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnforceMethodLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MembershipLevel ForMembershipTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LiteCacheLimitPerMinute[] LiteCacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong MaxCallsbyIPIn1MinuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MethodRestriction[] MethodLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RestrictbyIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateIPCountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.CacheLimitPerMinute[] CacheLimits {
            get {
                return this.CacheLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheLimitsField, value) != true)) {
                    this.CacheLimitsField = value;
                    this.RaisePropertyChanged("CacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnforceCacheLimits {
            get {
                return this.EnforceCacheLimitsField;
            }
            set {
                if ((this.EnforceCacheLimitsField.Equals(value) != true)) {
                    this.EnforceCacheLimitsField = value;
                    this.RaisePropertyChanged("EnforceCacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnforceLiteCacheLimits {
            get {
                return this.EnforceLiteCacheLimitsField;
            }
            set {
                if ((this.EnforceLiteCacheLimitsField.Equals(value) != true)) {
                    this.EnforceLiteCacheLimitsField = value;
                    this.RaisePropertyChanged("EnforceLiteCacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnforceMethodLimits {
            get {
                return this.EnforceMethodLimitsField;
            }
            set {
                if ((this.EnforceMethodLimitsField.Equals(value) != true)) {
                    this.EnforceMethodLimitsField = value;
                    this.RaisePropertyChanged("EnforceMethodLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.MembershipLevel ForMembershipType {
            get {
                return this.ForMembershipTypeField;
            }
            set {
                if ((this.ForMembershipTypeField.Equals(value) != true)) {
                    this.ForMembershipTypeField = value;
                    this.RaisePropertyChanged("ForMembershipType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseKey {
            get {
                return this.LicenseKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseKeyField, value) != true)) {
                    this.LicenseKeyField = value;
                    this.RaisePropertyChanged("LicenseKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.LiteCacheLimitPerMinute[] LiteCacheLimits {
            get {
                return this.LiteCacheLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.LiteCacheLimitsField, value) != true)) {
                    this.LiteCacheLimitsField = value;
                    this.RaisePropertyChanged("LiteCacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong MaxCallsbyIPIn1Minute {
            get {
                return this.MaxCallsbyIPIn1MinuteField;
            }
            set {
                if ((this.MaxCallsbyIPIn1MinuteField.Equals(value) != true)) {
                    this.MaxCallsbyIPIn1MinuteField = value;
                    this.RaisePropertyChanged("MaxCallsbyIPIn1Minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.MethodRestriction[] MethodLimits {
            get {
                return this.MethodLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodLimitsField, value) != true)) {
                    this.MethodLimitsField = value;
                    this.RaisePropertyChanged("MethodLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RestrictbyIP {
            get {
                return this.RestrictbyIPField;
            }
            set {
                if ((this.RestrictbyIPField.Equals(value) != true)) {
                    this.RestrictbyIPField = value;
                    this.RaisePropertyChanged("RestrictbyIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateIPCounts {
            get {
                return this.ValidateIPCountsField;
            }
            set {
                if ((this.ValidateIPCountsField.Equals(value) != true)) {
                    this.ValidateIPCountsField = value;
                    this.RaisePropertyChanged("ValidateIPCounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaxPerPage", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class MaxPerPage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeocachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeocacheLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CacheNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GalleryImagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((this.GeocachesField.Equals(value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int GeocacheLogs {
            get {
                return this.GeocacheLogsField;
            }
            set {
                if ((this.GeocacheLogsField.Equals(value) != true)) {
                    this.GeocacheLogsField = value;
                    this.RaisePropertyChanged("GeocacheLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Trackables {
            get {
                return this.TrackablesField;
            }
            set {
                if ((this.TrackablesField.Equals(value) != true)) {
                    this.TrackablesField = value;
                    this.RaisePropertyChanged("Trackables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int TrackableLogs {
            get {
                return this.TrackableLogsField;
            }
            set {
                if ((this.TrackableLogsField.Equals(value) != true)) {
                    this.TrackableLogsField = value;
                    this.RaisePropertyChanged("TrackableLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int CacheNotes {
            get {
                return this.CacheNotesField;
            }
            set {
                if ((this.CacheNotesField.Equals(value) != true)) {
                    this.CacheNotesField = value;
                    this.RaisePropertyChanged("CacheNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int GalleryImages {
            get {
                return this.GalleryImagesField;
            }
            set {
                if ((this.GalleryImagesField.Equals(value) != true)) {
                    this.GalleryImagesField = value;
                    this.RaisePropertyChanged("GalleryImages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheLimitPerMinute", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class CacheLimitPerMinute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CacheLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CacheLimit {
            get {
                return this.CacheLimitField;
            }
            set {
                if ((this.CacheLimitField.Equals(value) != true)) {
                    this.CacheLimitField = value;
                    this.RaisePropertyChanged("CacheLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipLevel", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    public enum MembershipLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Premium = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Charter = 20,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiteCacheLimitPerMinute", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class LiteCacheLimitPerMinute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CacheLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CacheLimit {
            get {
                return this.CacheLimitField;
            }
            set {
                if ((this.CacheLimitField.Equals(value) != true)) {
                    this.CacheLimitField = value;
                    this.RaisePropertyChanged("CacheLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodRestriction", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class MethodRestriction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong MaxCallsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartnerMethodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong MaxCalls {
            get {
                return this.MaxCallsField;
            }
            set {
                if ((this.MaxCallsField.Equals(value) != true)) {
                    this.MaxCallsField = value;
                    this.RaisePropertyChanged("MaxCalls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartnerMethod {
            get {
                return this.PartnerMethodField;
            }
            set {
                if ((this.PartnerMethodField.Equals(value) != true)) {
                    this.PartnerMethodField = value;
                    this.RaisePropertyChanged("PartnerMethod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSiteStatsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetSiteStatsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.SiteStats StatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.SiteStats Stats {
            get {
                return this.StatsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatsField, value) != true)) {
                    this.StatsField = value;
                    this.RaisePropertyChanged("Stats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetStatusMessageResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetStatusMessageResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse[] StatusMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse[] StatusMessages {
            get {
                return this.StatusMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessagesField, value) != true)) {
                    this.StatusMessagesField = value;
                    this.RaisePropertyChanged("StatusMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetImagesForGeocacheResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetImagesForGeocacheResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ImageData[] ImagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWptLogTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetWptLogTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.WptLogType[] WptLogTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdsinCacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdswithPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheLogTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] EventLogTypeIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.WptLogType[] WptLogTypes {
            get {
                return this.WptLogTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.WptLogTypesField, value) != true)) {
                    this.WptLogTypesField = value;
                    this.RaisePropertyChanged("WptLogTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long[] TrackableLogTypeIdsinCache {
            get {
                return this.TrackableLogTypeIdsinCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdsinCacheField, value) != true)) {
                    this.TrackableLogTypeIdsinCacheField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdsinCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long[] TrackableLogTypeIdswithPerson {
            get {
                return this.TrackableLogTypeIdswithPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdswithPersonField, value) != true)) {
                    this.TrackableLogTypeIdswithPersonField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdswithPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long[] GeocacheLogTypeIds {
            get {
                return this.GeocacheLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheLogTypeIdsField, value) != true)) {
                    this.GeocacheLogTypeIdsField = value;
                    this.RaisePropertyChanged("GeocacheLogTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public long[] EventLogTypeIds {
            get {
                return this.EventLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventLogTypeIdsField, value) != true)) {
                    this.EventLogTypeIdsField = value;
                    this.RaisePropertyChanged("EventLogTypeIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheType[] GeocacheTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.GeocacheType[] GeocacheTypes {
            get {
                return this.GeocacheTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypesField, value) != true)) {
                    this.GeocacheTypesField = value;
                    this.RaisePropertyChanged("GeocacheTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheDataTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheDataTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.GeocacheType[] GeocacheTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.WptLogType[] WptLogTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdsinCacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdswithPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheLogTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] EventLogTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.AttributeType[] AttributeTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.GeocacheType[] GeocacheTypes {
            get {
                return this.GeocacheTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypesField, value) != true)) {
                    this.GeocacheTypesField = value;
                    this.RaisePropertyChanged("GeocacheTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.WptLogType[] WptLogTypes {
            get {
                return this.WptLogTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.WptLogTypesField, value) != true)) {
                    this.WptLogTypesField = value;
                    this.RaisePropertyChanged("WptLogTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long[] TrackableLogTypeIdsinCache {
            get {
                return this.TrackableLogTypeIdsinCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdsinCacheField, value) != true)) {
                    this.TrackableLogTypeIdsinCacheField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdsinCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long[] TrackableLogTypeIdswithPerson {
            get {
                return this.TrackableLogTypeIdswithPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdswithPersonField, value) != true)) {
                    this.TrackableLogTypeIdswithPersonField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdswithPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public long[] GeocacheLogTypeIds {
            get {
                return this.GeocacheLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheLogTypeIdsField, value) != true)) {
                    this.GeocacheLogTypeIdsField = value;
                    this.RaisePropertyChanged("GeocacheLogTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public long[] EventLogTypeIds {
            get {
                return this.EventLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventLogTypeIdsField, value) != true)) {
                    this.EventLogTypeIdsField = value;
                    this.RaisePropertyChanged("EventLogTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public WinCachebox.ServiceReference1.AttributeType[] AttributeTypes {
            get {
                return this.AttributeTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypesField, value) != true)) {
                    this.AttributeTypesField = value;
                    this.RaisePropertyChanged("AttributeTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class AttributeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasNoOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasYesOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoIconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotChosenIconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YesIconNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasNoOption {
            get {
                return this.HasNoOptionField;
            }
            set {
                if ((this.HasNoOptionField.Equals(value) != true)) {
                    this.HasNoOptionField = value;
                    this.RaisePropertyChanged("HasNoOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasYesOption {
            get {
                return this.HasYesOptionField;
            }
            set {
                if ((this.HasYesOptionField.Equals(value) != true)) {
                    this.HasYesOptionField = value;
                    this.RaisePropertyChanged("HasYesOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconName {
            get {
                return this.IconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IconNameField, value) != true)) {
                    this.IconNameField = value;
                    this.RaisePropertyChanged("IconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoIconName {
            get {
                return this.NoIconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NoIconNameField, value) != true)) {
                    this.NoIconNameField = value;
                    this.RaisePropertyChanged("NoIconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotChosenIconName {
            get {
                return this.NotChosenIconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NotChosenIconNameField, value) != true)) {
                    this.NotChosenIconNameField = value;
                    this.RaisePropertyChanged("NotChosenIconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YesIconName {
            get {
                return this.YesIconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.YesIconNameField, value) != true)) {
                    this.YesIconNameField = value;
                    this.RaisePropertyChanged("YesIconName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPocketQueryListResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetPocketQueryListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.PQData[] PocketQueryListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.PQData[] PocketQueryList {
            get {
                return this.PocketQueryListField;
            }
            set {
                if ((object.ReferenceEquals(this.PocketQueryListField, value) != true)) {
                    this.PocketQueryListField = value;
                    this.RaisePropertyChanged("PocketQueryList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PQData", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class PQData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLastGeneratedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDownloadAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeInBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.PQSearchTypes PQSearchTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PQCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((this.GUIDField.Equals(value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime DateLastGenerated {
            get {
                return this.DateLastGeneratedField;
            }
            set {
                if ((this.DateLastGeneratedField.Equals(value) != true)) {
                    this.DateLastGeneratedField = value;
                    this.RaisePropertyChanged("DateLastGenerated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsDownloadAvailable {
            get {
                return this.IsDownloadAvailableField;
            }
            set {
                if ((this.IsDownloadAvailableField.Equals(value) != true)) {
                    this.IsDownloadAvailableField = value;
                    this.RaisePropertyChanged("IsDownloadAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long FileSizeInBytes {
            get {
                return this.FileSizeInBytesField;
            }
            set {
                if ((this.FileSizeInBytesField.Equals(value) != true)) {
                    this.FileSizeInBytesField = value;
                    this.RaisePropertyChanged("FileSizeInBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public WinCachebox.ServiceReference1.PQSearchTypes PQSearchType {
            get {
                return this.PQSearchTypeField;
            }
            set {
                if ((this.PQSearchTypeField.Equals(value) != true)) {
                    this.PQSearchTypeField = value;
                    this.RaisePropertyChanged("PQSearchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int PQCount {
            get {
                return this.PQCountField;
            }
            set {
                if ((this.PQCountField.Equals(value) != true)) {
                    this.PQCountField = value;
                    this.RaisePropertyChanged("PQCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PQSearchTypes", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.Web.PocketQueries")]
    public enum PQSearchTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bookmark = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogEntries = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MyFinds = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserRoute = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Backlog = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Priority = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPocketQueryZippedFileResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetPocketQueryZippedFileResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZippedFileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZippedFile {
            get {
                return this.ZippedFileField;
            }
            set {
                if ((object.ReferenceEquals(this.ZippedFileField, value) != true)) {
                    this.ZippedFileField = value;
                    this.RaisePropertyChanged("ZippedFile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackableTravelResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackableTravelResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TrackableTravel[] TrackableTravelsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.TrackableTravel[] TrackableTravels {
            get {
                return this.TrackableTravelsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableTravelsField, value) != true)) {
                    this.TrackableTravelsField = value;
                    this.RaisePropertyChanged("TrackableTravels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackableTravel", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TrackableTravel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheID {
            get {
                return this.CacheIDField;
            }
            set {
                if ((this.CacheIDField.Equals(value) != true)) {
                    this.CacheIDField = value;
                    this.RaisePropertyChanged("CacheID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLogged {
            get {
                return this.DateLoggedField;
            }
            set {
                if ((this.DateLoggedField.Equals(value) != true)) {
                    this.DateLoggedField = value;
                    this.RaisePropertyChanged("DateLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAttributeTypesDataResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetAttributeTypesDataResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.AttributeType[] AttributeTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.AttributeType[] AttributeTypes {
            get {
                return this.AttributeTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypesField, value) != true)) {
                    this.AttributeTypesField = value;
                    this.RaisePropertyChanged("AttributeTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserCredentialsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserCredentialsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackableLogsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackableLogsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TrackableLog[] TrackableLogsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.TrackableLog[] TrackableLogs {
            get {
                return this.TrackableLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogsField, value) != true)) {
                    this.TrackableLogsField = value;
                    this.RaisePropertyChanged("TrackableLogs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersCacheNotesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersCacheNotesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CacheNote[] CacheNotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.CacheNote[] CacheNotes {
            get {
                return this.CacheNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheNotesField, value) != true)) {
                    this.CacheNotesField = value;
                    this.RaisePropertyChanged("CacheNotes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheNote", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CacheNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Member FinderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCCreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCUpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByApplication {
            get {
                return this.CreatedByApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByApplicationField, value) != true)) {
                    this.CreatedByApplicationField = value;
                    this.RaisePropertyChanged("CreatedByApplication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Member Finder {
            get {
                return this.FinderField;
            }
            set {
                if ((object.ReferenceEquals(this.FinderField, value) != true)) {
                    this.FinderField = value;
                    this.RaisePropertyChanged("Finder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCCreateDate {
            get {
                return this.UTCCreateDateField;
            }
            set {
                if ((this.UTCCreateDateField.Equals(value) != true)) {
                    this.UTCCreateDateField = value;
                    this.RaisePropertyChanged("UTCCreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCUpdatedDate {
            get {
                return this.UTCUpdatedDateField;
            }
            set {
                if ((this.UTCUpdatedDateField.Equals(value) != true)) {
                    this.UTCUpdatedDateField = value;
                    this.RaisePropertyChanged("UTCUpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserWaypointsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserWaypointsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UserWaypoint[] UserWaypointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.UserWaypoint[] UserWaypoints {
            get {
                return this.UserWaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserWaypointsField, value) != true)) {
                    this.UserWaypointsField = value;
                    this.RaisePropertyChanged("UserWaypoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.ConsumerKeyRequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsByIso3166Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsByCountryIdRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetCountriesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthByGeocacheCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AccessTokenRequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.DeleteLabCountItemRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetUserFindCountsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetUserHideCountsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.DisableAccountRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SendValidationEmailRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AddAdventureHistoryItemRequest))]
    public partial class RequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsumerKeyRequestBase", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsByIso3166Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsByCountryIdRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetCountriesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthByGeocacheCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryByCacheId))]
    public partial class ConsumerKeyRequestBase : WinCachebox.ServiceReference1.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerKey {
            get {
                return this.ConsumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerKeyField, value) != true)) {
                    this.ConsumerKeyField = value;
                    this.RaisePropertyChanged("ConsumerKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRegionsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsByIso3166Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsByCountryIdRequest))]
    public partial class GetRegionsRequest : WinCachebox.ServiceReference1.ConsumerKeyRequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRegionsByIso3166Request", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetRegionsByIso3166Request : WinCachebox.ServiceReference1.GetRegionsRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIso3166CodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryIso3166Code {
            get {
                return this.CountryIso3166CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIso3166CodeField, value) != true)) {
                    this.CountryIso3166CodeField = value;
                    this.RaisePropertyChanged("CountryIso3166Code");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRegionsByCountryIdRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetRegionsByCountryIdRequest : WinCachebox.ServiceReference1.GetRegionsRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCountriesRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetCountriesRequest : WinCachebox.ServiceReference1.ConsumerKeyRequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheHealthRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthByGeocacheCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthByCacheId))]
    public partial class GetGeocacheHealthRequest : WinCachebox.ServiceReference1.ConsumerKeyRequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheHealthByGeocacheCode", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheHealthByGeocacheCode : WinCachebox.ServiceReference1.GetGeocacheHealthRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheCode {
            get {
                return this.GeocacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheCodeField, value) != true)) {
                    this.GeocacheCodeField = value;
                    this.RaisePropertyChanged("GeocacheCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheHealthByCacheId", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheHealthByCacheId : WinCachebox.ServiceReference1.GetGeocacheHealthRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CacheIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CacheId {
            get {
                return this.CacheIdField;
            }
            set {
                if ((this.CacheIdField.Equals(value) != true)) {
                    this.CacheIdField = value;
                    this.RaisePropertyChanged("CacheId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheHealthNotificationRequest", Namespace="http://wwww.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationByCacheId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryByCacheId))]
    public partial class GetGeocacheHealthNotificationRequest : WinCachebox.ServiceReference1.ConsumerKeyRequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetActiveGeocacheHealthNotificationByCacheId", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetActiveGeocacheHealthNotificationByCacheId : WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CacheIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CacheId {
            get {
                return this.CacheIdField;
            }
            set {
                if ((this.CacheIdField.Equals(value) != true)) {
                    this.CacheIdField = value;
                    this.RaisePropertyChanged("CacheId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLatestGeocacheHealthNotificationByCacheId", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetLatestGeocacheHealthNotificationByCacheId : WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CacheIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CacheId {
            get {
                return this.CacheIdField;
            }
            set {
                if ((this.CacheIdField.Equals(value) != true)) {
                    this.CacheIdField = value;
                    this.RaisePropertyChanged("CacheId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheHealthNotificationHistoryByCacheId", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheHealthNotificationHistoryByCacheId : WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CacheIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CacheId {
            get {
                return this.CacheIdField;
            }
            set {
                if ((this.CacheIdField.Equals(value) != true)) {
                    this.CacheIdField = value;
                    this.RaisePropertyChanged("CacheId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessTokenRequestBase", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.DeleteLabCountItemRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetUserFindCountsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetUserHideCountsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.DisableAccountRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SendValidationEmailRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AddAdventureHistoryItemRequest))]
    public partial class AccessTokenRequestBase : WinCachebox.ServiceReference1.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteLabCountItemRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class DeleteLabCountItemRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserFindCountsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserFindCountsRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserHideCountsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserHideCountsRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AccountIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisableAccountRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class DisableAccountRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PublicGuidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PublicGuid {
            get {
                return this.PublicGuidField;
            }
            set {
                if ((this.PublicGuidField.Equals(value) != true)) {
                    this.PublicGuidField = value;
                    this.RaisePropertyChanged("PublicGuid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendValidationEmailRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SendValidationEmailRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddAdventureHistoryItemRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class AddAdventureHistoryItemRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AdventureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFoundUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GeocacheIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> GeocacheOwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimezoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AdventureId {
            get {
                return this.AdventureIdField;
            }
            set {
                if ((this.AdventureIdField.Equals(value) != true)) {
                    this.AdventureIdField = value;
                    this.RaisePropertyChanged("AdventureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFoundUtc {
            get {
                return this.DateFoundUtcField;
            }
            set {
                if ((this.DateFoundUtcField.Equals(value) != true)) {
                    this.DateFoundUtcField = value;
                    this.RaisePropertyChanged("DateFoundUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GeocacheId {
            get {
                return this.GeocacheIdField;
            }
            set {
                if ((this.GeocacheIdField.Equals(value) != true)) {
                    this.GeocacheIdField = value;
                    this.RaisePropertyChanged("GeocacheId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheName {
            get {
                return this.GeocacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNameField, value) != true)) {
                    this.GeocacheNameField = value;
                    this.RaisePropertyChanged("GeocacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> GeocacheOwnerId {
            get {
                return this.GeocacheOwnerIdField;
            }
            set {
                if ((this.GeocacheOwnerIdField.Equals(value) != true)) {
                    this.GeocacheOwnerIdField = value;
                    this.RaisePropertyChanged("GeocacheOwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Timezone {
            get {
                return this.TimezoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimezoneField, value) != true)) {
                    this.TimezoneField = value;
                    this.RaisePropertyChanged("Timezone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.DeleteLabCountItemResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetUserFindCountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetRegionsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetCountriesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetUserHideCountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SetUserAvatarImageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.DisableAccountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SendValidationEmailResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AddAdventureHistoryItemResponse))]
    public partial class ResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteLabCountItemResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class DeleteLabCountItemResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserFindCountsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserFindCountsResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LabsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalFindCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabsCount {
            get {
                return this.LabsCountField;
            }
            set {
                if ((this.LabsCountField.Equals(value) != true)) {
                    this.LabsCountField = value;
                    this.RaisePropertyChanged("LabsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalFindCount {
            get {
                return this.TotalFindCountField;
            }
            set {
                if ((this.TotalFindCountField.Equals(value) != true)) {
                    this.TotalFindCountField = value;
                    this.RaisePropertyChanged("TotalFindCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRegionsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetRegionsResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Region[] RegionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Region[] Regions {
            get {
                return this.RegionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionsField, value) != true)) {
                    this.RegionsField = value;
                    this.RaisePropertyChanged("Regions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCountriesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetCountriesResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Country[] CountriesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Country[] Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserHideCountsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserHideCountsResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LabsHideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalHideCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabsHideCount {
            get {
                return this.LabsHideCountField;
            }
            set {
                if ((this.LabsHideCountField.Equals(value) != true)) {
                    this.LabsHideCountField = value;
                    this.RaisePropertyChanged("LabsHideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalHideCount {
            get {
                return this.TotalHideCountField;
            }
            set {
                if ((this.TotalHideCountField.Equals(value) != true)) {
                    this.TotalHideCountField = value;
                    this.RaisePropertyChanged("TotalHideCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheHealthResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheHealthResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastCalculatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime LastCalculated {
            get {
                return this.LastCalculatedField;
            }
            set {
                if ((this.LastCalculatedField.Equals(value) != true)) {
                    this.LastCalculatedField = value;
                    this.RaisePropertyChanged("LastCalculated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLatestGeocacheHealthNotificationResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetLatestGeocacheHealthNotificationResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScoreDropDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LatestNotificationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ScoreDropDate {
            get {
                return this.ScoreDropDateField;
            }
            set {
                if ((this.ScoreDropDateField.Equals(value) != true)) {
                    this.ScoreDropDateField = value;
                    this.RaisePropertyChanged("ScoreDropDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<System.DateTime> LatestNotificationDate {
            get {
                return this.LatestNotificationDateField;
            }
            set {
                if ((this.LatestNotificationDateField.Equals(value) != true)) {
                    this.LatestNotificationDateField = value;
                    this.RaisePropertyChanged("LatestNotificationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetActiveGeocacheHealthNotificationResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetActiveGeocacheHealthNotificationResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScoreDropDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime[] EmailNotificationDatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ScoreDropDate {
            get {
                return this.ScoreDropDateField;
            }
            set {
                if ((this.ScoreDropDateField.Equals(value) != true)) {
                    this.ScoreDropDateField = value;
                    this.RaisePropertyChanged("ScoreDropDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime[] EmailNotificationDates {
            get {
                return this.EmailNotificationDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailNotificationDatesField, value) != true)) {
                    this.EmailNotificationDatesField = value;
                    this.RaisePropertyChanged("EmailNotificationDates");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheHealthNotificationHistoryResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheHealthNotificationHistoryResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.NotificationHistoryItem[] NotificationHistoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.NotificationHistoryItem[] NotificationHistory {
            get {
                return this.NotificationHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationHistoryField, value) != true)) {
                    this.NotificationHistoryField = value;
                    this.RaisePropertyChanged("NotificationHistory");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetUserAvatarImageResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SetUserAvatarImageResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvatarUrl {
            get {
                return this.AvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarUrlField, value) != true)) {
                    this.AvatarUrlField = value;
                    this.RaisePropertyChanged("AvatarUrl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisableAccountResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class DisableAccountResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.DisableAccountValidationError[] DisableAccountValidationErrorsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.DisableAccountValidationError[] DisableAccountValidationErrors {
            get {
                return this.DisableAccountValidationErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.DisableAccountValidationErrorsField, value) != true)) {
                    this.DisableAccountValidationErrorsField = value;
                    this.RaisePropertyChanged("DisableAccountValidationErrors");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendValidationEmailResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SendValidationEmailResponse : WinCachebox.ServiceReference1.ResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddAdventureHistoryItemResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class AddAdventureHistoryItemResponse : WinCachebox.ServiceReference1.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/Geocaching.Services.Geography.WcfService." +
        "Contracts.Models")]
    [System.SerializableAttribute()]
    public partial class Region : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/Geocaching.Services.Geography.WcfService." +
        "Contracts.Models")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIso3166CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryIso3166Code {
            get {
                return this.CountryIso3166CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIso3166CodeField, value) != true)) {
                    this.CountryIso3166CodeField = value;
                    this.RaisePropertyChanged("CountryIso3166Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationHistoryItem", Namespace="http://schemas.datacontract.org/2004/07/Geocache.Health.Results.Wrappers")]
    [System.SerializableAttribute()]
    public partial class NotificationHistoryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisableAccountValidationError", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    public enum DisableAccountValidationError : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasPublishedCaches = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasOtherAccountsTrackables = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBeginnerCachesRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBeginnerCachesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBeginnerGeocacheDataResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBeginnerGeocacheDataResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] BestCachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Geocache[] GeocachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.LockedGeocache[] LockedCachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PQCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CacheLimitCounts CacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SearchRadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.VersionInfo CurrentVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long[] BestCaches {
            get {
                return this.BestCachesField;
            }
            set {
                if ((object.ReferenceEquals(this.BestCachesField, value) != true)) {
                    this.BestCachesField = value;
                    this.RaisePropertyChanged("BestCaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.Geocache[] Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public WinCachebox.ServiceReference1.LockedGeocache[] LockedCaches {
            get {
                return this.LockedCachesField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedCachesField, value) != true)) {
                    this.LockedCachesField = value;
                    this.RaisePropertyChanged("LockedCaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long PQCount {
            get {
                return this.PQCountField;
            }
            set {
                if ((this.PQCountField.Equals(value) != true)) {
                    this.PQCountField = value;
                    this.RaisePropertyChanged("PQCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public WinCachebox.ServiceReference1.CacheLimitCounts CacheLimits {
            get {
                return this.CacheLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheLimitsField, value) != true)) {
                    this.CacheLimitsField = value;
                    this.RaisePropertyChanged("CacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public long SearchRadius {
            get {
                return this.SearchRadiusField;
            }
            set {
                if ((this.SearchRadiusField.Equals(value) != true)) {
                    this.SearchRadiusField = value;
                    this.RaisePropertyChanged("SearchRadius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public WinCachebox.ServiceReference1.VersionInfo CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VersionInfo", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class VersionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockedGeocache", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class LockedGeocache : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string PlacedBy {
            get {
                return this.PlacedByField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacedByField, value) != true)) {
                    this.PlacedByField = value;
                    this.RaisePropertyChanged("PlacedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocachesFromPocketQueryRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocachesFromPocketQueryRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PocketQueryGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PocketQueryGuid {
            get {
                return this.PocketQueryGuidField;
            }
            set {
                if ((this.PocketQueryGuidField.Equals(value) != true)) {
                    this.PocketQueryGuidField = value;
                    this.RaisePropertyChanged("PocketQueryGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocachesFromPocketQueryResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocachesFromPocketQueryResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Geocache[] GeocachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Coordinate OriginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.Geocache[] Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.Coordinate Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coordinate", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.Platform.Geography")]
    [System.SerializableAttribute()]
    public partial class Coordinate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetContainerTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetContainerTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.ContainerType[] ContainersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WinCachebox.ServiceReference1.ContainerType[] Containers {
            get {
                return this.ContainersField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainersField, value) != true)) {
                    this.ContainersField = value;
                    this.RaisePropertyChanged("Containers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNearbyCacheStatsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetNearbyCacheStatsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DistanceToSearchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerKey {
            get {
                return this.ConsumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerKeyField, value) != true)) {
                    this.ConsumerKeyField = value;
                    this.RaisePropertyChanged("ConsumerKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long DistanceToSearch {
            get {
                return this.DistanceToSearchField;
            }
            set {
                if ((this.DistanceToSearchField.Equals(value) != true)) {
                    this.DistanceToSearchField = value;
                    this.RaisePropertyChanged("DistanceToSearch");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNearbyCacheStatsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetNearbyCacheStatsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNearbyCachesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCaches {
            get {
                return this.TotalCachesField;
            }
            set {
                if ((this.TotalCachesField.Equals(value) != true)) {
                    this.TotalCachesField = value;
                    this.RaisePropertyChanged("TotalCaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalUsers {
            get {
                return this.TotalUsersField;
            }
            set {
                if ((this.TotalUsersField.Equals(value) != true)) {
                    this.TotalUsersField = value;
                    this.RaisePropertyChanged("TotalUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int TotalNearbyCaches {
            get {
                return this.TotalNearbyCachesField;
            }
            set {
                if ((this.TotalNearbyCachesField.Equals(value) != true)) {
                    this.TotalNearbyCachesField = value;
                    this.RaisePropertyChanged("TotalNearbyCaches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPrecomputedNearbyCacheStatsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetPrecomputedNearbyCacheStatsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerKey {
            get {
                return this.ConsumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerKeyField, value) != true)) {
                    this.ConsumerKeyField = value;
                    this.RaisePropertyChanged("ConsumerKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPrecomputedNearbyCacheStatsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetPrecomputedNearbyCacheStatsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.CacheCountItem CacheCountItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCaches {
            get {
                return this.TotalCachesField;
            }
            set {
                if ((this.TotalCachesField.Equals(value) != true)) {
                    this.TotalCachesField = value;
                    this.RaisePropertyChanged("TotalCaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.CacheCountItem CacheCountItem {
            get {
                return this.CacheCountItemField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCountItemField, value) != true)) {
                    this.CacheCountItemField = value;
                    this.RaisePropertyChanged("CacheCountItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheCountItem", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CacheCountItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ImperialDistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ImperialValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MetricDistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MetricValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImperialDistance {
            get {
                return this.ImperialDistanceField;
            }
            set {
                if ((this.ImperialDistanceField.Equals(value) != true)) {
                    this.ImperialDistanceField = value;
                    this.RaisePropertyChanged("ImperialDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ImperialValue {
            get {
                return this.ImperialValueField;
            }
            set {
                if ((this.ImperialValueField.Equals(value) != true)) {
                    this.ImperialValueField = value;
                    this.RaisePropertyChanged("ImperialValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MetricDistance {
            get {
                return this.MetricDistanceField;
            }
            set {
                if ((this.MetricDistanceField.Equals(value) != true)) {
                    this.MetricDistanceField = value;
                    this.RaisePropertyChanged("MetricDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MetricValue {
            get {
                return this.MetricValueField;
            }
            set {
                if ((this.MetricValueField.Equals(value) != true)) {
                    this.MetricValueField = value;
                    this.RaisePropertyChanged("MetricValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetUserAvatarImageRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SetUserAvatarImageRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.UploadImageData ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessTokenRequestBase", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Requests")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLinkAccountsRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaRevokeAccessRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaUpdateStatusRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.UserChangePasswordRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetReferAFriendShortUrlRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountReferralStatisticsRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.ReferAFriendEmailRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SendValidationEmailRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetEmailPreferencesForAccountRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.UpdateEmailPreferencesForAccountRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SetHomeCoordinatesRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SetLocaleRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AuthorizeAccountRequest))]
    public partial class AccessTokenRequestBase1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundspeakAccessTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundspeakAccessToken {
            get {
                return this.GroundspeakAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundspeakAccessTokenField, value) != true)) {
                    this.GroundspeakAccessTokenField = value;
                    this.RaisePropertyChanged("GroundspeakAccessToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaLinkAccountsRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SocialMediaLinkAccountsRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialMediaAccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialMediaTokenSecretField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderType {
            get {
                return this.ProviderTypeField;
            }
            set {
                if ((this.ProviderTypeField.Equals(value) != true)) {
                    this.ProviderTypeField = value;
                    this.RaisePropertyChanged("ProviderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialMediaAccessToken {
            get {
                return this.SocialMediaAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialMediaAccessTokenField, value) != true)) {
                    this.SocialMediaAccessTokenField = value;
                    this.RaisePropertyChanged("SocialMediaAccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialMediaTokenSecret {
            get {
                return this.SocialMediaTokenSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialMediaTokenSecretField, value) != true)) {
                    this.SocialMediaTokenSecretField = value;
                    this.RaisePropertyChanged("SocialMediaTokenSecret");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaRevokeAccessRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SocialMediaRevokeAccessRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialMediaAccessTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderType {
            get {
                return this.ProviderTypeField;
            }
            set {
                if ((this.ProviderTypeField.Equals(value) != true)) {
                    this.ProviderTypeField = value;
                    this.RaisePropertyChanged("ProviderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialMediaAccessToken {
            get {
                return this.SocialMediaAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialMediaAccessTokenField, value) != true)) {
                    this.SocialMediaAccessTokenField = value;
                    this.RaisePropertyChanged("SocialMediaAccessToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaUpdateStatusRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SocialMediaUpdateStatusRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncludedUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusUpdateMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncludedUrl {
            get {
                return this.IncludedUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedUrlField, value) != true)) {
                    this.IncludedUrlField = value;
                    this.RaisePropertyChanged("IncludedUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderType {
            get {
                return this.ProviderTypeField;
            }
            set {
                if ((this.ProviderTypeField.Equals(value) != true)) {
                    this.ProviderTypeField = value;
                    this.RaisePropertyChanged("ProviderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusUpdateMessage {
            get {
                return this.StatusUpdateMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusUpdateMessageField, value) != true)) {
                    this.StatusUpdateMessageField = value;
                    this.RaisePropertyChanged("StatusUpdateMessage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaVerifyAccountLinkedRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SocialMediaVerifyAccountLinkedRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderType {
            get {
                return this.ProviderTypeField;
            }
            set {
                if ((this.ProviderTypeField.Equals(value) != true)) {
                    this.ProviderTypeField = value;
                    this.RaisePropertyChanged("ProviderType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaVerifyAllLinkedAccountsRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SocialMediaVerifyAllLinkedAccountsRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserChangePasswordRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class UserChangePasswordRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReferAFriendShortUrlRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class GetReferAFriendShortUrlRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountReferralStatisticsRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class GetAccountReferralStatisticsRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferAFriendEmailRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class ReferAFriendEmailRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RecipientsEmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RecipientsEmail {
            get {
                return this.RecipientsEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientsEmailField, value) != true)) {
                    this.RecipientsEmailField = value;
                    this.RaisePropertyChanged("RecipientsEmail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendValidationEmailRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SendValidationEmailRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountsRequest", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class GetAccountsRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AccountIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] PublicGuidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UsernamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AccountIds {
            get {
                return this.AccountIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdsField, value) != true)) {
                    this.AccountIdsField = value;
                    this.RaisePropertyChanged("AccountIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] PublicGuids {
            get {
                return this.PublicGuidsField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicGuidsField, value) != true)) {
                    this.PublicGuidsField = value;
                    this.RaisePropertyChanged("PublicGuids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Usernames {
            get {
                return this.UsernamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernamesField, value) != true)) {
                    this.UsernamesField = value;
                    this.RaisePropertyChanged("Usernames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmailPreferencesForAccountRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class GetEmailPreferencesForAccountRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EmailPreferencesAccountIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EmailPreferencesAccountId {
            get {
                return this.EmailPreferencesAccountIdField;
            }
            set {
                if ((this.EmailPreferencesAccountIdField.Equals(value) != true)) {
                    this.EmailPreferencesAccountIdField = value;
                    this.RaisePropertyChanged("EmailPreferencesAccountId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateEmailPreferencesForAccountRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class UpdateEmailPreferencesForAccountRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] EmailPreferenceIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EmailPreferencesAccountIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] EmailPreferenceIds {
            get {
                return this.EmailPreferenceIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailPreferenceIdsField, value) != true)) {
                    this.EmailPreferenceIdsField = value;
                    this.RaisePropertyChanged("EmailPreferenceIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EmailPreferencesAccountId {
            get {
                return this.EmailPreferencesAccountIdField;
            }
            set {
                if ((this.EmailPreferencesAccountIdField.Equals(value) != true)) {
                    this.EmailPreferencesAccountIdField = value;
                    this.RaisePropertyChanged("EmailPreferencesAccountId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetHomeCoordinatesRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SetHomeCoordinatesRequestPublic : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HomeCoordinateLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HomeCoordinateLongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> HomeCoordinateLatitude {
            get {
                return this.HomeCoordinateLatitudeField;
            }
            set {
                if ((this.HomeCoordinateLatitudeField.Equals(value) != true)) {
                    this.HomeCoordinateLatitudeField = value;
                    this.RaisePropertyChanged("HomeCoordinateLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> HomeCoordinateLongitude {
            get {
                return this.HomeCoordinateLongitudeField;
            }
            set {
                if ((this.HomeCoordinateLongitudeField.Equals(value) != true)) {
                    this.HomeCoordinateLongitudeField = value;
                    this.RaisePropertyChanged("HomeCoordinateLongitude");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountRequest", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Requests")]
    [System.SerializableAttribute()]
    public partial class GetAccountRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeDemographicsDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeGamingAccountInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeMembershipInfoDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeSecurityDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeSettingsDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeSocialMediaInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncludeWebOnlyInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeDemographicsData {
            get {
                return this.IncludeDemographicsDataField;
            }
            set {
                if ((this.IncludeDemographicsDataField.Equals(value) != true)) {
                    this.IncludeDemographicsDataField = value;
                    this.RaisePropertyChanged("IncludeDemographicsData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeGamingAccountInfo {
            get {
                return this.IncludeGamingAccountInfoField;
            }
            set {
                if ((this.IncludeGamingAccountInfoField.Equals(value) != true)) {
                    this.IncludeGamingAccountInfoField = value;
                    this.RaisePropertyChanged("IncludeGamingAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeMembershipInfoData {
            get {
                return this.IncludeMembershipInfoDataField;
            }
            set {
                if ((this.IncludeMembershipInfoDataField.Equals(value) != true)) {
                    this.IncludeMembershipInfoDataField = value;
                    this.RaisePropertyChanged("IncludeMembershipInfoData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeSecurityData {
            get {
                return this.IncludeSecurityDataField;
            }
            set {
                if ((this.IncludeSecurityDataField.Equals(value) != true)) {
                    this.IncludeSecurityDataField = value;
                    this.RaisePropertyChanged("IncludeSecurityData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeSettingsData {
            get {
                return this.IncludeSettingsDataField;
            }
            set {
                if ((this.IncludeSettingsDataField.Equals(value) != true)) {
                    this.IncludeSettingsDataField = value;
                    this.RaisePropertyChanged("IncludeSettingsData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeSocialMediaInfo {
            get {
                return this.IncludeSocialMediaInfoField;
            }
            set {
                if ((this.IncludeSocialMediaInfoField.Equals(value) != true)) {
                    this.IncludeSocialMediaInfoField = value;
                    this.RaisePropertyChanged("IncludeSocialMediaInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeWebOnlyInfo {
            get {
                return this.IncludeWebOnlyInfoField;
            }
            set {
                if ((this.IncludeWebOnlyInfoField.Equals(value) != true)) {
                    this.IncludeWebOnlyInfoField = value;
                    this.RaisePropertyChanged("IncludeWebOnlyInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetLocaleRequest", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Requests")]
    [System.SerializableAttribute()]
    public partial class SetLocaleRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizeAccountRequest", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Requests")]
    [System.SerializableAttribute()]
    public partial class AuthorizeAccountRequest : WinCachebox.ServiceReference1.AccessTokenRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusOnlyResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AuthorizeLicenseResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetHealthResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AccessTokenResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.UsernameValidAndAvailableResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.UserNameResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimblePhoneStatusResponsePublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimbleLoginResponsePublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.IsEmailAddressInUseResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AccountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CreateAccountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CreateAccountPublicResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLinkAccountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaRevokeAccessResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaUpdateStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.PasswordResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.LoginResponsePublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetReferAFriendShortUrlResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountReferralStatisticsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SetLocaleResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.EmailPreferencesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SetAccountToValidatedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AuthorizeAccountResponse))]
    public partial class StatusOnlyResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Status StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Status[] WarningsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ExceptionDetails {
            get {
                return this.ExceptionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionDetailsField, value) != true)) {
                    this.ExceptionDetailsField = value;
                    this.RaisePropertyChanged("ExceptionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public WinCachebox.ServiceReference1.Status[] Warnings {
            get {
                return this.WarningsField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningsField, value) != true)) {
                    this.WarningsField = value;
                    this.RaisePropertyChanged("Warnings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizeLicenseResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Responses")]
    [System.SerializableAttribute()]
    public partial class AuthorizeLicenseResponse : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseGuidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseGuid {
            get {
                return this.LicenseGuidField;
            }
            set {
                if ((this.LicenseGuidField.Equals(value) != true)) {
                    this.LicenseGuidField = value;
                    this.RaisePropertyChanged("LicenseGuid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetHealthResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Responses")]
    [System.SerializableAttribute()]
    public partial class GetHealthResponse : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanConnectToMailerServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanConnectToMembershipServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanConnectToMemcacheServersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanConnectToPrimaryDatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ConnectionStringsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsServiceFullyOperationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailerServiceUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MemcacheBucketsToInvalidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MemcacheServerUrlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryMemcacheBucketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootImageUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanConnectToMailerService {
            get {
                return this.CanConnectToMailerServiceField;
            }
            set {
                if ((this.CanConnectToMailerServiceField.Equals(value) != true)) {
                    this.CanConnectToMailerServiceField = value;
                    this.RaisePropertyChanged("CanConnectToMailerService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanConnectToMembershipService {
            get {
                return this.CanConnectToMembershipServiceField;
            }
            set {
                if ((this.CanConnectToMembershipServiceField.Equals(value) != true)) {
                    this.CanConnectToMembershipServiceField = value;
                    this.RaisePropertyChanged("CanConnectToMembershipService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanConnectToMemcacheServers {
            get {
                return this.CanConnectToMemcacheServersField;
            }
            set {
                if ((this.CanConnectToMemcacheServersField.Equals(value) != true)) {
                    this.CanConnectToMemcacheServersField = value;
                    this.RaisePropertyChanged("CanConnectToMemcacheServers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanConnectToPrimaryDatabase {
            get {
                return this.CanConnectToPrimaryDatabaseField;
            }
            set {
                if ((this.CanConnectToPrimaryDatabaseField.Equals(value) != true)) {
                    this.CanConnectToPrimaryDatabaseField = value;
                    this.RaisePropertyChanged("CanConnectToPrimaryDatabase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ConnectionStrings {
            get {
                return this.ConnectionStringsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStringsField, value) != true)) {
                    this.ConnectionStringsField = value;
                    this.RaisePropertyChanged("ConnectionStrings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsServiceFullyOperational {
            get {
                return this.IsServiceFullyOperationalField;
            }
            set {
                if ((this.IsServiceFullyOperationalField.Equals(value) != true)) {
                    this.IsServiceFullyOperationalField = value;
                    this.RaisePropertyChanged("IsServiceFullyOperational");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailerServiceUrl {
            get {
                return this.MailerServiceUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.MailerServiceUrlField, value) != true)) {
                    this.MailerServiceUrlField = value;
                    this.RaisePropertyChanged("MailerServiceUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MemcacheBucketsToInvalidate {
            get {
                return this.MemcacheBucketsToInvalidateField;
            }
            set {
                if ((object.ReferenceEquals(this.MemcacheBucketsToInvalidateField, value) != true)) {
                    this.MemcacheBucketsToInvalidateField = value;
                    this.RaisePropertyChanged("MemcacheBucketsToInvalidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MemcacheServerUrls {
            get {
                return this.MemcacheServerUrlsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemcacheServerUrlsField, value) != true)) {
                    this.MemcacheServerUrlsField = value;
                    this.RaisePropertyChanged("MemcacheServerUrls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryMemcacheBucket {
            get {
                return this.PrimaryMemcacheBucketField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryMemcacheBucketField, value) != true)) {
                    this.PrimaryMemcacheBucketField = value;
                    this.RaisePropertyChanged("PrimaryMemcacheBucket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RootImageUrl {
            get {
                return this.RootImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.RootImageUrlField, value) != true)) {
                    this.RootImageUrlField = value;
                    this.RaisePropertyChanged("RootImageUrl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessTokenResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class AccessTokenResponse : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundspeakAccessTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundspeakAccessToken {
            get {
                return this.GroundspeakAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundspeakAccessTokenField, value) != true)) {
                    this.GroundspeakAccessTokenField = value;
                    this.RaisePropertyChanged("GroundspeakAccessToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsernameValidAndAvailableResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class UsernameValidAndAvailableResponse : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsUsernameValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsUsernameAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Status WarningField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsUsernameValid {
            get {
                return this.IsUsernameValidField;
            }
            set {
                if ((this.IsUsernameValidField.Equals(value) != true)) {
                    this.IsUsernameValidField = value;
                    this.RaisePropertyChanged("IsUsernameValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<bool> IsUsernameAvailable {
            get {
                return this.IsUsernameAvailableField;
            }
            set {
                if ((this.IsUsernameAvailableField.Equals(value) != true)) {
                    this.IsUsernameAvailableField = value;
                    this.RaisePropertyChanged("IsUsernameAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.Status Warning {
            get {
                return this.WarningField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningField, value) != true)) {
                    this.WarningField = value;
                    this.RaisePropertyChanged("Warning");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserNameResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class UserNameResponse : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrimblePhoneStatusResponsePublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class TrimblePhoneStatusResponsePublic : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.TrimblePhoneStatus PhoneStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.TrimblePhoneStatus PhoneStatus {
            get {
                return this.PhoneStatusField;
            }
            set {
                if ((this.PhoneStatusField.Equals(value) != true)) {
                    this.PhoneStatusField = value;
                    this.RaisePropertyChanged("PhoneStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrimbleLoginResponsePublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class TrimbleLoginResponsePublic : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundspeakAccessTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundspeakAccessToken {
            get {
                return this.GroundspeakAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundspeakAccessTokenField, value) != true)) {
                    this.GroundspeakAccessTokenField = value;
                    this.RaisePropertyChanged("GroundspeakAccessToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsEmailAddressInUseResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class IsEmailAddressInUseResponse : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInUseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInUse {
            get {
                return this.IsInUseField;
            }
            set {
                if ((this.IsInUseField.Equals(value) != true)) {
                    this.IsInUseField = value;
                    this.RaisePropertyChanged("IsInUse");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CreateAccountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CreateAccountPublicResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLinkAccountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaRevokeAccessResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaUpdateStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.PasswordResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.LoginResponsePublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetReferAFriendShortUrlResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountReferralStatisticsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccountsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SetLocaleResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.EmailPreferencesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SetAccountToValidatedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AuthorizeAccountResponse))]
    public partial class AccountResponse : WinCachebox.ServiceReference1.StatusOnlyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundspeakAccessTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundspeakAccessToken {
            get {
                return this.GroundspeakAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundspeakAccessTokenField, value) != true)) {
                    this.GroundspeakAccessTokenField = value;
                    this.RaisePropertyChanged("GroundspeakAccessToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateAccountResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CreateAccountPublicResponse))]
    public partial class CreateAccountResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccountCreationSuccessfulField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccountCreationSuccessful {
            get {
                return this.IsAccountCreationSuccessfulField;
            }
            set {
                if ((this.IsAccountCreationSuccessfulField.Equals(value) != true)) {
                    this.IsAccountCreationSuccessfulField = value;
                    this.RaisePropertyChanged("IsAccountCreationSuccessful");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateAccountPublicResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class CreateAccountPublicResponse : WinCachebox.ServiceReference1.CreateAccountResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaLinkAccountsResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SocialMediaLinkAccountsResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SocialMediaEmailMatchesExistingEmailForLinkingAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LinkedAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkedAccountUserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SocialMediaEmailMatchesExistingEmailForLinkingAccount {
            get {
                return this.SocialMediaEmailMatchesExistingEmailForLinkingAccountField;
            }
            set {
                if ((this.SocialMediaEmailMatchesExistingEmailForLinkingAccountField.Equals(value) != true)) {
                    this.SocialMediaEmailMatchesExistingEmailForLinkingAccountField = value;
                    this.RaisePropertyChanged("SocialMediaEmailMatchesExistingEmailForLinkingAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> LinkedAccountId {
            get {
                return this.LinkedAccountIdField;
            }
            set {
                if ((this.LinkedAccountIdField.Equals(value) != true)) {
                    this.LinkedAccountIdField = value;
                    this.RaisePropertyChanged("LinkedAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string LinkedAccountUserName {
            get {
                return this.LinkedAccountUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedAccountUserNameField, value) != true)) {
                    this.LinkedAccountUserNameField = value;
                    this.RaisePropertyChanged("LinkedAccountUserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaRevokeAccessResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SocialMediaRevokeAccessResponse : WinCachebox.ServiceReference1.AccountResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaUpdateStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SocialMediaUpdateStatusResponse : WinCachebox.ServiceReference1.AccountResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaVerifyAccountLinkedResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SocialMediaVerifyAccountLinkedResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SocialMediaAccountExistsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SocialMediaAccountExists {
            get {
                return this.SocialMediaAccountExistsField;
            }
            set {
                if ((this.SocialMediaAccountExistsField.Equals(value) != true)) {
                    this.SocialMediaAccountExistsField = value;
                    this.RaisePropertyChanged("SocialMediaAccountExists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaVerifyAllLinkedAccountsResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SocialMediaVerifyAllLinkedAccountsResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FacebookAccountIsLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TwitterAccountIsLinkedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FacebookAccountIsLinked {
            get {
                return this.FacebookAccountIsLinkedField;
            }
            set {
                if ((this.FacebookAccountIsLinkedField.Equals(value) != true)) {
                    this.FacebookAccountIsLinkedField = value;
                    this.RaisePropertyChanged("FacebookAccountIsLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TwitterAccountIsLinked {
            get {
                return this.TwitterAccountIsLinkedField;
            }
            set {
                if ((this.TwitterAccountIsLinkedField.Equals(value) != true)) {
                    this.TwitterAccountIsLinkedField = value;
                    this.RaisePropertyChanged("TwitterAccountIsLinked");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class PasswordResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPasswordValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPasswordValid {
            get {
                return this.IsPasswordValidField;
            }
            set {
                if ((this.IsPasswordValidField.Equals(value) != true)) {
                    this.IsPasswordValidField = value;
                    this.RaisePropertyChanged("IsPasswordValid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResponsePublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic))]
    public partial class LoginResponsePublic : WinCachebox.ServiceReference1.AccountResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaLoginResponseBase", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic))]
    public partial class SocialMediaLoginResponseBase : WinCachebox.ServiceReference1.LoginResponsePublic {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaLoginResponsePublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SocialMediaLoginResponsePublic : WinCachebox.ServiceReference1.SocialMediaLoginResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class GetAccountResponse : WinCachebox.ServiceReference1.AccountResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReferAFriendShortUrlResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class GetReferAFriendShortUrlResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortUrl {
            get {
                return this.ShortUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortUrlField, value) != true)) {
                    this.ShortUrlField = value;
                    this.RaisePropertyChanged("ShortUrl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountReferralStatisticsResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class GetAccountReferralStatisticsResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.AccountReferralStatistics ReferralStatisticsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.AccountReferralStatistics ReferralStatistics {
            get {
                return this.ReferralStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferralStatisticsField, value) != true)) {
                    this.ReferralStatisticsField = value;
                    this.RaisePropertyChanged("ReferralStatistics");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccountsResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class GetAccountsResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Account[] AccountsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Account[] Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetLocaleResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SetLocaleResponse : WinCachebox.ServiceReference1.AccountResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailPreferencesResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class EmailPreferencesResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.EmailPreference[] EmailPreferencesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.EmailPreference[] EmailPreferences {
            get {
                return this.EmailPreferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailPreferencesField, value) != true)) {
                    this.EmailPreferencesField = value;
                    this.RaisePropertyChanged("EmailPreferences");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetAccountToValidatedResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class SetAccountToValidatedResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountValidatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountValidated {
            get {
                return this.AccountValidatedField;
            }
            set {
                if ((this.AccountValidatedField.Equals(value) != true)) {
                    this.AccountValidatedField = value;
                    this.RaisePropertyChanged("AccountValidated");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizeAccountResponse", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    [System.SerializableAttribute()]
    public partial class AuthorizeAccountResponse : WinCachebox.ServiceReference1.AccountResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseGuidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseGuid {
            get {
                return this.LicenseGuidField;
            }
            set {
                if ((this.LicenseGuidField.Equals(value) != true)) {
                    this.LicenseGuidField = value;
                    this.RaisePropertyChanged("LicenseGuid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PublicGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChallengesCompletedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeocacheHideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeocacheFindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Coordinate1 HomeCoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Security SecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Demographic[] DemographicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Settings SettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MembershipInfo MembershipInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.WebOnlyInfo WebOnlyInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.SocialMediaInfo SocialMediaInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GamingAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.AvatarImage AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Guid PublicGuid {
            get {
                return this.PublicGuidField;
            }
            set {
                if ((this.PublicGuidField.Equals(value) != true)) {
                    this.PublicGuidField = value;
                    this.RaisePropertyChanged("PublicGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ChallengesCompletedCount {
            get {
                return this.ChallengesCompletedCountField;
            }
            set {
                if ((this.ChallengesCompletedCountField.Equals(value) != true)) {
                    this.ChallengesCompletedCountField = value;
                    this.RaisePropertyChanged("ChallengesCompletedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int GeocacheHideCount {
            get {
                return this.GeocacheHideCountField;
            }
            set {
                if ((this.GeocacheHideCountField.Equals(value) != true)) {
                    this.GeocacheHideCountField = value;
                    this.RaisePropertyChanged("GeocacheHideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int GeocacheFindCount {
            get {
                return this.GeocacheFindCountField;
            }
            set {
                if ((this.GeocacheFindCountField.Equals(value) != true)) {
                    this.GeocacheFindCountField = value;
                    this.RaisePropertyChanged("GeocacheFindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public WinCachebox.ServiceReference1.Coordinate1 HomeCoordinate {
            get {
                return this.HomeCoordinateField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeCoordinateField, value) != true)) {
                    this.HomeCoordinateField = value;
                    this.RaisePropertyChanged("HomeCoordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public WinCachebox.ServiceReference1.Security Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public WinCachebox.ServiceReference1.Demographic[] Demographics {
            get {
                return this.DemographicsField;
            }
            set {
                if ((object.ReferenceEquals(this.DemographicsField, value) != true)) {
                    this.DemographicsField = value;
                    this.RaisePropertyChanged("Demographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public WinCachebox.ServiceReference1.Settings Settings {
            get {
                return this.SettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingsField, value) != true)) {
                    this.SettingsField = value;
                    this.RaisePropertyChanged("Settings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public WinCachebox.ServiceReference1.MembershipInfo MembershipInfo {
            get {
                return this.MembershipInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MembershipInfoField, value) != true)) {
                    this.MembershipInfoField = value;
                    this.RaisePropertyChanged("MembershipInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public WinCachebox.ServiceReference1.WebOnlyInfo WebOnlyInfo {
            get {
                return this.WebOnlyInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.WebOnlyInfoField, value) != true)) {
                    this.WebOnlyInfoField = value;
                    this.RaisePropertyChanged("WebOnlyInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public WinCachebox.ServiceReference1.SocialMediaInfo SocialMediaInfo {
            get {
                return this.SocialMediaInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialMediaInfoField, value) != true)) {
                    this.SocialMediaInfoField = value;
                    this.RaisePropertyChanged("SocialMediaInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public System.Nullable<long> GamingAccountID {
            get {
                return this.GamingAccountIDField;
            }
            set {
                if ((this.GamingAccountIDField.Equals(value) != true)) {
                    this.GamingAccountIDField = value;
                    this.RaisePropertyChanged("GamingAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public WinCachebox.ServiceReference1.AvatarImage Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrimblePhoneStatus", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Models")]
    public enum TrimblePhoneStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotExist = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistsValid = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistsValidLinked = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coordinate", Namespace="http://www.geocaching.com/Coordinate/data")]
    [System.SerializableAttribute()]
    public partial class Coordinate1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Latitude LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Longitude LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.Altitude AltitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Latitude Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.Longitude Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WinCachebox.ServiceReference1.Altitude Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.AltitudeField, value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Security", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class Security : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAdminRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasApprovalRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MembershipLevel1 MembershipLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool IsBanned {
            get {
                return this.IsBannedField;
            }
            set {
                if ((this.IsBannedField.Equals(value) != true)) {
                    this.IsBannedField = value;
                    this.RaisePropertyChanged("IsBanned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> AccountFlags {
            get {
                return this.AccountFlagsField;
            }
            set {
                if ((this.AccountFlagsField.Equals(value) != true)) {
                    this.AccountFlagsField = value;
                    this.RaisePropertyChanged("AccountFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsValidated {
            get {
                return this.IsValidatedField;
            }
            set {
                if ((this.IsValidatedField.Equals(value) != true)) {
                    this.IsValidatedField = value;
                    this.RaisePropertyChanged("IsValidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool HasAdminRights {
            get {
                return this.HasAdminRightsField;
            }
            set {
                if ((this.HasAdminRightsField.Equals(value) != true)) {
                    this.HasAdminRightsField = value;
                    this.RaisePropertyChanged("HasAdminRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool HasApprovalRights {
            get {
                return this.HasApprovalRightsField;
            }
            set {
                if ((this.HasApprovalRightsField.Equals(value) != true)) {
                    this.HasApprovalRightsField = value;
                    this.RaisePropertyChanged("HasApprovalRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string SecurityGroupName {
            get {
                return this.SecurityGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupNameField, value) != true)) {
                    this.SecurityGroupNameField = value;
                    this.RaisePropertyChanged("SecurityGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public WinCachebox.ServiceReference1.MembershipLevel1 MembershipLevel {
            get {
                return this.MembershipLevelField;
            }
            set {
                if ((this.MembershipLevelField.Equals(value) != true)) {
                    this.MembershipLevelField = value;
                    this.RaisePropertyChanged("MembershipLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Settings", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class Settings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DISPLAY_EMAILField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DISPLAY_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DATE_FORMATField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitSetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowWeeklyEmailerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowThirdPartyEmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowIMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowDownloadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowHtmlEmailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DISPLAY_EMAIL {
            get {
                return this.DISPLAY_EMAILField;
            }
            set {
                if ((object.ReferenceEquals(this.DISPLAY_EMAILField, value) != true)) {
                    this.DISPLAY_EMAILField = value;
                    this.RaisePropertyChanged("DISPLAY_EMAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DISPLAY_NAME {
            get {
                return this.DISPLAY_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.DISPLAY_NAMEField, value) != true)) {
                    this.DISPLAY_NAMEField = value;
                    this.RaisePropertyChanged("DISPLAY_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string DATE_FORMAT {
            get {
                return this.DATE_FORMATField;
            }
            set {
                if ((object.ReferenceEquals(this.DATE_FORMATField, value) != true)) {
                    this.DATE_FORMATField = value;
                    this.RaisePropertyChanged("DATE_FORMAT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int UnitSetID {
            get {
                return this.UnitSetIDField;
            }
            set {
                if ((this.UnitSetIDField.Equals(value) != true)) {
                    this.UnitSetIDField = value;
                    this.RaisePropertyChanged("UnitSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool ShowEmail {
            get {
                return this.ShowEmailField;
            }
            set {
                if ((this.ShowEmailField.Equals(value) != true)) {
                    this.ShowEmailField = value;
                    this.RaisePropertyChanged("ShowEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool AllowWeeklyEmailer {
            get {
                return this.AllowWeeklyEmailerField;
            }
            set {
                if ((this.AllowWeeklyEmailerField.Equals(value) != true)) {
                    this.AllowWeeklyEmailerField = value;
                    this.RaisePropertyChanged("AllowWeeklyEmailer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool AllowThirdPartyEmails {
            get {
                return this.AllowThirdPartyEmailsField;
            }
            set {
                if ((this.AllowThirdPartyEmailsField.Equals(value) != true)) {
                    this.AllowThirdPartyEmailsField = value;
                    this.RaisePropertyChanged("AllowThirdPartyEmails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool ShowIM {
            get {
                return this.ShowIMField;
            }
            set {
                if ((this.ShowIMField.Equals(value) != true)) {
                    this.ShowIMField = value;
                    this.RaisePropertyChanged("ShowIM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool AllowDownloads {
            get {
                return this.AllowDownloadsField;
            }
            set {
                if ((this.AllowDownloadsField.Equals(value) != true)) {
                    this.AllowDownloadsField = value;
                    this.RaisePropertyChanged("AllowDownloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public bool AllowHtmlEmails {
            get {
                return this.AllowHtmlEmailsField;
            }
            set {
                if ((this.AllowHtmlEmailsField.Equals(value) != true)) {
                    this.AllowHtmlEmailsField = value;
                    this.RaisePropertyChanged("AllowHtmlEmails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipInfo", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class MembershipInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinCachebox.ServiceReference1.MembershipType1 MembershipTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinCachebox.ServiceReference1.MembershipType1 MembershipType {
            get {
                return this.MembershipTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MembershipTypeField, value) != true)) {
                    this.MembershipTypeField = value;
                    this.RaisePropertyChanged("MembershipType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebOnlyInfo", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class WebOnlyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostViewOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlatViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SECURITY_TOKENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ROLE_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALIDATE_PASSWORDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CACHE_DISTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TRACK_DISTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UTCOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool PostViewOrder {
            get {
                return this.PostViewOrderField;
            }
            set {
                if ((this.PostViewOrderField.Equals(value) != true)) {
                    this.PostViewOrderField = value;
                    this.RaisePropertyChanged("PostViewOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool FlatView {
            get {
                return this.FlatViewField;
            }
            set {
                if ((this.FlatViewField.Equals(value) != true)) {
                    this.FlatViewField = value;
                    this.RaisePropertyChanged("FlatView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string SECURITY_TOKEN {
            get {
                return this.SECURITY_TOKENField;
            }
            set {
                if ((object.ReferenceEquals(this.SECURITY_TOKENField, value) != true)) {
                    this.SECURITY_TOKENField = value;
                    this.RaisePropertyChanged("SECURITY_TOKEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int ROLE_ID {
            get {
                return this.ROLE_IDField;
            }
            set {
                if ((this.ROLE_IDField.Equals(value) != true)) {
                    this.ROLE_IDField = value;
                    this.RaisePropertyChanged("ROLE_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string VALIDATE_PASSWORD {
            get {
                return this.VALIDATE_PASSWORDField;
            }
            set {
                if ((object.ReferenceEquals(this.VALIDATE_PASSWORDField, value) != true)) {
                    this.VALIDATE_PASSWORDField = value;
                    this.RaisePropertyChanged("VALIDATE_PASSWORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<double> CACHE_DIST {
            get {
                return this.CACHE_DISTField;
            }
            set {
                if ((this.CACHE_DISTField.Equals(value) != true)) {
                    this.CACHE_DISTField = value;
                    this.RaisePropertyChanged("CACHE_DIST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<double> TRACK_DIST {
            get {
                return this.TRACK_DISTField;
            }
            set {
                if ((this.TRACK_DISTField.Equals(value) != true)) {
                    this.TRACK_DISTField = value;
                    this.RaisePropertyChanged("TRACK_DIST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int UTCOffset {
            get {
                return this.UTCOffsetField;
            }
            set {
                if ((this.UTCOffsetField.Equals(value) != true)) {
                    this.UTCOffsetField = value;
                    this.RaisePropertyChanged("UTCOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool IsDST {
            get {
                return this.IsDSTField;
            }
            set {
                if ((this.IsDSTField.Equals(value) != true)) {
                    this.IsDSTField = value;
                    this.RaisePropertyChanged("IsDST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<int> IMTypeID {
            get {
                return this.IMTypeIDField;
            }
            set {
                if ((this.IMTypeIDField.Equals(value) != true)) {
                    this.IMTypeIDField = value;
                    this.RaisePropertyChanged("IMTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string IMContact {
            get {
                return this.IMContactField;
            }
            set {
                if ((object.ReferenceEquals(this.IMContactField, value) != true)) {
                    this.IMContactField = value;
                    this.RaisePropertyChanged("IMContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int AppID {
            get {
                return this.AppIDField;
            }
            set {
                if ((this.AppIDField.Equals(value) != true)) {
                    this.AppIDField = value;
                    this.RaisePropertyChanged("AppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public int TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((this.TimeZoneField.Equals(value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaInfo", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class SocialMediaInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvatarImage", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class AvatarImage : WinCachebox.ServiceReference1.Image {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvatarUrl {
            get {
                return this.AvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarUrlField, value) != true)) {
                    this.AvatarUrlField = value;
                    this.RaisePropertyChanged("AvatarUrl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Demographic", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class Demographic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateAbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UTCOffsetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string StateAbbreviation {
            get {
                return this.StateAbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.StateAbbreviationField, value) != true)) {
                    this.StateAbbreviationField = value;
                    this.RaisePropertyChanged("StateAbbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string CountryNameEN {
            get {
                return this.CountryNameENField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameENField, value) != true)) {
                    this.CountryNameENField = value;
                    this.RaisePropertyChanged("CountryNameEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string BusinessPhone {
            get {
                return this.BusinessPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessPhoneField, value) != true)) {
                    this.BusinessPhoneField = value;
                    this.RaisePropertyChanged("BusinessPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public bool IsDst {
            get {
                return this.IsDstField;
            }
            set {
                if ((this.IsDstField.Equals(value) != true)) {
                    this.IsDstField = value;
                    this.RaisePropertyChanged("IsDst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.Nullable<int> StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationField, value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public string HomePage {
            get {
                return this.HomePageField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePageField, value) != true)) {
                    this.HomePageField = value;
                    this.RaisePropertyChanged("HomePage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public System.Nullable<int> IMTypeId {
            get {
                return this.IMTypeIdField;
            }
            set {
                if ((this.IMTypeIdField.Equals(value) != true)) {
                    this.IMTypeIdField = value;
                    this.RaisePropertyChanged("IMTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public string IMContact {
            get {
                return this.IMContactField;
            }
            set {
                if ((object.ReferenceEquals(this.IMContactField, value) != true)) {
                    this.IMContactField = value;
                    this.RaisePropertyChanged("IMContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public int UTCOffset {
            get {
                return this.UTCOffsetField;
            }
            set {
                if ((this.UTCOffsetField.Equals(value) != true)) {
                    this.UTCOffsetField = value;
                    this.RaisePropertyChanged("UTCOffset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Latitude", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.Geospatial")]
    [System.SerializableAttribute()]
    public partial class Latitude : WinCachebox.ServiceReference1.Angle {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Longitude", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.Geospatial")]
    [System.SerializableAttribute()]
    public partial class Longitude : WinCachebox.ServiceReference1.Angle {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Altitude", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.Geospatial")]
    [System.SerializableAttribute()]
    public partial class Altitude : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double _altitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double _altitude {
            get {
                return this._altitudeField;
            }
            set {
                if ((this._altitudeField.Equals(value) != true)) {
                    this._altitudeField = value;
                    this.RaisePropertyChanged("_altitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Angle", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.Geospatial")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.Longitude))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.Latitude))]
    public partial class Angle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double radiansField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double radians {
            get {
                return this.radiansField;
            }
            set {
                if ((this.radiansField.Equals(value) != true)) {
                    this.radiansField = value;
                    this.RaisePropertyChanged("radians");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipLevel", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User")]
    public enum MembershipLevel1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Anonymous = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Charter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Premium = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipType", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class MembershipType1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MemberTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberTypeId {
            get {
                return this.MemberTypeIdField;
            }
            set {
                if ((this.MemberTypeIdField.Equals(value) != true)) {
                    this.MemberTypeIdField = value;
                    this.RaisePropertyChanged("MemberTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberTypeName {
            get {
                return this.MemberTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberTypeNameField, value) != true)) {
                    this.MemberTypeNameField = value;
                    this.RaisePropertyChanged("MemberTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.AvatarImage))]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUploadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUploaded {
            get {
                return this.DateUploadedField;
            }
            set {
                if ((this.DateUploadedField.Equals(value) != true)) {
                    this.DateUploadedField = value;
                    this.RaisePropertyChanged("DateUploaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayUrl {
            get {
                return this.DisplayUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayUrlField, value) != true)) {
                    this.DisplayUrlField = value;
                    this.RaisePropertyChanged("DisplayUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalUrl {
            get {
                return this.OriginalUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalUrlField, value) != true)) {
                    this.OriginalUrlField = value;
                    this.RaisePropertyChanged("OriginalUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbUrl {
            get {
                return this.ThumbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbUrlField, value) != true)) {
                    this.ThumbUrlField = value;
                    this.RaisePropertyChanged("ThumbUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountReferralStatistics", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class AccountReferralStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalActiveReferredUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalGeocachesFoundByReferredUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalGeocachesHiddenByReferredUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalReferredUsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalActiveReferredUsers {
            get {
                return this.TotalActiveReferredUsersField;
            }
            set {
                if ((this.TotalActiveReferredUsersField.Equals(value) != true)) {
                    this.TotalActiveReferredUsersField = value;
                    this.RaisePropertyChanged("TotalActiveReferredUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalGeocachesFoundByReferredUsers {
            get {
                return this.TotalGeocachesFoundByReferredUsersField;
            }
            set {
                if ((this.TotalGeocachesFoundByReferredUsersField.Equals(value) != true)) {
                    this.TotalGeocachesFoundByReferredUsersField = value;
                    this.RaisePropertyChanged("TotalGeocachesFoundByReferredUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalGeocachesHiddenByReferredUsers {
            get {
                return this.TotalGeocachesHiddenByReferredUsersField;
            }
            set {
                if ((this.TotalGeocachesHiddenByReferredUsersField.Equals(value) != true)) {
                    this.TotalGeocachesHiddenByReferredUsersField = value;
                    this.RaisePropertyChanged("TotalGeocachesHiddenByReferredUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalReferredUsers {
            get {
                return this.TotalReferredUsersField;
            }
            set {
                if ((this.TotalReferredUsersField.Equals(value) != true)) {
                    this.TotalReferredUsersField = value;
                    this.RaisePropertyChanged("TotalReferredUsers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailPreference", Namespace="http://www.geocaching.com/Account/data")]
    [System.SerializableAttribute()]
    public partial class EmailPreference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultDisplayTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string DefaultDisplayText {
            get {
                return this.DefaultDisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultDisplayTextField, value) != true)) {
                    this.DefaultDisplayTextField = value;
                    this.RaisePropertyChanged("DefaultDisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaAccountCreateRequest", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Requests")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaAccountCreateRequestPublic))]
    public partial class SocialMediaAccountCreateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgreeToTermsAndConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoValidateAccountAndEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HomeCoordinateLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HomeCoordinateLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMobileSignupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ReferringAccountPublicGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialMediaAccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubscribeToWeeklyNewsletterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgreeToTermsAndConditions {
            get {
                return this.AgreeToTermsAndConditionsField;
            }
            set {
                if ((this.AgreeToTermsAndConditionsField.Equals(value) != true)) {
                    this.AgreeToTermsAndConditionsField = value;
                    this.RaisePropertyChanged("AgreeToTermsAndConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoValidateAccountAndEmailAddress {
            get {
                return this.AutoValidateAccountAndEmailAddressField;
            }
            set {
                if ((this.AutoValidateAccountAndEmailAddressField.Equals(value) != true)) {
                    this.AutoValidateAccountAndEmailAddressField = value;
                    this.RaisePropertyChanged("AutoValidateAccountAndEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerKey {
            get {
                return this.ConsumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerKeyField, value) != true)) {
                    this.ConsumerKeyField = value;
                    this.RaisePropertyChanged("ConsumerKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> HomeCoordinateLatitude {
            get {
                return this.HomeCoordinateLatitudeField;
            }
            set {
                if ((this.HomeCoordinateLatitudeField.Equals(value) != true)) {
                    this.HomeCoordinateLatitudeField = value;
                    this.RaisePropertyChanged("HomeCoordinateLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> HomeCoordinateLongitude {
            get {
                return this.HomeCoordinateLongitudeField;
            }
            set {
                if ((this.HomeCoordinateLongitudeField.Equals(value) != true)) {
                    this.HomeCoordinateLongitudeField = value;
                    this.RaisePropertyChanged("HomeCoordinateLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMobileSignup {
            get {
                return this.IsMobileSignupField;
            }
            set {
                if ((this.IsMobileSignupField.Equals(value) != true)) {
                    this.IsMobileSignupField = value;
                    this.RaisePropertyChanged("IsMobileSignup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderType {
            get {
                return this.ProviderTypeField;
            }
            set {
                if ((this.ProviderTypeField.Equals(value) != true)) {
                    this.ProviderTypeField = value;
                    this.RaisePropertyChanged("ProviderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ReferringAccountPublicGuid {
            get {
                return this.ReferringAccountPublicGuidField;
            }
            set {
                if ((this.ReferringAccountPublicGuidField.Equals(value) != true)) {
                    this.ReferringAccountPublicGuidField = value;
                    this.RaisePropertyChanged("ReferringAccountPublicGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationIPAddress {
            get {
                return this.RegistrationIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationIPAddressField, value) != true)) {
                    this.RegistrationIPAddressField = value;
                    this.RaisePropertyChanged("RegistrationIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialMediaAccessToken {
            get {
                return this.SocialMediaAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialMediaAccessTokenField, value) != true)) {
                    this.SocialMediaAccessTokenField = value;
                    this.RaisePropertyChanged("SocialMediaAccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubscribeToWeeklyNewsletter {
            get {
                return this.SubscribeToWeeklyNewsletterField;
            }
            set {
                if ((this.SubscribeToWeeklyNewsletterField.Equals(value) != true)) {
                    this.SubscribeToWeeklyNewsletterField = value;
                    this.RaisePropertyChanged("SubscribeToWeeklyNewsletter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaAccountCreateRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SocialMediaAccountCreateRequestPublic : WinCachebox.ServiceReference1.SocialMediaAccountCreateRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsumerKeyRequestBase", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.Requests")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.GetAccessTokenRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.SocialMediaLoginRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.IsUserNameValidAndAvailableRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.CreateStandardAccountRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.RecoverPasswordRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.RecoverUsernameRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimbleRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimbleLoginRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimbleCreatePhoneAccountRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimblePinChangeRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.IsEmailAddressInUseRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.LoginRequestPublic))]
    public partial class ConsumerKeyRequestBase1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerKey {
            get {
                return this.ConsumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerKeyField, value) != true)) {
                    this.ConsumerKeyField = value;
                    this.RaisePropertyChanged("ConsumerKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccessTokenRequest", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class GetAccessTokenRequest : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserToken {
            get {
                return this.UserTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTokenField, value) != true)) {
                    this.UserTokenField = value;
                    this.RaisePropertyChanged("UserToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SocialMediaLoginRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SocialMediaLoginRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProviderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialMediaAccessTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProviderType {
            get {
                return this.ProviderTypeField;
            }
            set {
                if ((this.ProviderTypeField.Equals(value) != true)) {
                    this.ProviderTypeField = value;
                    this.RaisePropertyChanged("ProviderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialMediaAccessToken {
            get {
                return this.SocialMediaAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialMediaAccessTokenField, value) != true)) {
                    this.SocialMediaAccessTokenField = value;
                    this.RaisePropertyChanged("SocialMediaAccessToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsUserNameValidAndAvailableRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class IsUserNameValidAndAvailableRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateStandardAccountRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class CreateStandardAccountRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgreeToReceiveCompanyRelatedInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgreeToTermsAndConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HomeCoordinateLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HomeCoordinateLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHtmlPreferredEmailFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMobileSignupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ReferringAccountPublicGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubscribeToWeeklyNewsletterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgreeToReceiveCompanyRelatedInformation {
            get {
                return this.AgreeToReceiveCompanyRelatedInformationField;
            }
            set {
                if ((this.AgreeToReceiveCompanyRelatedInformationField.Equals(value) != true)) {
                    this.AgreeToReceiveCompanyRelatedInformationField = value;
                    this.RaisePropertyChanged("AgreeToReceiveCompanyRelatedInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgreeToTermsAndConditions {
            get {
                return this.AgreeToTermsAndConditionsField;
            }
            set {
                if ((this.AgreeToTermsAndConditionsField.Equals(value) != true)) {
                    this.AgreeToTermsAndConditionsField = value;
                    this.RaisePropertyChanged("AgreeToTermsAndConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> HomeCoordinateLatitude {
            get {
                return this.HomeCoordinateLatitudeField;
            }
            set {
                if ((this.HomeCoordinateLatitudeField.Equals(value) != true)) {
                    this.HomeCoordinateLatitudeField = value;
                    this.RaisePropertyChanged("HomeCoordinateLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> HomeCoordinateLongitude {
            get {
                return this.HomeCoordinateLongitudeField;
            }
            set {
                if ((this.HomeCoordinateLongitudeField.Equals(value) != true)) {
                    this.HomeCoordinateLongitudeField = value;
                    this.RaisePropertyChanged("HomeCoordinateLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHtmlPreferredEmailFormat {
            get {
                return this.IsHtmlPreferredEmailFormatField;
            }
            set {
                if ((this.IsHtmlPreferredEmailFormatField.Equals(value) != true)) {
                    this.IsHtmlPreferredEmailFormatField = value;
                    this.RaisePropertyChanged("IsHtmlPreferredEmailFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMobileSignup {
            get {
                return this.IsMobileSignupField;
            }
            set {
                if ((this.IsMobileSignupField.Equals(value) != true)) {
                    this.IsMobileSignupField = value;
                    this.RaisePropertyChanged("IsMobileSignup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ReferringAccountPublicGuid {
            get {
                return this.ReferringAccountPublicGuidField;
            }
            set {
                if ((this.ReferringAccountPublicGuidField.Equals(value) != true)) {
                    this.ReferringAccountPublicGuidField = value;
                    this.RaisePropertyChanged("ReferringAccountPublicGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationIPAddress {
            get {
                return this.RegistrationIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationIPAddressField, value) != true)) {
                    this.RegistrationIPAddressField = value;
                    this.RaisePropertyChanged("RegistrationIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubscribeToWeeklyNewsletter {
            get {
                return this.SubscribeToWeeklyNewsletterField;
            }
            set {
                if ((this.SubscribeToWeeklyNewsletterField.Equals(value) != true)) {
                    this.SubscribeToWeeklyNewsletterField = value;
                    this.RaisePropertyChanged("SubscribeToWeeklyNewsletter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecoverPasswordRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class RecoverPasswordRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecoverUsernameRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class RecoverUsernameRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrimbleRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimbleLoginRequestPublic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WinCachebox.ServiceReference1.TrimbleCreatePhoneAccountRequest))]
    public partial class TrimbleRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhonePinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhoneIdentifier {
            get {
                return this.CellPhoneIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneIdentifierField, value) != true)) {
                    this.CellPhoneIdentifierField = value;
                    this.RaisePropertyChanged("CellPhoneIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhonePin {
            get {
                return this.PhonePinField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonePinField, value) != true)) {
                    this.PhonePinField = value;
                    this.RaisePropertyChanged("PhonePin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrimbleLoginRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class TrimbleLoginRequestPublic : WinCachebox.ServiceReference1.TrimbleRequestPublic {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrimbleCreatePhoneAccountRequest", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class TrimbleCreatePhoneAccountRequest : WinCachebox.ServiceReference1.TrimbleRequestPublic {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrimblePinChangeRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class TrimblePinChangeRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPhonePinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhoneIdentifier {
            get {
                return this.CellPhoneIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneIdentifierField, value) != true)) {
                    this.CellPhoneIdentifierField = value;
                    this.RaisePropertyChanged("CellPhoneIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPhonePin {
            get {
                return this.NewPhonePinField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPhonePinField, value) != true)) {
                    this.NewPhonePinField = value;
                    this.RaisePropertyChanged("NewPhonePin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsEmailAddressInUseRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class IsEmailAddressInUseRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class LoginRequestPublic : WinCachebox.ServiceReference1.ConsumerKeyRequestBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmailPreferencesRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class GetEmailPreferencesRequestPublic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoveEmailPreferencesForAccountRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class RemoveEmailPreferencesForAccountRequestPublic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] EmailPreferenceIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerKey {
            get {
                return this.ConsumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerKeyField, value) != true)) {
                    this.ConsumerKeyField = value;
                    this.RaisePropertyChanged("ConsumerKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] EmailPreferenceIds {
            get {
                return this.EmailPreferenceIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailPreferenceIdsField, value) != true)) {
                    this.EmailPreferenceIdsField = value;
                    this.RaisePropertyChanged("EmailPreferenceIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetAccountToValidatedRequestPublic", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.User.PublicRequests")]
    [System.SerializableAttribute()]
    public partial class SetAccountToValidatedRequestPublic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerKey {
            get {
                return this.ConsumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerKeyField, value) != true)) {
                    this.ConsumerKeyField = value;
                    this.RaisePropertyChanged("ConsumerKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationCode {
            get {
                return this.ValidationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationCodeField, value) != true)) {
                    this.ValidationCodeField = value;
                    this.RaisePropertyChanged("ValidationCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILive")]
    public interface ILive {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddFavoritePointToCache", ReplyAction="http://tempuri.org/ILive/AddFavoritePointToCacheResponse")]
        WinCachebox.ServiceReference1.FavoritePointsSummaryResponse AddFavoritePointToCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddFavoritePointToCache", ReplyAction="http://tempuri.org/ILive/AddFavoritePointToCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> AddFavoritePointToCacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RemoveFavoritePointFromCache", ReplyAction="http://tempuri.org/ILive/RemoveFavoritePointFromCacheResponse")]
        WinCachebox.ServiceReference1.FavoritePointsSummaryResponse RemoveFavoritePointFromCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RemoveFavoritePointFromCache", ReplyAction="http://tempuri.org/ILive/RemoveFavoritePointFromCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> RemoveFavoritePointFromCacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersFavoritePoints", ReplyAction="http://tempuri.org/ILive/GetUsersFavoritePointsResponse")]
        WinCachebox.ServiceReference1.GetUserFavoritePointsResponse GetUsersFavoritePoints(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersFavoritePoints", ReplyAction="http://tempuri.org/ILive/GetUsersFavoritePointsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserFavoritePointsResponse> GetUsersFavoritePointsAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersWhoFavoritedCache", ReplyAction="http://tempuri.org/ILive/GetUsersWhoFavoritedCacheResponse")]
        WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse GetUsersWhoFavoritedCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersWhoFavoritedCache", ReplyAction="http://tempuri.org/ILive/GetUsersWhoFavoritedCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse> GetUsersWhoFavoritedCacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheIdsFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCacheIdsFavoritedByUserResponse")]
        WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse GetCacheIdsFavoritedByUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheIdsFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCacheIdsFavoritedByUserResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse> GetCacheIdsFavoritedByUserAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCachesFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCachesFavoritedByUserResponse")]
        WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse GetCachesFavoritedByUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCachesFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCachesFavoritedByUserResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse> GetCachesFavoritedByUserAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsForUser", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsForUserResponse")]
        WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsForUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsForUser", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsForUserResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsForUserAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsByUserID", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsByUserIDResponse")]
        WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsByUserID(string accessToken, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsByUserID", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsByUserIDResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsByUserIDAsync(string accessToken, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GeocodeString", ReplyAction="http://tempuri.org/ILive/GeocodeStringResponse")]
        WinCachebox.ServiceReference1.GetGeocodeResponse GeocodeString(WinCachebox.ServiceReference1.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GeocodeString", ReplyAction="http://tempuri.org/ILive/GeocodeStringResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocodeResponse> GeocodeStringAsync(WinCachebox.ServiceReference1.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/WindowsPhoneTileSearch", ReplyAction="http://tempuri.org/ILive/WindowsPhoneTileSearchResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse WindowsPhoneTileSearch(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/WindowsPhoneTileSearch", ReplyAction="http://tempuri.org/ILive/WindowsPhoneTileSearchResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> WindowsPhoneTileSearchAsync(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RegisterWP7DeviceTile", ReplyAction="http://tempuri.org/ILive/RegisterWP7DeviceTileResponse")]
        WinCachebox.ServiceReference1.StatusResponse RegisterWP7DeviceTile(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RegisterWP7DeviceTile", ReplyAction="http://tempuri.org/ILive/RegisterWP7DeviceTileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> RegisterWP7DeviceTileAsync(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheCounts", ReplyAction="http://tempuri.org/ILive/GetUsersCacheCountsResponse")]
        WinCachebox.ServiceReference1.GetUserCacheCountsResponse GetUsersCacheCounts(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheCounts", ReplyAction="http://tempuri.org/ILive/GetUsersCacheCountsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCacheCountsResponse> GetUsersCacheCountsAsync(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersTrackables", ReplyAction="http://tempuri.org/ILive/GetUsersTrackablesResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetUsersTrackables(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersTrackables", ReplyAction="http://tempuri.org/ILive/GetUsersTrackablesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetUsersTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetOwnedTrackables", ReplyAction="http://tempuri.org/ILive/GetOwnedTrackablesResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetOwnedTrackables(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetOwnedTrackables", ReplyAction="http://tempuri.org/ILive/GetOwnedTrackablesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetOwnedTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserGallery", ReplyAction="http://tempuri.org/ILive/GetUserGalleryResponse")]
        WinCachebox.ServiceReference1.GetUserGalleryResponse GetUserGallery(WinCachebox.ServiceReference1.GetUserGalleryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserGallery", ReplyAction="http://tempuri.org/ILive/GetUserGalleryResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserGalleryResponse> GetUserGalleryAsync(WinCachebox.ServiceReference1.GetUserGalleryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SaveUserWaypoint", ReplyAction="http://tempuri.org/ILive/SaveUserWaypointResponse")]
        WinCachebox.ServiceReference1.SaveUserWaypointResponse SaveUserWaypoint(WinCachebox.ServiceReference1.SaveUserWaypointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SaveUserWaypoint", ReplyAction="http://tempuri.org/ILive/SaveUserWaypointResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SaveUserWaypointResponse> SaveUserWaypointAsync(WinCachebox.ServiceReference1.SaveUserWaypointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersGeocacheLogs", ReplyAction="http://tempuri.org/ILive/GetUsersGeocacheLogsResponse")]
        WinCachebox.ServiceReference1.GetGeocacheLogResponse GetUsersGeocacheLogs(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersGeocacheLogs", ReplyAction="http://tempuri.org/ILive/GetUsersGeocacheLogsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetUsersGeocacheLogsAsync(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMoreGeocaches", ReplyAction="http://tempuri.org/ILive/GetMoreGeocachesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetMoreGeocaches(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMoreGeocaches", ReplyAction="http://tempuri.org/ILive/GetMoreGeocachesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetMoreGeocachesAsync(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForGeocaches", ReplyAction="http://tempuri.org/ILive/SearchForGeocachesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse SearchForGeocaches(WinCachebox.ServiceReference1.SearchForGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForGeocaches", ReplyAction="http://tempuri.org/ILive/SearchForGeocachesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> SearchForGeocachesAsync(WinCachebox.ServiceReference1.SearchForGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAnotherUsersProfile", ReplyAction="http://tempuri.org/ILive/GetAnotherUsersProfileResponse")]
        WinCachebox.ServiceReference1.GetUserProfileResponse GetAnotherUsersProfile(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAnotherUsersProfile", ReplyAction="http://tempuri.org/ILive/GetAnotherUsersProfileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserProfileResponse> GetAnotherUsersProfileAsync(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateFieldNoteAndPublish", ReplyAction="http://tempuri.org/ILive/CreateFieldNoteAndPublishResponse")]
        WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse CreateFieldNoteAndPublish(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateFieldNoteAndPublish", ReplyAction="http://tempuri.org/ILive/CreateFieldNoteAndPublishResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse> CreateFieldNoteAndPublishAsync(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuid", ReplyAction="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuidResponse")]
        WinCachebox.ServiceReference1.SouvenirResponse SearchForSouvenirsByPublicGuid(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuid", ReplyAction="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuidResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SouvenirResponse> SearchForSouvenirsByPublicGuidAsync(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UpdateCacheNote", ReplyAction="http://tempuri.org/ILive/UpdateCacheNoteResponse")]
        WinCachebox.ServiceReference1.StatusResponse UpdateCacheNote(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UpdateCacheNote", ReplyAction="http://tempuri.org/ILive/UpdateCacheNoteResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> UpdateCacheNoteAsync(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetYourUserProfile", ReplyAction="http://tempuri.org/ILive/GetYourUserProfileResponse")]
        WinCachebox.ServiceReference1.GetYourUserProfileResponse GetYourUserProfile(WinCachebox.ServiceReference1.GetYourUserProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetYourUserProfile", ReplyAction="http://tempuri.org/ILive/GetYourUserProfileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetYourUserProfileResponse> GetYourUserProfileAsync(WinCachebox.ServiceReference1.GetYourUserProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToGeocacheLog", ReplyAction="http://tempuri.org/ILive/UploadImageToGeocacheLogResponse")]
        WinCachebox.ServiceReference1.UploadImageResponse UploadImageToGeocacheLog(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToGeocacheLog", ReplyAction="http://tempuri.org/ILive/UploadImageToGeocacheLogResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToGeocacheLogAsync(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateTrackableLog", ReplyAction="http://tempuri.org/ILive/CreateTrackableLogResponse")]
        WinCachebox.ServiceReference1.CreateTrackableLogResponse CreateTrackableLog(WinCachebox.ServiceReference1.CreateTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateTrackableLog", ReplyAction="http://tempuri.org/ILive/CreateTrackableLogResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateTrackableLogResponse> CreateTrackableLogAsync(WinCachebox.ServiceReference1.CreateTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToTrackableLog", ReplyAction="http://tempuri.org/ILive/UploadImageToTrackableLogResponse")]
        WinCachebox.ServiceReference1.UploadImageResponse UploadImageToTrackableLog(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToTrackableLog", ReplyAction="http://tempuri.org/ILive/UploadImageToTrackableLogResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToTrackableLogAsync(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListByGuid", ReplyAction="http://tempuri.org/ILive/GetBookmarkListByGuidResponse")]
        WinCachebox.ServiceReference1.GetBookmarkListResponse GetBookmarkListByGuid(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListByGuid", ReplyAction="http://tempuri.org/ILive/GetBookmarkListByGuidResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListResponse> GetBookmarkListByGuidAsync(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddGeocachesToBookmarkList", ReplyAction="http://tempuri.org/ILive/AddGeocachesToBookmarkListResponse")]
        WinCachebox.ServiceReference1.StatusResponse AddGeocachesToBookmarkList(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddGeocachesToBookmarkList", ReplyAction="http://tempuri.org/ILive/AddGeocachesToBookmarkListResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> AddGeocachesToBookmarkListAsync(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheStatus", ReplyAction="http://tempuri.org/ILive/GetGeocacheStatusResponse")]
        WinCachebox.ServiceReference1.GetGeocacheStatusResponse GetGeocacheStatus(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheStatus", ReplyAction="http://tempuri.org/ILive/GetGeocacheStatusResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheStatusResponse> GetGeocacheStatusAsync(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMembershipTypes", ReplyAction="http://tempuri.org/ILive/GetMembershipTypesResponse")]
        WinCachebox.ServiceReference1.GetMembershipTypesResponse GetMembershipTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMembershipTypes", ReplyAction="http://tempuri.org/ILive/GetMembershipTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetMembershipTypesResponse> GetMembershipTypesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAPILimits", ReplyAction="http://tempuri.org/ILive/GetAPILimitsResponse")]
        WinCachebox.ServiceReference1.GetAPILimitsResponse GetAPILimits(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAPILimits", ReplyAction="http://tempuri.org/ILive/GetAPILimitsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAPILimitsResponse> GetAPILimitsAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetSiteStats", ReplyAction="http://tempuri.org/ILive/GetSiteStatsResponse")]
        WinCachebox.ServiceReference1.GetSiteStatsResponse GetSiteStats(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetSiteStats", ReplyAction="http://tempuri.org/ILive/GetSiteStatsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetSiteStatsResponse> GetSiteStatsAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetStatusMessages", ReplyAction="http://tempuri.org/ILive/GetStatusMessagesResponse")]
        WinCachebox.ServiceReference1.GetStatusMessageResponse GetStatusMessages(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetStatusMessages", ReplyAction="http://tempuri.org/ILive/GetStatusMessagesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetStatusMessageResponse> GetStatusMessagesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetImagesForGeocache", ReplyAction="http://tempuri.org/ILive/GetImagesForGeocacheResponse")]
        WinCachebox.ServiceReference1.GetImagesForGeocacheResponse GetImagesForGeocache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetImagesForGeocache", ReplyAction="http://tempuri.org/ILive/GetImagesForGeocacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetImagesForGeocacheResponse> GetImagesForGeocacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetWptLogTypes", ReplyAction="http://tempuri.org/ILive/GetWptLogTypesResponse")]
        WinCachebox.ServiceReference1.GetWptLogTypesResponse GetWptLogTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetWptLogTypes", ReplyAction="http://tempuri.org/ILive/GetWptLogTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetWptLogTypesResponse> GetWptLogTypesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheTypesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheTypesResponse GetGeocacheTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheTypesResponse> GetGeocacheTypesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheDataTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheDataTypesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse GetGeocacheDataTypes(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheDataTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheDataTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse> GetGeocacheDataTypesAsync(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryList", ReplyAction="http://tempuri.org/ILive/GetPocketQueryListResponse")]
        WinCachebox.ServiceReference1.GetPocketQueryListResponse GetPocketQueryList(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryList", ReplyAction="http://tempuri.org/ILive/GetPocketQueryListResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryListResponse> GetPocketQueryListAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetPocketQueryDataResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetPocketQueryDataResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetFullPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetFullPocketQueryDataResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetFullPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetFullPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetFullPocketQueryDataResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetFullPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryZippedFile", ReplyAction="http://tempuri.org/ILive/GetPocketQueryZippedFileResponse")]
        WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse GetPocketQueryZippedFile(string accessToken, System.Guid pocketQueryGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryZippedFile", ReplyAction="http://tempuri.org/ILive/GetPocketQueryZippedFileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse> GetPocketQueryZippedFileAsync(string accessToken, System.Guid pocketQueryGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTrackingNumber", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTrackingNumberResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTrackingNumber(string accessToken, string trackingNumber, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTrackingNumber", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTrackingNumberResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTrackingNumberAsync(string accessToken, string trackingNumber, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTBCodeResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTBCode(string accessToken, string tbCode, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTBCodeResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTBCodeAsync(string accessToken, string tbCode, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesInCache", ReplyAction="http://tempuri.org/ILive/GetTrackablesInCacheResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesInCache(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesInCache", ReplyAction="http://tempuri.org/ILive/GetTrackablesInCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesInCacheAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableTravelList", ReplyAction="http://tempuri.org/ILive/GetTrackableTravelListResponse")]
        WinCachebox.ServiceReference1.GetTrackableTravelResponse GetTrackableTravelList(string accessToken, string tbCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableTravelList", ReplyAction="http://tempuri.org/ILive/GetTrackableTravelListResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableTravelResponse> GetTrackableTravelListAsync(string accessToken, string tbCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAttributeTypesData", ReplyAction="http://tempuri.org/ILive/GetAttributeTypesDataResponse")]
        WinCachebox.ServiceReference1.GetAttributeTypesDataResponse GetAttributeTypesData(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAttributeTypesData", ReplyAction="http://tempuri.org/ILive/GetAttributeTypesDataResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAttributeTypesDataResponse> GetAttributeTypesDataAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserCredentials", ReplyAction="http://tempuri.org/ILive/GetUserCredentialsResponse")]
        WinCachebox.ServiceReference1.GetUserCredentialsResponse GetUserCredentials(string consumerKey, System.Guid licenseGuid, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserCredentials", ReplyAction="http://tempuri.org/ILive/GetUserCredentialsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCredentialsResponse> GetUserCredentialsAsync(string consumerKey, System.Guid licenseGuid, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteCacheNote", ReplyAction="http://tempuri.org/ILive/DeleteCacheNoteResponse")]
        WinCachebox.ServiceReference1.StatusResponse DeleteCacheNote(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteCacheNote", ReplyAction="http://tempuri.org/ILive/DeleteCacheNoteResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteCacheNoteAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheLogsByCacheCode", ReplyAction="http://tempuri.org/ILive/GetGeocacheLogsByCacheCodeResponse")]
        WinCachebox.ServiceReference1.GetGeocacheLogResponse GetGeocacheLogsByCacheCode(string accessToken, string cacheCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheLogsByCacheCode", ReplyAction="http://tempuri.org/ILive/GetGeocacheLogsByCacheCodeResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetGeocacheLogsByCacheCodeAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableLogsByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackableLogsByTBCodeResponse")]
        WinCachebox.ServiceReference1.GetTrackableLogsResponse GetTrackableLogsByTBCode(string accessToken, string tbCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableLogsByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackableLogsByTBCodeResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableLogsResponse> GetTrackableLogsByTBCodeAsync(string accessToken, string tbCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheNotes", ReplyAction="http://tempuri.org/ILive/GetUsersCacheNotesResponse")]
        WinCachebox.ServiceReference1.GetUsersCacheNotesResponse GetUsersCacheNotes(string accessToken, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheNotes", ReplyAction="http://tempuri.org/ILive/GetUsersCacheNotesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersCacheNotesResponse> GetUsersCacheNotesAsync(string accessToken, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserWaypoints", ReplyAction="http://tempuri.org/ILive/GetUserWaypointsResponse")]
        WinCachebox.ServiceReference1.GetUserWaypointsResponse GetUserWaypoints(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserWaypoints", ReplyAction="http://tempuri.org/ILive/GetUserWaypointsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserWaypointsResponse> GetUserWaypointsAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteUserWaypoint", ReplyAction="http://tempuri.org/ILive/DeleteUserWaypointResponse")]
        WinCachebox.ServiceReference1.StatusResponse DeleteUserWaypoint(string accessToken, long waypointID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteUserWaypoint", ReplyAction="http://tempuri.org/ILive/DeleteUserWaypointResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteUserWaypointAsync(string accessToken, long waypointID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheByTileGuid", ReplyAction="http://tempuri.org/ILive/GetCacheByTileGuidResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetCacheByTileGuid(string accessToken, string tileGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheByTileGuid", ReplyAction="http://tempuri.org/ILive/GetCacheByTileGuidResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetCacheByTileGuidAsync(string accessToken, string tileGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/Ping", ReplyAction="http://tempuri.org/ILive/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/Ping", ReplyAction="http://tempuri.org/ILive/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiveChannel : WinCachebox.ServiceReference1.ILive, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LiveClient : System.ServiceModel.ClientBase<WinCachebox.ServiceReference1.ILive>, WinCachebox.ServiceReference1.ILive {
        
        public LiveClient() {
        }
        
        public LiveClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LiveClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WinCachebox.ServiceReference1.FavoritePointsSummaryResponse AddFavoritePointToCache(string accessToken, string cacheCode) {
            return base.Channel.AddFavoritePointToCache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> AddFavoritePointToCacheAsync(string accessToken, string cacheCode) {
            return base.Channel.AddFavoritePointToCacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.FavoritePointsSummaryResponse RemoveFavoritePointFromCache(string accessToken, string cacheCode) {
            return base.Channel.RemoveFavoritePointFromCache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> RemoveFavoritePointFromCacheAsync(string accessToken, string cacheCode) {
            return base.Channel.RemoveFavoritePointFromCacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetUserFavoritePointsResponse GetUsersFavoritePoints(string accessToken) {
            return base.Channel.GetUsersFavoritePoints(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserFavoritePointsResponse> GetUsersFavoritePointsAsync(string accessToken) {
            return base.Channel.GetUsersFavoritePointsAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse GetUsersWhoFavoritedCache(string accessToken, string cacheCode) {
            return base.Channel.GetUsersWhoFavoritedCache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse> GetUsersWhoFavoritedCacheAsync(string accessToken, string cacheCode) {
            return base.Channel.GetUsersWhoFavoritedCacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse GetCacheIdsFavoritedByUser(string accessToken) {
            return base.Channel.GetCacheIdsFavoritedByUser(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse> GetCacheIdsFavoritedByUserAsync(string accessToken) {
            return base.Channel.GetCacheIdsFavoritedByUserAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse GetCachesFavoritedByUser(string accessToken) {
            return base.Channel.GetCachesFavoritedByUser(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse> GetCachesFavoritedByUserAsync(string accessToken) {
            return base.Channel.GetCachesFavoritedByUserAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsForUser(string accessToken) {
            return base.Channel.GetBookmarkListsForUser(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsForUserAsync(string accessToken) {
            return base.Channel.GetBookmarkListsForUserAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsByUserID(string accessToken, long userID) {
            return base.Channel.GetBookmarkListsByUserID(accessToken, userID);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsByUserIDAsync(string accessToken, long userID) {
            return base.Channel.GetBookmarkListsByUserIDAsync(accessToken, userID);
        }
        
        public WinCachebox.ServiceReference1.GetGeocodeResponse GeocodeString(WinCachebox.ServiceReference1.GeocodeRequest request) {
            return base.Channel.GeocodeString(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocodeResponse> GeocodeStringAsync(WinCachebox.ServiceReference1.GeocodeRequest request) {
            return base.Channel.GeocodeStringAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse WindowsPhoneTileSearch(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request) {
            return base.Channel.WindowsPhoneTileSearch(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> WindowsPhoneTileSearchAsync(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request) {
            return base.Channel.WindowsPhoneTileSearchAsync(request);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse RegisterWP7DeviceTile(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request) {
            return base.Channel.RegisterWP7DeviceTile(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> RegisterWP7DeviceTileAsync(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request) {
            return base.Channel.RegisterWP7DeviceTileAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetUserCacheCountsResponse GetUsersCacheCounts(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request) {
            return base.Channel.GetUsersCacheCounts(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCacheCountsResponse> GetUsersCacheCountsAsync(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request) {
            return base.Channel.GetUsersCacheCountsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetUsersTrackables(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request) {
            return base.Channel.GetUsersTrackables(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetUsersTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request) {
            return base.Channel.GetUsersTrackablesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetOwnedTrackables(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request) {
            return base.Channel.GetOwnedTrackables(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetOwnedTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request) {
            return base.Channel.GetOwnedTrackablesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetUserGalleryResponse GetUserGallery(WinCachebox.ServiceReference1.GetUserGalleryRequest request) {
            return base.Channel.GetUserGallery(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserGalleryResponse> GetUserGalleryAsync(WinCachebox.ServiceReference1.GetUserGalleryRequest request) {
            return base.Channel.GetUserGalleryAsync(request);
        }
        
        public WinCachebox.ServiceReference1.SaveUserWaypointResponse SaveUserWaypoint(WinCachebox.ServiceReference1.SaveUserWaypointRequest request) {
            return base.Channel.SaveUserWaypoint(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SaveUserWaypointResponse> SaveUserWaypointAsync(WinCachebox.ServiceReference1.SaveUserWaypointRequest request) {
            return base.Channel.SaveUserWaypointAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheLogResponse GetUsersGeocacheLogs(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request) {
            return base.Channel.GetUsersGeocacheLogs(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetUsersGeocacheLogsAsync(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request) {
            return base.Channel.GetUsersGeocacheLogsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetMoreGeocaches(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request) {
            return base.Channel.GetMoreGeocaches(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetMoreGeocachesAsync(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request) {
            return base.Channel.GetMoreGeocachesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse SearchForGeocaches(WinCachebox.ServiceReference1.SearchForGeocachesRequest request) {
            return base.Channel.SearchForGeocaches(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> SearchForGeocachesAsync(WinCachebox.ServiceReference1.SearchForGeocachesRequest request) {
            return base.Channel.SearchForGeocachesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetUserProfileResponse GetAnotherUsersProfile(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request) {
            return base.Channel.GetAnotherUsersProfile(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserProfileResponse> GetAnotherUsersProfileAsync(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request) {
            return base.Channel.GetAnotherUsersProfileAsync(request);
        }
        
        public WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse CreateFieldNoteAndPublish(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request) {
            return base.Channel.CreateFieldNoteAndPublish(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse> CreateFieldNoteAndPublishAsync(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request) {
            return base.Channel.CreateFieldNoteAndPublishAsync(request);
        }
        
        public WinCachebox.ServiceReference1.SouvenirResponse SearchForSouvenirsByPublicGuid(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request) {
            return base.Channel.SearchForSouvenirsByPublicGuid(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SouvenirResponse> SearchForSouvenirsByPublicGuidAsync(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request) {
            return base.Channel.SearchForSouvenirsByPublicGuidAsync(request);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse UpdateCacheNote(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request) {
            return base.Channel.UpdateCacheNote(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> UpdateCacheNoteAsync(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request) {
            return base.Channel.UpdateCacheNoteAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetYourUserProfileResponse GetYourUserProfile(WinCachebox.ServiceReference1.GetYourUserProfileRequest request) {
            return base.Channel.GetYourUserProfile(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetYourUserProfileResponse> GetYourUserProfileAsync(WinCachebox.ServiceReference1.GetYourUserProfileRequest request) {
            return base.Channel.GetYourUserProfileAsync(request);
        }
        
        public WinCachebox.ServiceReference1.UploadImageResponse UploadImageToGeocacheLog(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request) {
            return base.Channel.UploadImageToGeocacheLog(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToGeocacheLogAsync(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request) {
            return base.Channel.UploadImageToGeocacheLogAsync(request);
        }
        
        public WinCachebox.ServiceReference1.CreateTrackableLogResponse CreateTrackableLog(WinCachebox.ServiceReference1.CreateTrackableLogRequest request) {
            return base.Channel.CreateTrackableLog(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateTrackableLogResponse> CreateTrackableLogAsync(WinCachebox.ServiceReference1.CreateTrackableLogRequest request) {
            return base.Channel.CreateTrackableLogAsync(request);
        }
        
        public WinCachebox.ServiceReference1.UploadImageResponse UploadImageToTrackableLog(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request) {
            return base.Channel.UploadImageToTrackableLog(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToTrackableLogAsync(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request) {
            return base.Channel.UploadImageToTrackableLogAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetBookmarkListResponse GetBookmarkListByGuid(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request) {
            return base.Channel.GetBookmarkListByGuid(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListResponse> GetBookmarkListByGuidAsync(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request) {
            return base.Channel.GetBookmarkListByGuidAsync(request);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse AddGeocachesToBookmarkList(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request) {
            return base.Channel.AddGeocachesToBookmarkList(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> AddGeocachesToBookmarkListAsync(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request) {
            return base.Channel.AddGeocachesToBookmarkListAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheStatusResponse GetGeocacheStatus(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request) {
            return base.Channel.GetGeocacheStatus(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheStatusResponse> GetGeocacheStatusAsync(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request) {
            return base.Channel.GetGeocacheStatusAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetMembershipTypesResponse GetMembershipTypes(string accessToken) {
            return base.Channel.GetMembershipTypes(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetMembershipTypesResponse> GetMembershipTypesAsync(string accessToken) {
            return base.Channel.GetMembershipTypesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetAPILimitsResponse GetAPILimits(string accessToken) {
            return base.Channel.GetAPILimits(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAPILimitsResponse> GetAPILimitsAsync(string accessToken) {
            return base.Channel.GetAPILimitsAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetSiteStatsResponse GetSiteStats(string accessToken) {
            return base.Channel.GetSiteStats(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetSiteStatsResponse> GetSiteStatsAsync(string accessToken) {
            return base.Channel.GetSiteStatsAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetStatusMessageResponse GetStatusMessages(string accessToken) {
            return base.Channel.GetStatusMessages(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetStatusMessageResponse> GetStatusMessagesAsync(string accessToken) {
            return base.Channel.GetStatusMessagesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetImagesForGeocacheResponse GetImagesForGeocache(string accessToken, string cacheCode) {
            return base.Channel.GetImagesForGeocache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetImagesForGeocacheResponse> GetImagesForGeocacheAsync(string accessToken, string cacheCode) {
            return base.Channel.GetImagesForGeocacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetWptLogTypesResponse GetWptLogTypes(string accessToken) {
            return base.Channel.GetWptLogTypes(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetWptLogTypesResponse> GetWptLogTypesAsync(string accessToken) {
            return base.Channel.GetWptLogTypesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheTypesResponse GetGeocacheTypes(string accessToken) {
            return base.Channel.GetGeocacheTypes(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheTypesResponse> GetGeocacheTypesAsync(string accessToken) {
            return base.Channel.GetGeocacheTypesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse GetGeocacheDataTypes(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes) {
            return base.Channel.GetGeocacheDataTypes(accessToken, geocacheTypes, logTypes, attributeTypes);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse> GetGeocacheDataTypesAsync(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes) {
            return base.Channel.GetGeocacheDataTypesAsync(accessToken, geocacheTypes, logTypes, attributeTypes);
        }
        
        public WinCachebox.ServiceReference1.GetPocketQueryListResponse GetPocketQueryList(string accessToken) {
            return base.Channel.GetPocketQueryList(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryListResponse> GetPocketQueryListAsync(string accessToken) {
            return base.Channel.GetPocketQueryListAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly) {
            return base.Channel.GetPocketQueryData(accessToken, pocketQueryGuid, startItem, maxItems, gcListOnly);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly) {
            return base.Channel.GetPocketQueryDataAsync(accessToken, pocketQueryGuid, startItem, maxItems, gcListOnly);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetFullPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems) {
            return base.Channel.GetFullPocketQueryData(accessToken, pocketQueryGuid, startItem, maxItems);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetFullPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems) {
            return base.Channel.GetFullPocketQueryDataAsync(accessToken, pocketQueryGuid, startItem, maxItems);
        }
        
        public WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse GetPocketQueryZippedFile(string accessToken, System.Guid pocketQueryGuid) {
            return base.Channel.GetPocketQueryZippedFile(accessToken, pocketQueryGuid);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse> GetPocketQueryZippedFileAsync(string accessToken, System.Guid pocketQueryGuid) {
            return base.Channel.GetPocketQueryZippedFileAsync(accessToken, pocketQueryGuid);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTrackingNumber(string accessToken, string trackingNumber, int trackableLogCount) {
            return base.Channel.GetTrackablesByTrackingNumber(accessToken, trackingNumber, trackableLogCount);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTrackingNumberAsync(string accessToken, string trackingNumber, int trackableLogCount) {
            return base.Channel.GetTrackablesByTrackingNumberAsync(accessToken, trackingNumber, trackableLogCount);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTBCode(string accessToken, string tbCode, int trackableLogCount) {
            return base.Channel.GetTrackablesByTBCode(accessToken, tbCode, trackableLogCount);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTBCodeAsync(string accessToken, string tbCode, int trackableLogCount) {
            return base.Channel.GetTrackablesByTBCodeAsync(accessToken, tbCode, trackableLogCount);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesInCache(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount) {
            return base.Channel.GetTrackablesInCache(accessToken, cacheCode, startIndex, maxPerPage, trackableLogCount);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesInCacheAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount) {
            return base.Channel.GetTrackablesInCacheAsync(accessToken, cacheCode, startIndex, maxPerPage, trackableLogCount);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableTravelResponse GetTrackableTravelList(string accessToken, string tbCode) {
            return base.Channel.GetTrackableTravelList(accessToken, tbCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableTravelResponse> GetTrackableTravelListAsync(string accessToken, string tbCode) {
            return base.Channel.GetTrackableTravelListAsync(accessToken, tbCode);
        }
        
        public WinCachebox.ServiceReference1.GetAttributeTypesDataResponse GetAttributeTypesData(string accessToken) {
            return base.Channel.GetAttributeTypesData(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAttributeTypesDataResponse> GetAttributeTypesDataAsync(string accessToken) {
            return base.Channel.GetAttributeTypesDataAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetUserCredentialsResponse GetUserCredentials(string consumerKey, System.Guid licenseGuid, string username, string password) {
            return base.Channel.GetUserCredentials(consumerKey, licenseGuid, username, password);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCredentialsResponse> GetUserCredentialsAsync(string consumerKey, System.Guid licenseGuid, string username, string password) {
            return base.Channel.GetUserCredentialsAsync(consumerKey, licenseGuid, username, password);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse DeleteCacheNote(string accessToken, string cacheCode) {
            return base.Channel.DeleteCacheNote(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteCacheNoteAsync(string accessToken, string cacheCode) {
            return base.Channel.DeleteCacheNoteAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheLogResponse GetGeocacheLogsByCacheCode(string accessToken, string cacheCode, int startIndex, int maxPerPage) {
            return base.Channel.GetGeocacheLogsByCacheCode(accessToken, cacheCode, startIndex, maxPerPage);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetGeocacheLogsByCacheCodeAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage) {
            return base.Channel.GetGeocacheLogsByCacheCodeAsync(accessToken, cacheCode, startIndex, maxPerPage);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableLogsResponse GetTrackableLogsByTBCode(string accessToken, string tbCode, int startIndex, int maxPerPage) {
            return base.Channel.GetTrackableLogsByTBCode(accessToken, tbCode, startIndex, maxPerPage);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableLogsResponse> GetTrackableLogsByTBCodeAsync(string accessToken, string tbCode, int startIndex, int maxPerPage) {
            return base.Channel.GetTrackableLogsByTBCodeAsync(accessToken, tbCode, startIndex, maxPerPage);
        }
        
        public WinCachebox.ServiceReference1.GetUsersCacheNotesResponse GetUsersCacheNotes(string accessToken, int startIndex, int maxPerPage) {
            return base.Channel.GetUsersCacheNotes(accessToken, startIndex, maxPerPage);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersCacheNotesResponse> GetUsersCacheNotesAsync(string accessToken, int startIndex, int maxPerPage) {
            return base.Channel.GetUsersCacheNotesAsync(accessToken, startIndex, maxPerPage);
        }
        
        public WinCachebox.ServiceReference1.GetUserWaypointsResponse GetUserWaypoints(string accessToken, string cacheCode) {
            return base.Channel.GetUserWaypoints(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserWaypointsResponse> GetUserWaypointsAsync(string accessToken, string cacheCode) {
            return base.Channel.GetUserWaypointsAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse DeleteUserWaypoint(string accessToken, long waypointID) {
            return base.Channel.DeleteUserWaypoint(accessToken, waypointID);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteUserWaypointAsync(string accessToken, long waypointID) {
            return base.Channel.DeleteUserWaypointAsync(accessToken, waypointID);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetCacheByTileGuid(string accessToken, string tileGuid) {
            return base.Channel.GetCacheByTileGuid(accessToken, tileGuid);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetCacheByTileGuidAsync(string accessToken, string tileGuid) {
            return base.Channel.GetCacheByTileGuidAsync(accessToken, tileGuid);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IGeocachingMobile")]
    public interface IGeocachingMobile {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddFavoritePointToCache", ReplyAction="http://tempuri.org/ILive/AddFavoritePointToCacheResponse")]
        WinCachebox.ServiceReference1.FavoritePointsSummaryResponse AddFavoritePointToCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddFavoritePointToCache", ReplyAction="http://tempuri.org/ILive/AddFavoritePointToCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> AddFavoritePointToCacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RemoveFavoritePointFromCache", ReplyAction="http://tempuri.org/ILive/RemoveFavoritePointFromCacheResponse")]
        WinCachebox.ServiceReference1.FavoritePointsSummaryResponse RemoveFavoritePointFromCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RemoveFavoritePointFromCache", ReplyAction="http://tempuri.org/ILive/RemoveFavoritePointFromCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> RemoveFavoritePointFromCacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersFavoritePoints", ReplyAction="http://tempuri.org/ILive/GetUsersFavoritePointsResponse")]
        WinCachebox.ServiceReference1.GetUserFavoritePointsResponse GetUsersFavoritePoints(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersFavoritePoints", ReplyAction="http://tempuri.org/ILive/GetUsersFavoritePointsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserFavoritePointsResponse> GetUsersFavoritePointsAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersWhoFavoritedCache", ReplyAction="http://tempuri.org/ILive/GetUsersWhoFavoritedCacheResponse")]
        WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse GetUsersWhoFavoritedCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersWhoFavoritedCache", ReplyAction="http://tempuri.org/ILive/GetUsersWhoFavoritedCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse> GetUsersWhoFavoritedCacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheIdsFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCacheIdsFavoritedByUserResponse")]
        WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse GetCacheIdsFavoritedByUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheIdsFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCacheIdsFavoritedByUserResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse> GetCacheIdsFavoritedByUserAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCachesFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCachesFavoritedByUserResponse")]
        WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse GetCachesFavoritedByUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCachesFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCachesFavoritedByUserResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse> GetCachesFavoritedByUserAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsForUser", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsForUserResponse")]
        WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsForUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsForUser", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsForUserResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsForUserAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsByUserID", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsByUserIDResponse")]
        WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsByUserID(string accessToken, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsByUserID", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsByUserIDResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsByUserIDAsync(string accessToken, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GeocodeString", ReplyAction="http://tempuri.org/ILive/GeocodeStringResponse")]
        WinCachebox.ServiceReference1.GetGeocodeResponse GeocodeString(WinCachebox.ServiceReference1.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GeocodeString", ReplyAction="http://tempuri.org/ILive/GeocodeStringResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocodeResponse> GeocodeStringAsync(WinCachebox.ServiceReference1.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/WindowsPhoneTileSearch", ReplyAction="http://tempuri.org/ILive/WindowsPhoneTileSearchResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse WindowsPhoneTileSearch(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/WindowsPhoneTileSearch", ReplyAction="http://tempuri.org/ILive/WindowsPhoneTileSearchResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> WindowsPhoneTileSearchAsync(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RegisterWP7DeviceTile", ReplyAction="http://tempuri.org/ILive/RegisterWP7DeviceTileResponse")]
        WinCachebox.ServiceReference1.StatusResponse RegisterWP7DeviceTile(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RegisterWP7DeviceTile", ReplyAction="http://tempuri.org/ILive/RegisterWP7DeviceTileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> RegisterWP7DeviceTileAsync(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheCounts", ReplyAction="http://tempuri.org/ILive/GetUsersCacheCountsResponse")]
        WinCachebox.ServiceReference1.GetUserCacheCountsResponse GetUsersCacheCounts(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheCounts", ReplyAction="http://tempuri.org/ILive/GetUsersCacheCountsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCacheCountsResponse> GetUsersCacheCountsAsync(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersTrackables", ReplyAction="http://tempuri.org/ILive/GetUsersTrackablesResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetUsersTrackables(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersTrackables", ReplyAction="http://tempuri.org/ILive/GetUsersTrackablesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetUsersTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetOwnedTrackables", ReplyAction="http://tempuri.org/ILive/GetOwnedTrackablesResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetOwnedTrackables(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetOwnedTrackables", ReplyAction="http://tempuri.org/ILive/GetOwnedTrackablesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetOwnedTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserGallery", ReplyAction="http://tempuri.org/ILive/GetUserGalleryResponse")]
        WinCachebox.ServiceReference1.GetUserGalleryResponse GetUserGallery(WinCachebox.ServiceReference1.GetUserGalleryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserGallery", ReplyAction="http://tempuri.org/ILive/GetUserGalleryResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserGalleryResponse> GetUserGalleryAsync(WinCachebox.ServiceReference1.GetUserGalleryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SaveUserWaypoint", ReplyAction="http://tempuri.org/ILive/SaveUserWaypointResponse")]
        WinCachebox.ServiceReference1.SaveUserWaypointResponse SaveUserWaypoint(WinCachebox.ServiceReference1.SaveUserWaypointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SaveUserWaypoint", ReplyAction="http://tempuri.org/ILive/SaveUserWaypointResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SaveUserWaypointResponse> SaveUserWaypointAsync(WinCachebox.ServiceReference1.SaveUserWaypointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersGeocacheLogs", ReplyAction="http://tempuri.org/ILive/GetUsersGeocacheLogsResponse")]
        WinCachebox.ServiceReference1.GetGeocacheLogResponse GetUsersGeocacheLogs(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersGeocacheLogs", ReplyAction="http://tempuri.org/ILive/GetUsersGeocacheLogsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetUsersGeocacheLogsAsync(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMoreGeocaches", ReplyAction="http://tempuri.org/ILive/GetMoreGeocachesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetMoreGeocaches(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMoreGeocaches", ReplyAction="http://tempuri.org/ILive/GetMoreGeocachesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetMoreGeocachesAsync(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForGeocaches", ReplyAction="http://tempuri.org/ILive/SearchForGeocachesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse SearchForGeocaches(WinCachebox.ServiceReference1.SearchForGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForGeocaches", ReplyAction="http://tempuri.org/ILive/SearchForGeocachesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> SearchForGeocachesAsync(WinCachebox.ServiceReference1.SearchForGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAnotherUsersProfile", ReplyAction="http://tempuri.org/ILive/GetAnotherUsersProfileResponse")]
        WinCachebox.ServiceReference1.GetUserProfileResponse GetAnotherUsersProfile(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAnotherUsersProfile", ReplyAction="http://tempuri.org/ILive/GetAnotherUsersProfileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserProfileResponse> GetAnotherUsersProfileAsync(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateFieldNoteAndPublish", ReplyAction="http://tempuri.org/ILive/CreateFieldNoteAndPublishResponse")]
        WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse CreateFieldNoteAndPublish(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateFieldNoteAndPublish", ReplyAction="http://tempuri.org/ILive/CreateFieldNoteAndPublishResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse> CreateFieldNoteAndPublishAsync(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuid", ReplyAction="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuidResponse")]
        WinCachebox.ServiceReference1.SouvenirResponse SearchForSouvenirsByPublicGuid(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuid", ReplyAction="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuidResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SouvenirResponse> SearchForSouvenirsByPublicGuidAsync(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UpdateCacheNote", ReplyAction="http://tempuri.org/ILive/UpdateCacheNoteResponse")]
        WinCachebox.ServiceReference1.StatusResponse UpdateCacheNote(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UpdateCacheNote", ReplyAction="http://tempuri.org/ILive/UpdateCacheNoteResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> UpdateCacheNoteAsync(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetYourUserProfile", ReplyAction="http://tempuri.org/ILive/GetYourUserProfileResponse")]
        WinCachebox.ServiceReference1.GetYourUserProfileResponse GetYourUserProfile(WinCachebox.ServiceReference1.GetYourUserProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetYourUserProfile", ReplyAction="http://tempuri.org/ILive/GetYourUserProfileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetYourUserProfileResponse> GetYourUserProfileAsync(WinCachebox.ServiceReference1.GetYourUserProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToGeocacheLog", ReplyAction="http://tempuri.org/ILive/UploadImageToGeocacheLogResponse")]
        WinCachebox.ServiceReference1.UploadImageResponse UploadImageToGeocacheLog(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToGeocacheLog", ReplyAction="http://tempuri.org/ILive/UploadImageToGeocacheLogResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToGeocacheLogAsync(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateTrackableLog", ReplyAction="http://tempuri.org/ILive/CreateTrackableLogResponse")]
        WinCachebox.ServiceReference1.CreateTrackableLogResponse CreateTrackableLog(WinCachebox.ServiceReference1.CreateTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateTrackableLog", ReplyAction="http://tempuri.org/ILive/CreateTrackableLogResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateTrackableLogResponse> CreateTrackableLogAsync(WinCachebox.ServiceReference1.CreateTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToTrackableLog", ReplyAction="http://tempuri.org/ILive/UploadImageToTrackableLogResponse")]
        WinCachebox.ServiceReference1.UploadImageResponse UploadImageToTrackableLog(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToTrackableLog", ReplyAction="http://tempuri.org/ILive/UploadImageToTrackableLogResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToTrackableLogAsync(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListByGuid", ReplyAction="http://tempuri.org/ILive/GetBookmarkListByGuidResponse")]
        WinCachebox.ServiceReference1.GetBookmarkListResponse GetBookmarkListByGuid(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListByGuid", ReplyAction="http://tempuri.org/ILive/GetBookmarkListByGuidResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListResponse> GetBookmarkListByGuidAsync(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddGeocachesToBookmarkList", ReplyAction="http://tempuri.org/ILive/AddGeocachesToBookmarkListResponse")]
        WinCachebox.ServiceReference1.StatusResponse AddGeocachesToBookmarkList(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddGeocachesToBookmarkList", ReplyAction="http://tempuri.org/ILive/AddGeocachesToBookmarkListResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> AddGeocachesToBookmarkListAsync(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheStatus", ReplyAction="http://tempuri.org/ILive/GetGeocacheStatusResponse")]
        WinCachebox.ServiceReference1.GetGeocacheStatusResponse GetGeocacheStatus(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheStatus", ReplyAction="http://tempuri.org/ILive/GetGeocacheStatusResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheStatusResponse> GetGeocacheStatusAsync(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMembershipTypes", ReplyAction="http://tempuri.org/ILive/GetMembershipTypesResponse")]
        WinCachebox.ServiceReference1.GetMembershipTypesResponse GetMembershipTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMembershipTypes", ReplyAction="http://tempuri.org/ILive/GetMembershipTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetMembershipTypesResponse> GetMembershipTypesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAPILimits", ReplyAction="http://tempuri.org/ILive/GetAPILimitsResponse")]
        WinCachebox.ServiceReference1.GetAPILimitsResponse GetAPILimits(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAPILimits", ReplyAction="http://tempuri.org/ILive/GetAPILimitsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAPILimitsResponse> GetAPILimitsAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetSiteStats", ReplyAction="http://tempuri.org/ILive/GetSiteStatsResponse")]
        WinCachebox.ServiceReference1.GetSiteStatsResponse GetSiteStats(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetSiteStats", ReplyAction="http://tempuri.org/ILive/GetSiteStatsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetSiteStatsResponse> GetSiteStatsAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetStatusMessages", ReplyAction="http://tempuri.org/ILive/GetStatusMessagesResponse")]
        WinCachebox.ServiceReference1.GetStatusMessageResponse GetStatusMessages(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetStatusMessages", ReplyAction="http://tempuri.org/ILive/GetStatusMessagesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetStatusMessageResponse> GetStatusMessagesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetImagesForGeocache", ReplyAction="http://tempuri.org/ILive/GetImagesForGeocacheResponse")]
        WinCachebox.ServiceReference1.GetImagesForGeocacheResponse GetImagesForGeocache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetImagesForGeocache", ReplyAction="http://tempuri.org/ILive/GetImagesForGeocacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetImagesForGeocacheResponse> GetImagesForGeocacheAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetWptLogTypes", ReplyAction="http://tempuri.org/ILive/GetWptLogTypesResponse")]
        WinCachebox.ServiceReference1.GetWptLogTypesResponse GetWptLogTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetWptLogTypes", ReplyAction="http://tempuri.org/ILive/GetWptLogTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetWptLogTypesResponse> GetWptLogTypesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheTypesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheTypesResponse GetGeocacheTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheTypesResponse> GetGeocacheTypesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheDataTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheDataTypesResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse GetGeocacheDataTypes(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheDataTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheDataTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse> GetGeocacheDataTypesAsync(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryList", ReplyAction="http://tempuri.org/ILive/GetPocketQueryListResponse")]
        WinCachebox.ServiceReference1.GetPocketQueryListResponse GetPocketQueryList(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryList", ReplyAction="http://tempuri.org/ILive/GetPocketQueryListResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryListResponse> GetPocketQueryListAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetPocketQueryDataResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetPocketQueryDataResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetFullPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetFullPocketQueryDataResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetFullPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetFullPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetFullPocketQueryDataResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetFullPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryZippedFile", ReplyAction="http://tempuri.org/ILive/GetPocketQueryZippedFileResponse")]
        WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse GetPocketQueryZippedFile(string accessToken, System.Guid pocketQueryGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryZippedFile", ReplyAction="http://tempuri.org/ILive/GetPocketQueryZippedFileResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse> GetPocketQueryZippedFileAsync(string accessToken, System.Guid pocketQueryGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTrackingNumber", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTrackingNumberResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTrackingNumber(string accessToken, string trackingNumber, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTrackingNumber", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTrackingNumberResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTrackingNumberAsync(string accessToken, string trackingNumber, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTBCodeResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTBCode(string accessToken, string tbCode, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTBCodeResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTBCodeAsync(string accessToken, string tbCode, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesInCache", ReplyAction="http://tempuri.org/ILive/GetTrackablesInCacheResponse")]
        WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesInCache(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesInCache", ReplyAction="http://tempuri.org/ILive/GetTrackablesInCacheResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesInCacheAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableTravelList", ReplyAction="http://tempuri.org/ILive/GetTrackableTravelListResponse")]
        WinCachebox.ServiceReference1.GetTrackableTravelResponse GetTrackableTravelList(string accessToken, string tbCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableTravelList", ReplyAction="http://tempuri.org/ILive/GetTrackableTravelListResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableTravelResponse> GetTrackableTravelListAsync(string accessToken, string tbCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAttributeTypesData", ReplyAction="http://tempuri.org/ILive/GetAttributeTypesDataResponse")]
        WinCachebox.ServiceReference1.GetAttributeTypesDataResponse GetAttributeTypesData(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAttributeTypesData", ReplyAction="http://tempuri.org/ILive/GetAttributeTypesDataResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAttributeTypesDataResponse> GetAttributeTypesDataAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserCredentials", ReplyAction="http://tempuri.org/ILive/GetUserCredentialsResponse")]
        WinCachebox.ServiceReference1.GetUserCredentialsResponse GetUserCredentials(string consumerKey, System.Guid licenseGuid, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserCredentials", ReplyAction="http://tempuri.org/ILive/GetUserCredentialsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCredentialsResponse> GetUserCredentialsAsync(string consumerKey, System.Guid licenseGuid, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteCacheNote", ReplyAction="http://tempuri.org/ILive/DeleteCacheNoteResponse")]
        WinCachebox.ServiceReference1.StatusResponse DeleteCacheNote(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteCacheNote", ReplyAction="http://tempuri.org/ILive/DeleteCacheNoteResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteCacheNoteAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheLogsByCacheCode", ReplyAction="http://tempuri.org/ILive/GetGeocacheLogsByCacheCodeResponse")]
        WinCachebox.ServiceReference1.GetGeocacheLogResponse GetGeocacheLogsByCacheCode(string accessToken, string cacheCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheLogsByCacheCode", ReplyAction="http://tempuri.org/ILive/GetGeocacheLogsByCacheCodeResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetGeocacheLogsByCacheCodeAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableLogsByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackableLogsByTBCodeResponse")]
        WinCachebox.ServiceReference1.GetTrackableLogsResponse GetTrackableLogsByTBCode(string accessToken, string tbCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableLogsByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackableLogsByTBCodeResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableLogsResponse> GetTrackableLogsByTBCodeAsync(string accessToken, string tbCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheNotes", ReplyAction="http://tempuri.org/ILive/GetUsersCacheNotesResponse")]
        WinCachebox.ServiceReference1.GetUsersCacheNotesResponse GetUsersCacheNotes(string accessToken, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheNotes", ReplyAction="http://tempuri.org/ILive/GetUsersCacheNotesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersCacheNotesResponse> GetUsersCacheNotesAsync(string accessToken, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserWaypoints", ReplyAction="http://tempuri.org/ILive/GetUserWaypointsResponse")]
        WinCachebox.ServiceReference1.GetUserWaypointsResponse GetUserWaypoints(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserWaypoints", ReplyAction="http://tempuri.org/ILive/GetUserWaypointsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserWaypointsResponse> GetUserWaypointsAsync(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteUserWaypoint", ReplyAction="http://tempuri.org/ILive/DeleteUserWaypointResponse")]
        WinCachebox.ServiceReference1.StatusResponse DeleteUserWaypoint(string accessToken, long waypointID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteUserWaypoint", ReplyAction="http://tempuri.org/ILive/DeleteUserWaypointResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteUserWaypointAsync(string accessToken, long waypointID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheByTileGuid", ReplyAction="http://tempuri.org/ILive/GetCacheByTileGuidResponse")]
        WinCachebox.ServiceReference1.GetGeocacheDataResponse GetCacheByTileGuid(string accessToken, string tileGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheByTileGuid", ReplyAction="http://tempuri.org/ILive/GetCacheByTileGuidResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetCacheByTileGuidAsync(string accessToken, string tileGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/Ping", ReplyAction="http://tempuri.org/ILive/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/Ping", ReplyAction="http://tempuri.org/ILive/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/AddAdventureHistoryItem", ReplyAction="http://tempuri.org/IGeocachingMobile/AddAdventureHistoryItemResponse")]
        WinCachebox.ServiceReference1.AddAdventureHistoryItemResponse AddAdventureHistoryItem(WinCachebox.ServiceReference1.AddAdventureHistoryItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/AddAdventureHistoryItem", ReplyAction="http://tempuri.org/IGeocachingMobile/AddAdventureHistoryItemResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AddAdventureHistoryItemResponse> AddAdventureHistoryItemAsync(WinCachebox.ServiceReference1.AddAdventureHistoryItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/DeleteLabCountItem", ReplyAction="http://tempuri.org/IGeocachingMobile/DeleteLabCountItemResponse")]
        WinCachebox.ServiceReference1.DeleteLabCountItemResponse DeleteLabCountItem(WinCachebox.ServiceReference1.DeleteLabCountItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/DeleteLabCountItem", ReplyAction="http://tempuri.org/IGeocachingMobile/DeleteLabCountItemResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.DeleteLabCountItemResponse> DeleteLabCountItemAsync(WinCachebox.ServiceReference1.DeleteLabCountItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetBeginnerCaches", ReplyAction="http://tempuri.org/IGeocachingMobile/GetBeginnerCachesResponse")]
        WinCachebox.ServiceReference1.GetBeginnerGeocacheDataResponse GetBeginnerCaches(WinCachebox.ServiceReference1.GetBeginnerCachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetBeginnerCaches", ReplyAction="http://tempuri.org/IGeocachingMobile/GetBeginnerCachesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBeginnerGeocacheDataResponse> GetBeginnerCachesAsync(WinCachebox.ServiceReference1.GetBeginnerCachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetUserFindCounts", ReplyAction="http://tempuri.org/IGeocachingMobile/GetUserFindCountsResponse")]
        WinCachebox.ServiceReference1.GetUserFindCountsResponse GetUserFindCounts(WinCachebox.ServiceReference1.GetUserFindCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetUserFindCounts", ReplyAction="http://tempuri.org/IGeocachingMobile/GetUserFindCountsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserFindCountsResponse> GetUserFindCountsAsync(WinCachebox.ServiceReference1.GetUserFindCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetRegions", ReplyAction="http://tempuri.org/IGeocachingMobile/GetRegionsResponse")]
        WinCachebox.ServiceReference1.GetRegionsResponse GetRegions(WinCachebox.ServiceReference1.GetRegionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetRegions", ReplyAction="http://tempuri.org/IGeocachingMobile/GetRegionsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetRegionsResponse> GetRegionsAsync(WinCachebox.ServiceReference1.GetRegionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetCountries", ReplyAction="http://tempuri.org/IGeocachingMobile/GetCountriesResponse")]
        WinCachebox.ServiceReference1.GetCountriesResponse GetCountries(WinCachebox.ServiceReference1.GetCountriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetCountries", ReplyAction="http://tempuri.org/IGeocachingMobile/GetCountriesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCountriesResponse> GetCountriesAsync(WinCachebox.ServiceReference1.GetCountriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocachesFromPocketQuery", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocachesFromPocketQueryResponse")]
        WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryResponse GetGeocachesFromPocketQuery(WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocachesFromPocketQuery", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocachesFromPocketQueryResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryResponse> GetGeocachesFromPocketQueryAsync(WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocacheContainerTypes", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocacheContainerTypesResponse")]
        WinCachebox.ServiceReference1.GetContainerTypesResponse GetGeocacheContainerTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocacheContainerTypes", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocacheContainerTypesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetContainerTypesResponse> GetGeocacheContainerTypesAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetUserHideCounts", ReplyAction="http://tempuri.org/IGeocachingMobile/GetUserHideCountsResponse")]
        WinCachebox.ServiceReference1.GetUserHideCountsResponse GetUserHideCounts(WinCachebox.ServiceReference1.GetUserHideCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetUserHideCounts", ReplyAction="http://tempuri.org/IGeocachingMobile/GetUserHideCountsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserHideCountsResponse> GetUserHideCountsAsync(WinCachebox.ServiceReference1.GetUserHideCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocacheHealth", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocacheHealthResponse")]
        WinCachebox.ServiceReference1.GetGeocacheHealthResponse GetGeocacheHealth(WinCachebox.ServiceReference1.GetGeocacheHealthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocacheHealth", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocacheHealthResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheHealthResponse> GetGeocacheHealthAsync(WinCachebox.ServiceReference1.GetGeocacheHealthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetLatestGeocacheHealthNotification", ReplyAction="http://tempuri.org/IGeocachingMobile/GetLatestGeocacheHealthNotificationResponse")]
        WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationResponse GetLatestGeocacheHealthNotification(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetLatestGeocacheHealthNotification", ReplyAction="http://tempuri.org/IGeocachingMobile/GetLatestGeocacheHealthNotificationResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationResponse> GetLatestGeocacheHealthNotificationAsync(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetActiveGeocacheHealthNotification", ReplyAction="http://tempuri.org/IGeocachingMobile/GetActiveGeocacheHealthNotificationResponse")]
        WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationResponse GetActiveGeocacheHealthNotification(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetActiveGeocacheHealthNotification", ReplyAction="http://tempuri.org/IGeocachingMobile/GetActiveGeocacheHealthNotificationResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationResponse> GetActiveGeocacheHealthNotificationAsync(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocacheHealthNotificationHistory", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocacheHealthNotificationHistoryResponse" +
            "")]
        WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryResponse GetGeocacheHealthNotificationHistory(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGeocacheHealthNotificationHistory", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGeocacheHealthNotificationHistoryResponse" +
            "")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryResponse> GetGeocacheHealthNotificationHistoryAsync(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetNearbyCacheStats", ReplyAction="http://tempuri.org/IGeocachingMobile/GetNearbyCacheStatsResponse")]
        WinCachebox.ServiceReference1.GetNearbyCacheStatsResponse GetNearbyCacheStats(WinCachebox.ServiceReference1.GetNearbyCacheStatsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetNearbyCacheStats", ReplyAction="http://tempuri.org/IGeocachingMobile/GetNearbyCacheStatsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetNearbyCacheStatsResponse> GetNearbyCacheStatsAsync(WinCachebox.ServiceReference1.GetNearbyCacheStatsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetPrecomputedNearbyCacheStats", ReplyAction="http://tempuri.org/IGeocachingMobile/GetPrecomputedNearbyCacheStatsResponse")]
        WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsResponse GetPrecomputedNearbyCacheStats(WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetPrecomputedNearbyCacheStats", ReplyAction="http://tempuri.org/IGeocachingMobile/GetPrecomputedNearbyCacheStatsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsResponse> GetPrecomputedNearbyCacheStatsAsync(WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetUserAvatarImage", ReplyAction="http://tempuri.org/IGeocachingMobile/SetUserAvatarImageResponse")]
        WinCachebox.ServiceReference1.SetUserAvatarImageResponse SetUserAvatarImage(WinCachebox.ServiceReference1.SetUserAvatarImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetUserAvatarImage", ReplyAction="http://tempuri.org/IGeocachingMobile/SetUserAvatarImageResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SetUserAvatarImageResponse> SetUserAvatarImageAsync(WinCachebox.ServiceReference1.SetUserAvatarImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/DisableAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/DisableAccountResponse")]
        WinCachebox.ServiceReference1.DisableAccountResponse DisableAccount(WinCachebox.ServiceReference1.DisableAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/DisableAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/DisableAccountResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.DisableAccountResponse> DisableAccountAsync(WinCachebox.ServiceReference1.DisableAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/AuthorizeAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/AuthorizeAccountResponse")]
        WinCachebox.ServiceReference1.AuthorizeAccountResponse AuthorizeAccount(WinCachebox.ServiceReference1.AuthorizeAccountRequest authorizeAccountRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/AuthorizeAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/AuthorizeAccountResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AuthorizeAccountResponse> AuthorizeAccountAsync(WinCachebox.ServiceReference1.AuthorizeAccountRequest authorizeAccountRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/CreateForSocialMedia", ReplyAction="http://tempuri.org/IGeocachingMobile/CreateForSocialMediaResponse")]
        WinCachebox.ServiceReference1.CreateAccountPublicResponse CreateForSocialMedia(WinCachebox.ServiceReference1.SocialMediaAccountCreateRequestPublic socialMediaAccountCreateRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/CreateForSocialMedia", ReplyAction="http://tempuri.org/IGeocachingMobile/CreateForSocialMediaResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateAccountPublicResponse> CreateForSocialMediaAsync(WinCachebox.ServiceReference1.SocialMediaAccountCreateRequestPublic socialMediaAccountCreateRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaLinkAccounts", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaLinkAccountsResponse")]
        WinCachebox.ServiceReference1.SocialMediaLinkAccountsResponse SocialMediaLinkAccounts(WinCachebox.ServiceReference1.SocialMediaLinkAccountsRequestPublic socialMediaLinkAccountsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaLinkAccounts", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaLinkAccountsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaLinkAccountsResponse> SocialMediaLinkAccountsAsync(WinCachebox.ServiceReference1.SocialMediaLinkAccountsRequestPublic socialMediaLinkAccountsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaRevokeAccess", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaRevokeAccessResponse")]
        WinCachebox.ServiceReference1.SocialMediaRevokeAccessResponse SocialMediaRevokeAccess(WinCachebox.ServiceReference1.SocialMediaRevokeAccessRequestPublic socialMediaRevokeAccessRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaRevokeAccess", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaRevokeAccessResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaRevokeAccessResponse> SocialMediaRevokeAccessAsync(WinCachebox.ServiceReference1.SocialMediaRevokeAccessRequestPublic socialMediaRevokeAccessRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaUpdateStatus", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaUpdateStatusResponse")]
        WinCachebox.ServiceReference1.SocialMediaUpdateStatusResponse SocialMediaUpdateStatus(WinCachebox.ServiceReference1.SocialMediaUpdateStatusRequestPublic socialMediaUpdateStatusRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaUpdateStatus", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaUpdateStatusResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaUpdateStatusResponse> SocialMediaUpdateStatusAsync(WinCachebox.ServiceReference1.SocialMediaUpdateStatusRequestPublic socialMediaUpdateStatusRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAccountLinked", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAccountLinkedResponse")]
        WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedResponse SocialMediaVerifyAccountLinked(WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedRequestPublic socialMediaVerifyAccountLinkedRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAccountLinked", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAccountLinkedResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedResponse> SocialMediaVerifyAccountLinkedAsync(WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedRequestPublic socialMediaVerifyAccountLinkedRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAllLinkedAccounts", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAllLinkedAccountsResponse")]
        WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsResponse SocialMediaVerifyAllLinkedAccounts(WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsRequestPublic socialMediaVerifyAllLinkedAccountsRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAllLinkedAccounts", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaVerifyAllLinkedAccountsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsResponse> SocialMediaVerifyAllLinkedAccountsAsync(WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsRequestPublic socialMediaVerifyAllLinkedAccountsRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/UserChangePassword", ReplyAction="http://tempuri.org/IGeocachingMobile/UserChangePasswordResponse")]
        WinCachebox.ServiceReference1.PasswordResponse UserChangePassword(WinCachebox.ServiceReference1.UserChangePasswordRequestPublic userChangePasswordRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/UserChangePassword", ReplyAction="http://tempuri.org/IGeocachingMobile/UserChangePasswordResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.PasswordResponse> UserChangePasswordAsync(WinCachebox.ServiceReference1.UserChangePasswordRequestPublic userChangePasswordRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/Login", ReplyAction="http://tempuri.org/IGeocachingMobile/LoginResponse")]
        WinCachebox.ServiceReference1.LoginResponsePublic Login(WinCachebox.ServiceReference1.LoginRequestPublic loginRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/Login", ReplyAction="http://tempuri.org/IGeocachingMobile/LoginResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.LoginResponsePublic> LoginAsync(WinCachebox.ServiceReference1.LoginRequestPublic loginRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/GetAccountResponse")]
        WinCachebox.ServiceReference1.GetAccountResponse GetAccount(WinCachebox.ServiceReference1.GetAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/GetAccountResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAccountResponse> GetAccountAsync(WinCachebox.ServiceReference1.GetAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetAccounts", ReplyAction="http://tempuri.org/IGeocachingMobile/GetAccountsResponse")]
        WinCachebox.ServiceReference1.GetAccountsResponse GetAccounts(WinCachebox.ServiceReference1.GetAccountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetAccounts", ReplyAction="http://tempuri.org/IGeocachingMobile/GetAccountsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAccountsResponse> GetAccountsAsync(WinCachebox.ServiceReference1.GetAccountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGroundspeakAccessToken", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGroundspeakAccessTokenResponse")]
        WinCachebox.ServiceReference1.AccessTokenResponse GetGroundspeakAccessToken(WinCachebox.ServiceReference1.GetAccessTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetGroundspeakAccessToken", ReplyAction="http://tempuri.org/IGeocachingMobile/GetGroundspeakAccessTokenResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccessTokenResponse> GetGroundspeakAccessTokenAsync(WinCachebox.ServiceReference1.GetAccessTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaLogin", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaLoginResponse")]
        WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic SocialMediaLogin(WinCachebox.ServiceReference1.SocialMediaLoginRequestPublic socialMediaLoginRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SocialMediaLogin", ReplyAction="http://tempuri.org/IGeocachingMobile/SocialMediaLoginResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic> SocialMediaLoginAsync(WinCachebox.ServiceReference1.SocialMediaLoginRequestPublic socialMediaLoginRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/IsUserNameValidAndAvailable", ReplyAction="http://tempuri.org/IGeocachingMobile/IsUserNameValidAndAvailableResponse")]
        WinCachebox.ServiceReference1.UsernameValidAndAvailableResponse IsUserNameValidAndAvailable(WinCachebox.ServiceReference1.IsUserNameValidAndAvailableRequestPublic isUserNameValidAndAvailableRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/IsUserNameValidAndAvailable", ReplyAction="http://tempuri.org/IGeocachingMobile/IsUserNameValidAndAvailableResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UsernameValidAndAvailableResponse> IsUserNameValidAndAvailableAsync(WinCachebox.ServiceReference1.IsUserNameValidAndAvailableRequestPublic isUserNameValidAndAvailableRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/CreateStandardAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/CreateStandardAccountResponse")]
        WinCachebox.ServiceReference1.CreateAccountPublicResponse CreateStandardAccount(WinCachebox.ServiceReference1.CreateStandardAccountRequestPublic createStandardAccountRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/CreateStandardAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/CreateStandardAccountResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateAccountPublicResponse> CreateStandardAccountAsync(WinCachebox.ServiceReference1.CreateStandardAccountRequestPublic createStandardAccountRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/RecoverPassword", ReplyAction="http://tempuri.org/IGeocachingMobile/RecoverPasswordResponse")]
        WinCachebox.ServiceReference1.StatusOnlyResponse RecoverPassword(WinCachebox.ServiceReference1.RecoverPasswordRequestPublic recoverPasswordRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/RecoverPassword", ReplyAction="http://tempuri.org/IGeocachingMobile/RecoverPasswordResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusOnlyResponse> RecoverPasswordAsync(WinCachebox.ServiceReference1.RecoverPasswordRequestPublic recoverPasswordRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetReferAFriendShortUrl", ReplyAction="http://tempuri.org/IGeocachingMobile/GetReferAFriendShortUrlResponse")]
        WinCachebox.ServiceReference1.GetReferAFriendShortUrlResponse GetReferAFriendShortUrl(WinCachebox.ServiceReference1.GetReferAFriendShortUrlRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetReferAFriendShortUrl", ReplyAction="http://tempuri.org/IGeocachingMobile/GetReferAFriendShortUrlResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetReferAFriendShortUrlResponse> GetReferAFriendShortUrlAsync(WinCachebox.ServiceReference1.GetReferAFriendShortUrlRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetAccountReferralStatistics", ReplyAction="http://tempuri.org/IGeocachingMobile/GetAccountReferralStatisticsResponse")]
        WinCachebox.ServiceReference1.GetAccountReferralStatisticsResponse GetAccountReferralStatistics(WinCachebox.ServiceReference1.GetAccountReferralStatisticsRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetAccountReferralStatistics", ReplyAction="http://tempuri.org/IGeocachingMobile/GetAccountReferralStatisticsResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAccountReferralStatisticsResponse> GetAccountReferralStatisticsAsync(WinCachebox.ServiceReference1.GetAccountReferralStatisticsRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SendReferAFriendEmail", ReplyAction="http://tempuri.org/IGeocachingMobile/SendReferAFriendEmailResponse")]
        WinCachebox.ServiceReference1.AccountResponse SendReferAFriendEmail(WinCachebox.ServiceReference1.ReferAFriendEmailRequestPublic referAFriendEmailRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SendReferAFriendEmail", ReplyAction="http://tempuri.org/IGeocachingMobile/SendReferAFriendEmailResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> SendReferAFriendEmailAsync(WinCachebox.ServiceReference1.ReferAFriendEmailRequestPublic referAFriendEmailRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SendValidationEmail", ReplyAction="http://tempuri.org/IGeocachingMobile/SendValidationEmailResponse")]
        WinCachebox.ServiceReference1.SendValidationEmailResponse SendValidationEmail(WinCachebox.ServiceReference1.SendValidationEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SendValidationEmail", ReplyAction="http://tempuri.org/IGeocachingMobile/SendValidationEmailResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SendValidationEmailResponse> SendValidationEmailAsync(WinCachebox.ServiceReference1.SendValidationEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/RecoverUsername", ReplyAction="http://tempuri.org/IGeocachingMobile/RecoverUsernameResponse")]
        WinCachebox.ServiceReference1.UserNameResponse RecoverUsername(WinCachebox.ServiceReference1.RecoverUsernameRequestPublic recoverUsernameRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/RecoverUsername", ReplyAction="http://tempuri.org/IGeocachingMobile/RecoverUsernameResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UserNameResponse> RecoverUsernameAsync(WinCachebox.ServiceReference1.RecoverUsernameRequestPublic recoverUsernameRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetLocale", ReplyAction="http://tempuri.org/IGeocachingMobile/SetLocaleResponse")]
        WinCachebox.ServiceReference1.SetLocaleResponse SetLocale(WinCachebox.ServiceReference1.SetLocaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetLocale", ReplyAction="http://tempuri.org/IGeocachingMobile/SetLocaleResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SetLocaleResponse> SetLocaleAsync(WinCachebox.ServiceReference1.SetLocaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetEmailPreferencesForAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/GetEmailPreferencesForAccountResponse")]
        WinCachebox.ServiceReference1.EmailPreferencesResponse GetEmailPreferencesForAccount(WinCachebox.ServiceReference1.GetEmailPreferencesForAccountRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetEmailPreferencesForAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/GetEmailPreferencesForAccountResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.EmailPreferencesResponse> GetEmailPreferencesForAccountAsync(WinCachebox.ServiceReference1.GetEmailPreferencesForAccountRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetEmailPreferences", ReplyAction="http://tempuri.org/IGeocachingMobile/GetEmailPreferencesResponse")]
        WinCachebox.ServiceReference1.EmailPreferencesResponse GetEmailPreferences(WinCachebox.ServiceReference1.GetEmailPreferencesRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/GetEmailPreferences", ReplyAction="http://tempuri.org/IGeocachingMobile/GetEmailPreferencesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.EmailPreferencesResponse> GetEmailPreferencesAsync(WinCachebox.ServiceReference1.GetEmailPreferencesRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/UpdateEmailPreferencesForAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/UpdateEmailPreferencesForAccountResponse")]
        WinCachebox.ServiceReference1.AccountResponse UpdateEmailPreferencesForAccount(WinCachebox.ServiceReference1.UpdateEmailPreferencesForAccountRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/UpdateEmailPreferencesForAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/UpdateEmailPreferencesForAccountResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> UpdateEmailPreferencesForAccountAsync(WinCachebox.ServiceReference1.UpdateEmailPreferencesForAccountRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/RemoveEmailPreferencesForAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/RemoveEmailPreferencesForAccountResponse")]
        WinCachebox.ServiceReference1.AccountResponse RemoveEmailPreferencesForAccount(WinCachebox.ServiceReference1.RemoveEmailPreferencesForAccountRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/RemoveEmailPreferencesForAccount", ReplyAction="http://tempuri.org/IGeocachingMobile/RemoveEmailPreferencesForAccountResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> RemoveEmailPreferencesForAccountAsync(WinCachebox.ServiceReference1.RemoveEmailPreferencesForAccountRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetAccountToValidated", ReplyAction="http://tempuri.org/IGeocachingMobile/SetAccountToValidatedResponse")]
        WinCachebox.ServiceReference1.SetAccountToValidatedResponse SetAccountToValidated(WinCachebox.ServiceReference1.SetAccountToValidatedRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetAccountToValidated", ReplyAction="http://tempuri.org/IGeocachingMobile/SetAccountToValidatedResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SetAccountToValidatedResponse> SetAccountToValidatedAsync(WinCachebox.ServiceReference1.SetAccountToValidatedRequestPublic request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetHomeCoordinates", ReplyAction="http://tempuri.org/IGeocachingMobile/SetHomeCoordinatesResponse")]
        WinCachebox.ServiceReference1.AccountResponse SetHomeCoordinates(WinCachebox.ServiceReference1.SetHomeCoordinatesRequestPublic setHomeCoordinatesRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/SetHomeCoordinates", ReplyAction="http://tempuri.org/IGeocachingMobile/SetHomeCoordinatesResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> SetHomeCoordinatesAsync(WinCachebox.ServiceReference1.SetHomeCoordinatesRequestPublic setHomeCoordinatesRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/IsEmailAddressInUse", ReplyAction="http://tempuri.org/IGeocachingMobile/IsEmailAddressInUseResponse")]
        WinCachebox.ServiceReference1.IsEmailAddressInUseResponse IsEmailAddressInUse(WinCachebox.ServiceReference1.IsEmailAddressInUseRequestPublic isEmailAddressInUseRequestPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocachingMobile/IsEmailAddressInUse", ReplyAction="http://tempuri.org/IGeocachingMobile/IsEmailAddressInUseResponse")]
        System.Threading.Tasks.Task<WinCachebox.ServiceReference1.IsEmailAddressInUseResponse> IsEmailAddressInUseAsync(WinCachebox.ServiceReference1.IsEmailAddressInUseRequestPublic isEmailAddressInUseRequestPublic);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeocachingMobileChannel : WinCachebox.ServiceReference1.IGeocachingMobile, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeocachingMobileClient : System.ServiceModel.ClientBase<WinCachebox.ServiceReference1.IGeocachingMobile>, WinCachebox.ServiceReference1.IGeocachingMobile {
        
        public GeocachingMobileClient() {
        }
        
        public GeocachingMobileClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeocachingMobileClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocachingMobileClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocachingMobileClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WinCachebox.ServiceReference1.FavoritePointsSummaryResponse AddFavoritePointToCache(string accessToken, string cacheCode) {
            return base.Channel.AddFavoritePointToCache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> AddFavoritePointToCacheAsync(string accessToken, string cacheCode) {
            return base.Channel.AddFavoritePointToCacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.FavoritePointsSummaryResponse RemoveFavoritePointFromCache(string accessToken, string cacheCode) {
            return base.Channel.RemoveFavoritePointFromCache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.FavoritePointsSummaryResponse> RemoveFavoritePointFromCacheAsync(string accessToken, string cacheCode) {
            return base.Channel.RemoveFavoritePointFromCacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetUserFavoritePointsResponse GetUsersFavoritePoints(string accessToken) {
            return base.Channel.GetUsersFavoritePoints(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserFavoritePointsResponse> GetUsersFavoritePointsAsync(string accessToken) {
            return base.Channel.GetUsersFavoritePointsAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse GetUsersWhoFavoritedCache(string accessToken, string cacheCode) {
            return base.Channel.GetUsersWhoFavoritedCache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersWhoFavoritedCacheResponse> GetUsersWhoFavoritedCacheAsync(string accessToken, string cacheCode) {
            return base.Channel.GetUsersWhoFavoritedCacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse GetCacheIdsFavoritedByUser(string accessToken) {
            return base.Channel.GetCacheIdsFavoritedByUser(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCacheIdsFavoritedByUserResponse> GetCacheIdsFavoritedByUserAsync(string accessToken) {
            return base.Channel.GetCacheIdsFavoritedByUserAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse GetCachesFavoritedByUser(string accessToken) {
            return base.Channel.GetCachesFavoritedByUser(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCachesFavoritedByUserResponse> GetCachesFavoritedByUserAsync(string accessToken) {
            return base.Channel.GetCachesFavoritedByUserAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsForUser(string accessToken) {
            return base.Channel.GetBookmarkListsForUser(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsForUserAsync(string accessToken) {
            return base.Channel.GetBookmarkListsForUserAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetBookmarkListsResponse GetBookmarkListsByUserID(string accessToken, long userID) {
            return base.Channel.GetBookmarkListsByUserID(accessToken, userID);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListsResponse> GetBookmarkListsByUserIDAsync(string accessToken, long userID) {
            return base.Channel.GetBookmarkListsByUserIDAsync(accessToken, userID);
        }
        
        public WinCachebox.ServiceReference1.GetGeocodeResponse GeocodeString(WinCachebox.ServiceReference1.GeocodeRequest request) {
            return base.Channel.GeocodeString(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocodeResponse> GeocodeStringAsync(WinCachebox.ServiceReference1.GeocodeRequest request) {
            return base.Channel.GeocodeStringAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse WindowsPhoneTileSearch(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request) {
            return base.Channel.WindowsPhoneTileSearch(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> WindowsPhoneTileSearchAsync(WinCachebox.ServiceReference1.WindowsPhoneTileSearchRequest request) {
            return base.Channel.WindowsPhoneTileSearchAsync(request);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse RegisterWP7DeviceTile(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request) {
            return base.Channel.RegisterWP7DeviceTile(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> RegisterWP7DeviceTileAsync(WinCachebox.ServiceReference1.RegisterWP7DeviceTileRequest request) {
            return base.Channel.RegisterWP7DeviceTileAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetUserCacheCountsResponse GetUsersCacheCounts(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request) {
            return base.Channel.GetUsersCacheCounts(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCacheCountsResponse> GetUsersCacheCountsAsync(WinCachebox.ServiceReference1.GetUsersCacheCountsRequest request) {
            return base.Channel.GetUsersCacheCountsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetUsersTrackables(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request) {
            return base.Channel.GetUsersTrackables(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetUsersTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByUserRequest request) {
            return base.Channel.GetUsersTrackablesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetOwnedTrackables(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request) {
            return base.Channel.GetOwnedTrackables(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetOwnedTrackablesAsync(WinCachebox.ServiceReference1.GetTrackablesByOwnerRequest request) {
            return base.Channel.GetOwnedTrackablesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetUserGalleryResponse GetUserGallery(WinCachebox.ServiceReference1.GetUserGalleryRequest request) {
            return base.Channel.GetUserGallery(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserGalleryResponse> GetUserGalleryAsync(WinCachebox.ServiceReference1.GetUserGalleryRequest request) {
            return base.Channel.GetUserGalleryAsync(request);
        }
        
        public WinCachebox.ServiceReference1.SaveUserWaypointResponse SaveUserWaypoint(WinCachebox.ServiceReference1.SaveUserWaypointRequest request) {
            return base.Channel.SaveUserWaypoint(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SaveUserWaypointResponse> SaveUserWaypointAsync(WinCachebox.ServiceReference1.SaveUserWaypointRequest request) {
            return base.Channel.SaveUserWaypointAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheLogResponse GetUsersGeocacheLogs(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request) {
            return base.Channel.GetUsersGeocacheLogs(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetUsersGeocacheLogsAsync(WinCachebox.ServiceReference1.GetUsersGeocacheLogsRequest request) {
            return base.Channel.GetUsersGeocacheLogsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetMoreGeocaches(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request) {
            return base.Channel.GetMoreGeocaches(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetMoreGeocachesAsync(WinCachebox.ServiceReference1.GetMoreGeocachesRequest request) {
            return base.Channel.GetMoreGeocachesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse SearchForGeocaches(WinCachebox.ServiceReference1.SearchForGeocachesRequest request) {
            return base.Channel.SearchForGeocaches(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> SearchForGeocachesAsync(WinCachebox.ServiceReference1.SearchForGeocachesRequest request) {
            return base.Channel.SearchForGeocachesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetUserProfileResponse GetAnotherUsersProfile(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request) {
            return base.Channel.GetAnotherUsersProfile(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserProfileResponse> GetAnotherUsersProfileAsync(WinCachebox.ServiceReference1.GetAnotherUsersProfileRequest request) {
            return base.Channel.GetAnotherUsersProfileAsync(request);
        }
        
        public WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse CreateFieldNoteAndPublish(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request) {
            return base.Channel.CreateFieldNoteAndPublish(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateFieldNoteAndPublishResponse> CreateFieldNoteAndPublishAsync(WinCachebox.ServiceReference1.CreateFieldNoteAndPublishRequest request) {
            return base.Channel.CreateFieldNoteAndPublishAsync(request);
        }
        
        public WinCachebox.ServiceReference1.SouvenirResponse SearchForSouvenirsByPublicGuid(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request) {
            return base.Channel.SearchForSouvenirsByPublicGuid(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SouvenirResponse> SearchForSouvenirsByPublicGuidAsync(WinCachebox.ServiceReference1.SearchForSouvenirsByPublicGuidRequest request) {
            return base.Channel.SearchForSouvenirsByPublicGuidAsync(request);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse UpdateCacheNote(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request) {
            return base.Channel.UpdateCacheNote(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> UpdateCacheNoteAsync(WinCachebox.ServiceReference1.UpdateCacheNoteRequest request) {
            return base.Channel.UpdateCacheNoteAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetYourUserProfileResponse GetYourUserProfile(WinCachebox.ServiceReference1.GetYourUserProfileRequest request) {
            return base.Channel.GetYourUserProfile(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetYourUserProfileResponse> GetYourUserProfileAsync(WinCachebox.ServiceReference1.GetYourUserProfileRequest request) {
            return base.Channel.GetYourUserProfileAsync(request);
        }
        
        public WinCachebox.ServiceReference1.UploadImageResponse UploadImageToGeocacheLog(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request) {
            return base.Channel.UploadImageToGeocacheLog(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToGeocacheLogAsync(WinCachebox.ServiceReference1.UploadImageToGeocacheLogRequest request) {
            return base.Channel.UploadImageToGeocacheLogAsync(request);
        }
        
        public WinCachebox.ServiceReference1.CreateTrackableLogResponse CreateTrackableLog(WinCachebox.ServiceReference1.CreateTrackableLogRequest request) {
            return base.Channel.CreateTrackableLog(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateTrackableLogResponse> CreateTrackableLogAsync(WinCachebox.ServiceReference1.CreateTrackableLogRequest request) {
            return base.Channel.CreateTrackableLogAsync(request);
        }
        
        public WinCachebox.ServiceReference1.UploadImageResponse UploadImageToTrackableLog(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request) {
            return base.Channel.UploadImageToTrackableLog(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UploadImageResponse> UploadImageToTrackableLogAsync(WinCachebox.ServiceReference1.UploadImageToTrackableLogRequest request) {
            return base.Channel.UploadImageToTrackableLogAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetBookmarkListResponse GetBookmarkListByGuid(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request) {
            return base.Channel.GetBookmarkListByGuid(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBookmarkListResponse> GetBookmarkListByGuidAsync(WinCachebox.ServiceReference1.GetBookmarkListByGuidRequest request) {
            return base.Channel.GetBookmarkListByGuidAsync(request);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse AddGeocachesToBookmarkList(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request) {
            return base.Channel.AddGeocachesToBookmarkList(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> AddGeocachesToBookmarkListAsync(WinCachebox.ServiceReference1.AddGeocachesToBookmarkListRequest request) {
            return base.Channel.AddGeocachesToBookmarkListAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheStatusResponse GetGeocacheStatus(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request) {
            return base.Channel.GetGeocacheStatus(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheStatusResponse> GetGeocacheStatusAsync(WinCachebox.ServiceReference1.GetGeocacheStatusRequest request) {
            return base.Channel.GetGeocacheStatusAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetMembershipTypesResponse GetMembershipTypes(string accessToken) {
            return base.Channel.GetMembershipTypes(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetMembershipTypesResponse> GetMembershipTypesAsync(string accessToken) {
            return base.Channel.GetMembershipTypesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetAPILimitsResponse GetAPILimits(string accessToken) {
            return base.Channel.GetAPILimits(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAPILimitsResponse> GetAPILimitsAsync(string accessToken) {
            return base.Channel.GetAPILimitsAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetSiteStatsResponse GetSiteStats(string accessToken) {
            return base.Channel.GetSiteStats(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetSiteStatsResponse> GetSiteStatsAsync(string accessToken) {
            return base.Channel.GetSiteStatsAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetStatusMessageResponse GetStatusMessages(string accessToken) {
            return base.Channel.GetStatusMessages(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetStatusMessageResponse> GetStatusMessagesAsync(string accessToken) {
            return base.Channel.GetStatusMessagesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetImagesForGeocacheResponse GetImagesForGeocache(string accessToken, string cacheCode) {
            return base.Channel.GetImagesForGeocache(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetImagesForGeocacheResponse> GetImagesForGeocacheAsync(string accessToken, string cacheCode) {
            return base.Channel.GetImagesForGeocacheAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetWptLogTypesResponse GetWptLogTypes(string accessToken) {
            return base.Channel.GetWptLogTypes(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetWptLogTypesResponse> GetWptLogTypesAsync(string accessToken) {
            return base.Channel.GetWptLogTypesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheTypesResponse GetGeocacheTypes(string accessToken) {
            return base.Channel.GetGeocacheTypes(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheTypesResponse> GetGeocacheTypesAsync(string accessToken) {
            return base.Channel.GetGeocacheTypesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse GetGeocacheDataTypes(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes) {
            return base.Channel.GetGeocacheDataTypes(accessToken, geocacheTypes, logTypes, attributeTypes);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataTypesResponse> GetGeocacheDataTypesAsync(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes) {
            return base.Channel.GetGeocacheDataTypesAsync(accessToken, geocacheTypes, logTypes, attributeTypes);
        }
        
        public WinCachebox.ServiceReference1.GetPocketQueryListResponse GetPocketQueryList(string accessToken) {
            return base.Channel.GetPocketQueryList(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryListResponse> GetPocketQueryListAsync(string accessToken) {
            return base.Channel.GetPocketQueryListAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly) {
            return base.Channel.GetPocketQueryData(accessToken, pocketQueryGuid, startItem, maxItems, gcListOnly);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly) {
            return base.Channel.GetPocketQueryDataAsync(accessToken, pocketQueryGuid, startItem, maxItems, gcListOnly);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetFullPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems) {
            return base.Channel.GetFullPocketQueryData(accessToken, pocketQueryGuid, startItem, maxItems);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetFullPocketQueryDataAsync(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems) {
            return base.Channel.GetFullPocketQueryDataAsync(accessToken, pocketQueryGuid, startItem, maxItems);
        }
        
        public WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse GetPocketQueryZippedFile(string accessToken, System.Guid pocketQueryGuid) {
            return base.Channel.GetPocketQueryZippedFile(accessToken, pocketQueryGuid);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPocketQueryZippedFileResponse> GetPocketQueryZippedFileAsync(string accessToken, System.Guid pocketQueryGuid) {
            return base.Channel.GetPocketQueryZippedFileAsync(accessToken, pocketQueryGuid);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTrackingNumber(string accessToken, string trackingNumber, int trackableLogCount) {
            return base.Channel.GetTrackablesByTrackingNumber(accessToken, trackingNumber, trackableLogCount);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTrackingNumberAsync(string accessToken, string trackingNumber, int trackableLogCount) {
            return base.Channel.GetTrackablesByTrackingNumberAsync(accessToken, trackingNumber, trackableLogCount);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesByTBCode(string accessToken, string tbCode, int trackableLogCount) {
            return base.Channel.GetTrackablesByTBCode(accessToken, tbCode, trackableLogCount);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesByTBCodeAsync(string accessToken, string tbCode, int trackableLogCount) {
            return base.Channel.GetTrackablesByTBCodeAsync(accessToken, tbCode, trackableLogCount);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableResponse GetTrackablesInCache(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount) {
            return base.Channel.GetTrackablesInCache(accessToken, cacheCode, startIndex, maxPerPage, trackableLogCount);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableResponse> GetTrackablesInCacheAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount) {
            return base.Channel.GetTrackablesInCacheAsync(accessToken, cacheCode, startIndex, maxPerPage, trackableLogCount);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableTravelResponse GetTrackableTravelList(string accessToken, string tbCode) {
            return base.Channel.GetTrackableTravelList(accessToken, tbCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableTravelResponse> GetTrackableTravelListAsync(string accessToken, string tbCode) {
            return base.Channel.GetTrackableTravelListAsync(accessToken, tbCode);
        }
        
        public WinCachebox.ServiceReference1.GetAttributeTypesDataResponse GetAttributeTypesData(string accessToken) {
            return base.Channel.GetAttributeTypesData(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAttributeTypesDataResponse> GetAttributeTypesDataAsync(string accessToken) {
            return base.Channel.GetAttributeTypesDataAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetUserCredentialsResponse GetUserCredentials(string consumerKey, System.Guid licenseGuid, string username, string password) {
            return base.Channel.GetUserCredentials(consumerKey, licenseGuid, username, password);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserCredentialsResponse> GetUserCredentialsAsync(string consumerKey, System.Guid licenseGuid, string username, string password) {
            return base.Channel.GetUserCredentialsAsync(consumerKey, licenseGuid, username, password);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse DeleteCacheNote(string accessToken, string cacheCode) {
            return base.Channel.DeleteCacheNote(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteCacheNoteAsync(string accessToken, string cacheCode) {
            return base.Channel.DeleteCacheNoteAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheLogResponse GetGeocacheLogsByCacheCode(string accessToken, string cacheCode, int startIndex, int maxPerPage) {
            return base.Channel.GetGeocacheLogsByCacheCode(accessToken, cacheCode, startIndex, maxPerPage);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheLogResponse> GetGeocacheLogsByCacheCodeAsync(string accessToken, string cacheCode, int startIndex, int maxPerPage) {
            return base.Channel.GetGeocacheLogsByCacheCodeAsync(accessToken, cacheCode, startIndex, maxPerPage);
        }
        
        public WinCachebox.ServiceReference1.GetTrackableLogsResponse GetTrackableLogsByTBCode(string accessToken, string tbCode, int startIndex, int maxPerPage) {
            return base.Channel.GetTrackableLogsByTBCode(accessToken, tbCode, startIndex, maxPerPage);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetTrackableLogsResponse> GetTrackableLogsByTBCodeAsync(string accessToken, string tbCode, int startIndex, int maxPerPage) {
            return base.Channel.GetTrackableLogsByTBCodeAsync(accessToken, tbCode, startIndex, maxPerPage);
        }
        
        public WinCachebox.ServiceReference1.GetUsersCacheNotesResponse GetUsersCacheNotes(string accessToken, int startIndex, int maxPerPage) {
            return base.Channel.GetUsersCacheNotes(accessToken, startIndex, maxPerPage);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUsersCacheNotesResponse> GetUsersCacheNotesAsync(string accessToken, int startIndex, int maxPerPage) {
            return base.Channel.GetUsersCacheNotesAsync(accessToken, startIndex, maxPerPage);
        }
        
        public WinCachebox.ServiceReference1.GetUserWaypointsResponse GetUserWaypoints(string accessToken, string cacheCode) {
            return base.Channel.GetUserWaypoints(accessToken, cacheCode);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserWaypointsResponse> GetUserWaypointsAsync(string accessToken, string cacheCode) {
            return base.Channel.GetUserWaypointsAsync(accessToken, cacheCode);
        }
        
        public WinCachebox.ServiceReference1.StatusResponse DeleteUserWaypoint(string accessToken, long waypointID) {
            return base.Channel.DeleteUserWaypoint(accessToken, waypointID);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusResponse> DeleteUserWaypointAsync(string accessToken, long waypointID) {
            return base.Channel.DeleteUserWaypointAsync(accessToken, waypointID);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheDataResponse GetCacheByTileGuid(string accessToken, string tileGuid) {
            return base.Channel.GetCacheByTileGuid(accessToken, tileGuid);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheDataResponse> GetCacheByTileGuidAsync(string accessToken, string tileGuid) {
            return base.Channel.GetCacheByTileGuidAsync(accessToken, tileGuid);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public WinCachebox.ServiceReference1.AddAdventureHistoryItemResponse AddAdventureHistoryItem(WinCachebox.ServiceReference1.AddAdventureHistoryItemRequest request) {
            return base.Channel.AddAdventureHistoryItem(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AddAdventureHistoryItemResponse> AddAdventureHistoryItemAsync(WinCachebox.ServiceReference1.AddAdventureHistoryItemRequest request) {
            return base.Channel.AddAdventureHistoryItemAsync(request);
        }
        
        public WinCachebox.ServiceReference1.DeleteLabCountItemResponse DeleteLabCountItem(WinCachebox.ServiceReference1.DeleteLabCountItemRequest request) {
            return base.Channel.DeleteLabCountItem(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.DeleteLabCountItemResponse> DeleteLabCountItemAsync(WinCachebox.ServiceReference1.DeleteLabCountItemRequest request) {
            return base.Channel.DeleteLabCountItemAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetBeginnerGeocacheDataResponse GetBeginnerCaches(WinCachebox.ServiceReference1.GetBeginnerCachesRequest request) {
            return base.Channel.GetBeginnerCaches(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetBeginnerGeocacheDataResponse> GetBeginnerCachesAsync(WinCachebox.ServiceReference1.GetBeginnerCachesRequest request) {
            return base.Channel.GetBeginnerCachesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetUserFindCountsResponse GetUserFindCounts(WinCachebox.ServiceReference1.GetUserFindCountsRequest request) {
            return base.Channel.GetUserFindCounts(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserFindCountsResponse> GetUserFindCountsAsync(WinCachebox.ServiceReference1.GetUserFindCountsRequest request) {
            return base.Channel.GetUserFindCountsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetRegionsResponse GetRegions(WinCachebox.ServiceReference1.GetRegionsRequest request) {
            return base.Channel.GetRegions(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetRegionsResponse> GetRegionsAsync(WinCachebox.ServiceReference1.GetRegionsRequest request) {
            return base.Channel.GetRegionsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetCountriesResponse GetCountries(WinCachebox.ServiceReference1.GetCountriesRequest request) {
            return base.Channel.GetCountries(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetCountriesResponse> GetCountriesAsync(WinCachebox.ServiceReference1.GetCountriesRequest request) {
            return base.Channel.GetCountriesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryResponse GetGeocachesFromPocketQuery(WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryRequest request) {
            return base.Channel.GetGeocachesFromPocketQuery(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryResponse> GetGeocachesFromPocketQueryAsync(WinCachebox.ServiceReference1.GetGeocachesFromPocketQueryRequest request) {
            return base.Channel.GetGeocachesFromPocketQueryAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetContainerTypesResponse GetGeocacheContainerTypes(string accessToken) {
            return base.Channel.GetGeocacheContainerTypes(accessToken);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetContainerTypesResponse> GetGeocacheContainerTypesAsync(string accessToken) {
            return base.Channel.GetGeocacheContainerTypesAsync(accessToken);
        }
        
        public WinCachebox.ServiceReference1.GetUserHideCountsResponse GetUserHideCounts(WinCachebox.ServiceReference1.GetUserHideCountsRequest request) {
            return base.Channel.GetUserHideCounts(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetUserHideCountsResponse> GetUserHideCountsAsync(WinCachebox.ServiceReference1.GetUserHideCountsRequest request) {
            return base.Channel.GetUserHideCountsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheHealthResponse GetGeocacheHealth(WinCachebox.ServiceReference1.GetGeocacheHealthRequest request) {
            return base.Channel.GetGeocacheHealth(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheHealthResponse> GetGeocacheHealthAsync(WinCachebox.ServiceReference1.GetGeocacheHealthRequest request) {
            return base.Channel.GetGeocacheHealthAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationResponse GetLatestGeocacheHealthNotification(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request) {
            return base.Channel.GetLatestGeocacheHealthNotification(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetLatestGeocacheHealthNotificationResponse> GetLatestGeocacheHealthNotificationAsync(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request) {
            return base.Channel.GetLatestGeocacheHealthNotificationAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationResponse GetActiveGeocacheHealthNotification(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request) {
            return base.Channel.GetActiveGeocacheHealthNotification(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetActiveGeocacheHealthNotificationResponse> GetActiveGeocacheHealthNotificationAsync(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request) {
            return base.Channel.GetActiveGeocacheHealthNotificationAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryResponse GetGeocacheHealthNotificationHistory(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request) {
            return base.Channel.GetGeocacheHealthNotificationHistory(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetGeocacheHealthNotificationHistoryResponse> GetGeocacheHealthNotificationHistoryAsync(WinCachebox.ServiceReference1.GetGeocacheHealthNotificationRequest request) {
            return base.Channel.GetGeocacheHealthNotificationHistoryAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetNearbyCacheStatsResponse GetNearbyCacheStats(WinCachebox.ServiceReference1.GetNearbyCacheStatsRequest request) {
            return base.Channel.GetNearbyCacheStats(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetNearbyCacheStatsResponse> GetNearbyCacheStatsAsync(WinCachebox.ServiceReference1.GetNearbyCacheStatsRequest request) {
            return base.Channel.GetNearbyCacheStatsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsResponse GetPrecomputedNearbyCacheStats(WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsRequest request) {
            return base.Channel.GetPrecomputedNearbyCacheStats(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsResponse> GetPrecomputedNearbyCacheStatsAsync(WinCachebox.ServiceReference1.GetPrecomputedNearbyCacheStatsRequest request) {
            return base.Channel.GetPrecomputedNearbyCacheStatsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.SetUserAvatarImageResponse SetUserAvatarImage(WinCachebox.ServiceReference1.SetUserAvatarImageRequest request) {
            return base.Channel.SetUserAvatarImage(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SetUserAvatarImageResponse> SetUserAvatarImageAsync(WinCachebox.ServiceReference1.SetUserAvatarImageRequest request) {
            return base.Channel.SetUserAvatarImageAsync(request);
        }
        
        public WinCachebox.ServiceReference1.DisableAccountResponse DisableAccount(WinCachebox.ServiceReference1.DisableAccountRequest request) {
            return base.Channel.DisableAccount(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.DisableAccountResponse> DisableAccountAsync(WinCachebox.ServiceReference1.DisableAccountRequest request) {
            return base.Channel.DisableAccountAsync(request);
        }
        
        public WinCachebox.ServiceReference1.AuthorizeAccountResponse AuthorizeAccount(WinCachebox.ServiceReference1.AuthorizeAccountRequest authorizeAccountRequest) {
            return base.Channel.AuthorizeAccount(authorizeAccountRequest);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AuthorizeAccountResponse> AuthorizeAccountAsync(WinCachebox.ServiceReference1.AuthorizeAccountRequest authorizeAccountRequest) {
            return base.Channel.AuthorizeAccountAsync(authorizeAccountRequest);
        }
        
        public WinCachebox.ServiceReference1.CreateAccountPublicResponse CreateForSocialMedia(WinCachebox.ServiceReference1.SocialMediaAccountCreateRequestPublic socialMediaAccountCreateRequestPublic) {
            return base.Channel.CreateForSocialMedia(socialMediaAccountCreateRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateAccountPublicResponse> CreateForSocialMediaAsync(WinCachebox.ServiceReference1.SocialMediaAccountCreateRequestPublic socialMediaAccountCreateRequestPublic) {
            return base.Channel.CreateForSocialMediaAsync(socialMediaAccountCreateRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.SocialMediaLinkAccountsResponse SocialMediaLinkAccounts(WinCachebox.ServiceReference1.SocialMediaLinkAccountsRequestPublic socialMediaLinkAccountsRequest) {
            return base.Channel.SocialMediaLinkAccounts(socialMediaLinkAccountsRequest);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaLinkAccountsResponse> SocialMediaLinkAccountsAsync(WinCachebox.ServiceReference1.SocialMediaLinkAccountsRequestPublic socialMediaLinkAccountsRequest) {
            return base.Channel.SocialMediaLinkAccountsAsync(socialMediaLinkAccountsRequest);
        }
        
        public WinCachebox.ServiceReference1.SocialMediaRevokeAccessResponse SocialMediaRevokeAccess(WinCachebox.ServiceReference1.SocialMediaRevokeAccessRequestPublic socialMediaRevokeAccessRequest) {
            return base.Channel.SocialMediaRevokeAccess(socialMediaRevokeAccessRequest);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaRevokeAccessResponse> SocialMediaRevokeAccessAsync(WinCachebox.ServiceReference1.SocialMediaRevokeAccessRequestPublic socialMediaRevokeAccessRequest) {
            return base.Channel.SocialMediaRevokeAccessAsync(socialMediaRevokeAccessRequest);
        }
        
        public WinCachebox.ServiceReference1.SocialMediaUpdateStatusResponse SocialMediaUpdateStatus(WinCachebox.ServiceReference1.SocialMediaUpdateStatusRequestPublic socialMediaUpdateStatusRequest) {
            return base.Channel.SocialMediaUpdateStatus(socialMediaUpdateStatusRequest);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaUpdateStatusResponse> SocialMediaUpdateStatusAsync(WinCachebox.ServiceReference1.SocialMediaUpdateStatusRequestPublic socialMediaUpdateStatusRequest) {
            return base.Channel.SocialMediaUpdateStatusAsync(socialMediaUpdateStatusRequest);
        }
        
        public WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedResponse SocialMediaVerifyAccountLinked(WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedRequestPublic socialMediaVerifyAccountLinkedRequest) {
            return base.Channel.SocialMediaVerifyAccountLinked(socialMediaVerifyAccountLinkedRequest);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedResponse> SocialMediaVerifyAccountLinkedAsync(WinCachebox.ServiceReference1.SocialMediaVerifyAccountLinkedRequestPublic socialMediaVerifyAccountLinkedRequest) {
            return base.Channel.SocialMediaVerifyAccountLinkedAsync(socialMediaVerifyAccountLinkedRequest);
        }
        
        public WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsResponse SocialMediaVerifyAllLinkedAccounts(WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsRequestPublic socialMediaVerifyAllLinkedAccountsRequestPublic) {
            return base.Channel.SocialMediaVerifyAllLinkedAccounts(socialMediaVerifyAllLinkedAccountsRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsResponse> SocialMediaVerifyAllLinkedAccountsAsync(WinCachebox.ServiceReference1.SocialMediaVerifyAllLinkedAccountsRequestPublic socialMediaVerifyAllLinkedAccountsRequestPublic) {
            return base.Channel.SocialMediaVerifyAllLinkedAccountsAsync(socialMediaVerifyAllLinkedAccountsRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.PasswordResponse UserChangePassword(WinCachebox.ServiceReference1.UserChangePasswordRequestPublic userChangePasswordRequestPublic) {
            return base.Channel.UserChangePassword(userChangePasswordRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.PasswordResponse> UserChangePasswordAsync(WinCachebox.ServiceReference1.UserChangePasswordRequestPublic userChangePasswordRequestPublic) {
            return base.Channel.UserChangePasswordAsync(userChangePasswordRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.LoginResponsePublic Login(WinCachebox.ServiceReference1.LoginRequestPublic loginRequestPublic) {
            return base.Channel.Login(loginRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.LoginResponsePublic> LoginAsync(WinCachebox.ServiceReference1.LoginRequestPublic loginRequestPublic) {
            return base.Channel.LoginAsync(loginRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.GetAccountResponse GetAccount(WinCachebox.ServiceReference1.GetAccountRequest request) {
            return base.Channel.GetAccount(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAccountResponse> GetAccountAsync(WinCachebox.ServiceReference1.GetAccountRequest request) {
            return base.Channel.GetAccountAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetAccountsResponse GetAccounts(WinCachebox.ServiceReference1.GetAccountsRequest request) {
            return base.Channel.GetAccounts(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAccountsResponse> GetAccountsAsync(WinCachebox.ServiceReference1.GetAccountsRequest request) {
            return base.Channel.GetAccountsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.AccessTokenResponse GetGroundspeakAccessToken(WinCachebox.ServiceReference1.GetAccessTokenRequest request) {
            return base.Channel.GetGroundspeakAccessToken(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccessTokenResponse> GetGroundspeakAccessTokenAsync(WinCachebox.ServiceReference1.GetAccessTokenRequest request) {
            return base.Channel.GetGroundspeakAccessTokenAsync(request);
        }
        
        public WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic SocialMediaLogin(WinCachebox.ServiceReference1.SocialMediaLoginRequestPublic socialMediaLoginRequestPublic) {
            return base.Channel.SocialMediaLogin(socialMediaLoginRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SocialMediaLoginResponsePublic> SocialMediaLoginAsync(WinCachebox.ServiceReference1.SocialMediaLoginRequestPublic socialMediaLoginRequestPublic) {
            return base.Channel.SocialMediaLoginAsync(socialMediaLoginRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.UsernameValidAndAvailableResponse IsUserNameValidAndAvailable(WinCachebox.ServiceReference1.IsUserNameValidAndAvailableRequestPublic isUserNameValidAndAvailableRequestPublic) {
            return base.Channel.IsUserNameValidAndAvailable(isUserNameValidAndAvailableRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UsernameValidAndAvailableResponse> IsUserNameValidAndAvailableAsync(WinCachebox.ServiceReference1.IsUserNameValidAndAvailableRequestPublic isUserNameValidAndAvailableRequestPublic) {
            return base.Channel.IsUserNameValidAndAvailableAsync(isUserNameValidAndAvailableRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.CreateAccountPublicResponse CreateStandardAccount(WinCachebox.ServiceReference1.CreateStandardAccountRequestPublic createStandardAccountRequestPublic) {
            return base.Channel.CreateStandardAccount(createStandardAccountRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.CreateAccountPublicResponse> CreateStandardAccountAsync(WinCachebox.ServiceReference1.CreateStandardAccountRequestPublic createStandardAccountRequestPublic) {
            return base.Channel.CreateStandardAccountAsync(createStandardAccountRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.StatusOnlyResponse RecoverPassword(WinCachebox.ServiceReference1.RecoverPasswordRequestPublic recoverPasswordRequestPublic) {
            return base.Channel.RecoverPassword(recoverPasswordRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.StatusOnlyResponse> RecoverPasswordAsync(WinCachebox.ServiceReference1.RecoverPasswordRequestPublic recoverPasswordRequestPublic) {
            return base.Channel.RecoverPasswordAsync(recoverPasswordRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.GetReferAFriendShortUrlResponse GetReferAFriendShortUrl(WinCachebox.ServiceReference1.GetReferAFriendShortUrlRequestPublic request) {
            return base.Channel.GetReferAFriendShortUrl(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetReferAFriendShortUrlResponse> GetReferAFriendShortUrlAsync(WinCachebox.ServiceReference1.GetReferAFriendShortUrlRequestPublic request) {
            return base.Channel.GetReferAFriendShortUrlAsync(request);
        }
        
        public WinCachebox.ServiceReference1.GetAccountReferralStatisticsResponse GetAccountReferralStatistics(WinCachebox.ServiceReference1.GetAccountReferralStatisticsRequestPublic request) {
            return base.Channel.GetAccountReferralStatistics(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.GetAccountReferralStatisticsResponse> GetAccountReferralStatisticsAsync(WinCachebox.ServiceReference1.GetAccountReferralStatisticsRequestPublic request) {
            return base.Channel.GetAccountReferralStatisticsAsync(request);
        }
        
        public WinCachebox.ServiceReference1.AccountResponse SendReferAFriendEmail(WinCachebox.ServiceReference1.ReferAFriendEmailRequestPublic referAFriendEmailRequestPublic) {
            return base.Channel.SendReferAFriendEmail(referAFriendEmailRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> SendReferAFriendEmailAsync(WinCachebox.ServiceReference1.ReferAFriendEmailRequestPublic referAFriendEmailRequestPublic) {
            return base.Channel.SendReferAFriendEmailAsync(referAFriendEmailRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.SendValidationEmailResponse SendValidationEmail(WinCachebox.ServiceReference1.SendValidationEmailRequest request) {
            return base.Channel.SendValidationEmail(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SendValidationEmailResponse> SendValidationEmailAsync(WinCachebox.ServiceReference1.SendValidationEmailRequest request) {
            return base.Channel.SendValidationEmailAsync(request);
        }
        
        public WinCachebox.ServiceReference1.UserNameResponse RecoverUsername(WinCachebox.ServiceReference1.RecoverUsernameRequestPublic recoverUsernameRequestPublic) {
            return base.Channel.RecoverUsername(recoverUsernameRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.UserNameResponse> RecoverUsernameAsync(WinCachebox.ServiceReference1.RecoverUsernameRequestPublic recoverUsernameRequestPublic) {
            return base.Channel.RecoverUsernameAsync(recoverUsernameRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.SetLocaleResponse SetLocale(WinCachebox.ServiceReference1.SetLocaleRequest request) {
            return base.Channel.SetLocale(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SetLocaleResponse> SetLocaleAsync(WinCachebox.ServiceReference1.SetLocaleRequest request) {
            return base.Channel.SetLocaleAsync(request);
        }
        
        public WinCachebox.ServiceReference1.EmailPreferencesResponse GetEmailPreferencesForAccount(WinCachebox.ServiceReference1.GetEmailPreferencesForAccountRequestPublic request) {
            return base.Channel.GetEmailPreferencesForAccount(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.EmailPreferencesResponse> GetEmailPreferencesForAccountAsync(WinCachebox.ServiceReference1.GetEmailPreferencesForAccountRequestPublic request) {
            return base.Channel.GetEmailPreferencesForAccountAsync(request);
        }
        
        public WinCachebox.ServiceReference1.EmailPreferencesResponse GetEmailPreferences(WinCachebox.ServiceReference1.GetEmailPreferencesRequestPublic request) {
            return base.Channel.GetEmailPreferences(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.EmailPreferencesResponse> GetEmailPreferencesAsync(WinCachebox.ServiceReference1.GetEmailPreferencesRequestPublic request) {
            return base.Channel.GetEmailPreferencesAsync(request);
        }
        
        public WinCachebox.ServiceReference1.AccountResponse UpdateEmailPreferencesForAccount(WinCachebox.ServiceReference1.UpdateEmailPreferencesForAccountRequestPublic request) {
            return base.Channel.UpdateEmailPreferencesForAccount(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> UpdateEmailPreferencesForAccountAsync(WinCachebox.ServiceReference1.UpdateEmailPreferencesForAccountRequestPublic request) {
            return base.Channel.UpdateEmailPreferencesForAccountAsync(request);
        }
        
        public WinCachebox.ServiceReference1.AccountResponse RemoveEmailPreferencesForAccount(WinCachebox.ServiceReference1.RemoveEmailPreferencesForAccountRequestPublic request) {
            return base.Channel.RemoveEmailPreferencesForAccount(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> RemoveEmailPreferencesForAccountAsync(WinCachebox.ServiceReference1.RemoveEmailPreferencesForAccountRequestPublic request) {
            return base.Channel.RemoveEmailPreferencesForAccountAsync(request);
        }
        
        public WinCachebox.ServiceReference1.SetAccountToValidatedResponse SetAccountToValidated(WinCachebox.ServiceReference1.SetAccountToValidatedRequestPublic request) {
            return base.Channel.SetAccountToValidated(request);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.SetAccountToValidatedResponse> SetAccountToValidatedAsync(WinCachebox.ServiceReference1.SetAccountToValidatedRequestPublic request) {
            return base.Channel.SetAccountToValidatedAsync(request);
        }
        
        public WinCachebox.ServiceReference1.AccountResponse SetHomeCoordinates(WinCachebox.ServiceReference1.SetHomeCoordinatesRequestPublic setHomeCoordinatesRequestPublic) {
            return base.Channel.SetHomeCoordinates(setHomeCoordinatesRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.AccountResponse> SetHomeCoordinatesAsync(WinCachebox.ServiceReference1.SetHomeCoordinatesRequestPublic setHomeCoordinatesRequestPublic) {
            return base.Channel.SetHomeCoordinatesAsync(setHomeCoordinatesRequestPublic);
        }
        
        public WinCachebox.ServiceReference1.IsEmailAddressInUseResponse IsEmailAddressInUse(WinCachebox.ServiceReference1.IsEmailAddressInUseRequestPublic isEmailAddressInUseRequestPublic) {
            return base.Channel.IsEmailAddressInUse(isEmailAddressInUseRequestPublic);
        }
        
        public System.Threading.Tasks.Task<WinCachebox.ServiceReference1.IsEmailAddressInUseResponse> IsEmailAddressInUseAsync(WinCachebox.ServiceReference1.IsEmailAddressInUseRequestPublic isEmailAddressInUseRequestPublic) {
            return base.Channel.IsEmailAddressInUseAsync(isEmailAddressInUseRequestPublic);
        }
    }
}
