// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace GeocachingAPI
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// GeoTours operations.
    /// </summary>
    public partial interface IGeoTours
    {
        /// <summary>
        /// Get a GeoTour
        /// </summary>
        /// <param name='referenceCode'>
        /// Identifier of the GeoTour (e.g. GT7)
        /// </param>
        /// <param name='apiVersion'>
        /// The requested API version
        /// </param>
        /// <param name='fields'>
        /// Properties you want to return, defaults to "referencecode"
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<GeoTour>>> GetGeoTourWithHttpMessagesAsync(string referenceCode, string apiVersion, string fields = "referenceCode", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get GeoTours
        /// </summary>
        /// <param name='apiVersion'>
        /// The requested API version
        /// </param>
        /// <param name='sort'>
        /// Defaults to unsorted (distance, name). If using distance sorting,
        /// must provide latitude and longitude (e.g. dist+:[47,-122])
        /// </param>
        /// <param name='skip'>
        /// Defaults to 0, how many geocaches to skip
        /// </param>
        /// <param name='take'>
        /// Defaults to 20, how many geocaches to return
        /// </param>
        /// <param name='fields'>
        /// Properties you want to return, defaults to "referencecode"
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<GeoTour>>> GetGeoToursWithHttpMessagesAsync(string apiVersion, string sort = "", int? skip = 0, int? take = 20, string fields = "referenceCode", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the geocaches on the GeoTour
        /// </summary>
        /// This method will return a list of geocaches.
        /// <param name='referenceCode'>
        /// Identifier of the GeoTour (e.g. GT7)
        /// </param>
        /// <param name='apiVersion'>
        /// The requested API version
        /// </param>
        /// <param name='lite'>
        /// Select to return a geocache object without the description and
        /// hints
        /// </param>
        /// <param name='skip'>
        /// Defaults to 0, how many geocaches to skip
        /// </param>
        /// <param name='take'>
        /// Defaults to 20, how many geocaches to return
        /// </param>
        /// <param name='sort'>
        /// Options are distance (must provide lat/lng), name (of the
        /// geocache), favorites, and geotour (order defined by GeoTour).
        /// Defaults to geotour.
        /// </param>
        /// <param name='expand'>
        /// fields to include with base geocache object
        /// </param>
        /// <param name='fields'>
        /// fields you want to return, defaults to "referencecode"
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Geocache>>> GetGeocachesByGeoTourWithHttpMessagesAsync(string referenceCode, string apiVersion, bool? lite = false, int? skip = 0, int? take = 20, string sort = "gt+", string expand = "", string fields = "referenceCode", Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
