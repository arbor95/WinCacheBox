// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace GeocachingAPI.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class UserData
    {
        /// <summary>
        /// Initializes a new instance of the UserData class.
        /// </summary>
        public UserData() { }

        /// <summary>
        /// Initializes a new instance of the UserData class.
        /// </summary>
        public UserData(DateTime? foundDate = default(DateTime?), DateTime? dnfDate = default(DateTime?), Coordinates correctedCoordinates = default(Coordinates), bool? isFavorited = default(bool?), string note = default(string))
        {
            FoundDate = foundDate;
            DnfDate = dnfDate;
            CorrectedCoordinates = correctedCoordinates;
            IsFavorited = isFavorited;
            Note = note;
        }

        /// <summary>
        /// The date the user found the Geocache
        /// </summary>
        [JsonProperty(PropertyName = "foundDate")]
        public DateTime? FoundDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dnfDate")]
        public DateTime? DnfDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "correctedCoordinates")]
        public Coordinates CorrectedCoordinates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFavorited")]
        public bool? IsFavorited { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "note")]
        public string Note { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.CorrectedCoordinates != null)
            {
                this.CorrectedCoordinates.Validate();
            }
        }
    }
}
