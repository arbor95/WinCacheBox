// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace GeocachingAPI.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class PromotedDraft
    {
        /// <summary>
        /// Initializes a new instance of the PromotedDraft class.
        /// </summary>
        public PromotedDraft() { }

        /// <summary>
        /// Initializes a new instance of the PromotedDraft class.
        /// </summary>
        public PromotedDraft(GeocacheLog geocacheLog = default(GeocacheLog), IList<Image> successfulImages = default(IList<Image>), IList<Image> failedImages = default(IList<Image>), bool? favoritePointApplied = default(bool?), bool? draftDeleted = default(bool?))
        {
            GeocacheLog = geocacheLog;
            SuccessfulImages = successfulImages;
            FailedImages = failedImages;
            FavoritePointApplied = favoritePointApplied;
            DraftDeleted = draftDeleted;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "geocacheLog")]
        public GeocacheLog GeocacheLog { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "successfulImages")]
        public IList<Image> SuccessfulImages { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "failedImages")]
        public IList<Image> FailedImages { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "favoritePointApplied")]
        public bool? FavoritePointApplied { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "draftDeleted")]
        public bool? DraftDeleted { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.GeocacheLog != null)
            {
                this.GeocacheLog.Validate();
            }
        }
    }
}
