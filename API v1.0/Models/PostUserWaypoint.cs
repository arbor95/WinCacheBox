// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace GeocachingAPI.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class PostUserWaypoint
    {
        /// <summary>
        /// Initializes a new instance of the PostUserWaypoint class.
        /// </summary>
        public PostUserWaypoint() { }

        /// <summary>
        /// Initializes a new instance of the PostUserWaypoint class.
        /// </summary>
        public PostUserWaypoint(bool isCorrectedCoordinates, Coordinates coordinates, string geocacheCode, string description = default(string))
        {
            Description = description;
            IsCorrectedCoordinates = isCorrectedCoordinates;
            Coordinates = coordinates;
            GeocacheCode = geocacheCode;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isCorrectedCoordinates")]
        public bool IsCorrectedCoordinates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "coordinates")]
        public Coordinates Coordinates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "geocacheCode")]
        public string GeocacheCode { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Coordinates == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Coordinates");
            }
            if (GeocacheCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GeocacheCode");
            }
            if (this.Coordinates != null)
            {
                this.Coordinates.Validate();
            }
        }
    }
}
